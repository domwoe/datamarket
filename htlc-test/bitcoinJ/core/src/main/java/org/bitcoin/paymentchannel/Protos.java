// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: paymentchannel.proto

package org.bitcoin.paymentchannel;

public final class Protos {
  private Protos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TwoWayChannelMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;
    /**
     * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
     *
     * <pre>
     * This is required so if a new message type is added in future, old software aborts trying
     * to read the message as early as possible. If the message doesn't parse, the socket should
     * be closed.
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
     *
     * <pre>
     * This is required so if a new message type is added in future, old software aborts trying
     * to read the message as early as possible. If the message doesn't parse, the socket should
     * be closed.
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType getType();

    // optional .paymentchannels.ClientVersion client_version = 2;
    /**
     * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
     *
     * <pre>
     * Now one optional field for each message. Only the field specified by type should be read.
     * </pre>
     */
    boolean hasClientVersion();
    /**
     * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
     *
     * <pre>
     * Now one optional field for each message. Only the field specified by type should be read.
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.ClientVersion getClientVersion();
    /**
     * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
     *
     * <pre>
     * Now one optional field for each message. Only the field specified by type should be read.
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.ClientVersionOrBuilder getClientVersionOrBuilder();

    // optional .paymentchannels.ServerVersion server_version = 3;
    /**
     * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
     */
    boolean hasServerVersion();
    /**
     * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
     */
    org.bitcoin.paymentchannel.Protos.ServerVersion getServerVersion();
    /**
     * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
     */
    org.bitcoin.paymentchannel.Protos.ServerVersionOrBuilder getServerVersionOrBuilder();

    // optional .paymentchannels.Initiate initiate = 4;
    /**
     * <code>optional .paymentchannels.Initiate initiate = 4;</code>
     */
    boolean hasInitiate();
    /**
     * <code>optional .paymentchannels.Initiate initiate = 4;</code>
     */
    org.bitcoin.paymentchannel.Protos.Initiate getInitiate();
    /**
     * <code>optional .paymentchannels.Initiate initiate = 4;</code>
     */
    org.bitcoin.paymentchannel.Protos.InitiateOrBuilder getInitiateOrBuilder();

    // optional .paymentchannels.ProvideRefund provide_refund = 5;
    /**
     * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
     */
    boolean hasProvideRefund();
    /**
     * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
     */
    org.bitcoin.paymentchannel.Protos.ProvideRefund getProvideRefund();
    /**
     * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
     */
    org.bitcoin.paymentchannel.Protos.ProvideRefundOrBuilder getProvideRefundOrBuilder();

    // optional .paymentchannels.ReturnRefund return_refund = 6;
    /**
     * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
     */
    boolean hasReturnRefund();
    /**
     * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
     */
    org.bitcoin.paymentchannel.Protos.ReturnRefund getReturnRefund();
    /**
     * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
     */
    org.bitcoin.paymentchannel.Protos.ReturnRefundOrBuilder getReturnRefundOrBuilder();

    // optional .paymentchannels.ProvideContract provide_contract = 7;
    /**
     * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
     */
    boolean hasProvideContract();
    /**
     * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
     */
    org.bitcoin.paymentchannel.Protos.ProvideContract getProvideContract();
    /**
     * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
     */
    org.bitcoin.paymentchannel.Protos.ProvideContractOrBuilder getProvideContractOrBuilder();

    // optional .paymentchannels.UpdatePayment update_payment = 8;
    /**
     * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
     */
    boolean hasUpdatePayment();
    /**
     * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
     */
    org.bitcoin.paymentchannel.Protos.UpdatePayment getUpdatePayment();
    /**
     * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
     */
    org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder getUpdatePaymentOrBuilder();

    // optional .paymentchannels.PaymentAck payment_ack = 11;
    /**
     * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
     */
    boolean hasPaymentAck();
    /**
     * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
     */
    org.bitcoin.paymentchannel.Protos.PaymentAck getPaymentAck();
    /**
     * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
     */
    org.bitcoin.paymentchannel.Protos.PaymentAckOrBuilder getPaymentAckOrBuilder();

    // optional .paymentchannels.Settlement settlement = 9;
    /**
     * <code>optional .paymentchannels.Settlement settlement = 9;</code>
     */
    boolean hasSettlement();
    /**
     * <code>optional .paymentchannels.Settlement settlement = 9;</code>
     */
    org.bitcoin.paymentchannel.Protos.Settlement getSettlement();
    /**
     * <code>optional .paymentchannels.Settlement settlement = 9;</code>
     */
    org.bitcoin.paymentchannel.Protos.SettlementOrBuilder getSettlementOrBuilder();

    // optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;
    /**
     * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
     */
    boolean hasHtlcProvideContract();
    /**
     * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCProvideContract getHtlcProvideContract();
    /**
     * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCProvideContractOrBuilder getHtlcProvideContractOrBuilder();

    // optional .paymentchannels.HTLCInit htlc_init = 13;
    /**
     * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
     */
    boolean hasHtlcInit();
    /**
     * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCInit getHtlcInit();
    /**
     * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCInitOrBuilder getHtlcInitOrBuilder();

    // optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;
    /**
     * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
     */
    boolean hasHtlcInitReply();
    /**
     * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCInitReply getHtlcInitReply();
    /**
     * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCInitReplyOrBuilder getHtlcInitReplyOrBuilder();

    // optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;
    /**
     * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
     */
    boolean hasHtlcSignedTeardown();
    /**
     * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown getHtlcSignedTeardown();
    /**
     * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardownOrBuilder getHtlcSignedTeardownOrBuilder();

    // optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;
    /**
     * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
     */
    boolean hasHtlcSignedRefundWithHash();
    /**
     * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash getHtlcSignedRefundWithHash();
    /**
     * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHashOrBuilder getHtlcSignedRefundWithHashOrBuilder();

    // optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;
    /**
     * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
     */
    boolean hasHtlcSignedSettleAndForfeit();
    /**
     * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit getHtlcSignedSettleAndForfeit();
    /**
     * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeitOrBuilder getHtlcSignedSettleAndForfeitOrBuilder();

    // optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;
    /**
     * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
     */
    boolean hasHtlcSetupComplete();
    /**
     * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSetupComplete getHtlcSetupComplete();
    /**
     * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSetupCompleteOrBuilder getHtlcSetupCompleteOrBuilder();

    // optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;
    /**
     * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
     */
    boolean hasHtlcServerUpdate();
    /**
     * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCServerUpdate getHtlcServerUpdate();
    /**
     * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCServerUpdateOrBuilder getHtlcServerUpdateOrBuilder();

    // optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;
    /**
     * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
     */
    boolean hasHtlcPaymentAck();
    /**
     * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCPaymentAck getHtlcPaymentAck();
    /**
     * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCPaymentAckOrBuilder getHtlcPaymentAckOrBuilder();

    // optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;
    /**
     * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
     */
    boolean hasHtlcRoundInit();
    /**
     * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRoundInit getHtlcRoundInit();
    /**
     * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRoundInitOrBuilder getHtlcRoundInitOrBuilder();

    // optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;
    /**
     * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
     */
    boolean hasHtlcRoundAck();
    /**
     * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRoundAck getHtlcRoundAck();
    /**
     * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRoundAckOrBuilder getHtlcRoundAckOrBuilder();

    // optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;
    /**
     * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
     */
    boolean hasHtlcRoundDone();
    /**
     * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRoundDone getHtlcRoundDone();
    /**
     * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRoundDoneOrBuilder getHtlcRoundDoneOrBuilder();

    // optional .paymentchannels.HTLCFlow htlc_flow = 25;
    /**
     * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
     */
    boolean hasHtlcFlow();
    /**
     * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCFlow getHtlcFlow();
    /**
     * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCFlowOrBuilder getHtlcFlowOrBuilder();

    // optional .paymentchannels.Error error = 10;
    /**
     * <code>optional .paymentchannels.Error error = 10;</code>
     */
    boolean hasError();
    /**
     * <code>optional .paymentchannels.Error error = 10;</code>
     */
    org.bitcoin.paymentchannel.Protos.Error getError();
    /**
     * <code>optional .paymentchannels.Error error = 10;</code>
     */
    org.bitcoin.paymentchannel.Protos.ErrorOrBuilder getErrorOrBuilder();
  }
  /**
   * Protobuf type {@code paymentchannels.TwoWayChannelMessage}
   *
   * <pre>
   * This message is designed to be either sent raw over the network (e.g. length prefixed) or embedded inside another
   * protocol that is being extended to support micropayments. In this file "primary" typically can be read as "client"
   * and "secondary" as "server".
   * </pre>
   */
  public static final class TwoWayChannelMessage extends
      com.google.protobuf.GeneratedMessage
      implements TwoWayChannelMessageOrBuilder {
    // Use TwoWayChannelMessage.newBuilder() to construct.
    private TwoWayChannelMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TwoWayChannelMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TwoWayChannelMessage defaultInstance;
    public static TwoWayChannelMessage getDefaultInstance() {
      return defaultInstance;
    }

    public TwoWayChannelMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TwoWayChannelMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType value = org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.bitcoin.paymentchannel.Protos.ClientVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = clientVersion_.toBuilder();
              }
              clientVersion_ = input.readMessage(org.bitcoin.paymentchannel.Protos.ClientVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(clientVersion_);
                clientVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              org.bitcoin.paymentchannel.Protos.ServerVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = serverVersion_.toBuilder();
              }
              serverVersion_ = input.readMessage(org.bitcoin.paymentchannel.Protos.ServerVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverVersion_);
                serverVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              org.bitcoin.paymentchannel.Protos.Initiate.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = initiate_.toBuilder();
              }
              initiate_ = input.readMessage(org.bitcoin.paymentchannel.Protos.Initiate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initiate_);
                initiate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = provideRefund_.toBuilder();
              }
              provideRefund_ = input.readMessage(org.bitcoin.paymentchannel.Protos.ProvideRefund.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(provideRefund_);
                provideRefund_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = returnRefund_.toBuilder();
              }
              returnRefund_ = input.readMessage(org.bitcoin.paymentchannel.Protos.ReturnRefund.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(returnRefund_);
                returnRefund_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              org.bitcoin.paymentchannel.Protos.ProvideContract.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = provideContract_.toBuilder();
              }
              provideContract_ = input.readMessage(org.bitcoin.paymentchannel.Protos.ProvideContract.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(provideContract_);
                provideContract_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = updatePayment_.toBuilder();
              }
              updatePayment_ = input.readMessage(org.bitcoin.paymentchannel.Protos.UpdatePayment.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(updatePayment_);
                updatePayment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              org.bitcoin.paymentchannel.Protos.Settlement.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = settlement_.toBuilder();
              }
              settlement_ = input.readMessage(org.bitcoin.paymentchannel.Protos.Settlement.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(settlement_);
                settlement_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 82: {
              org.bitcoin.paymentchannel.Protos.Error.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = error_.toBuilder();
              }
              error_ = input.readMessage(org.bitcoin.paymentchannel.Protos.Error.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(error_);
                error_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 90: {
              org.bitcoin.paymentchannel.Protos.PaymentAck.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = paymentAck_.toBuilder();
              }
              paymentAck_ = input.readMessage(org.bitcoin.paymentchannel.Protos.PaymentAck.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(paymentAck_);
                paymentAck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 98: {
              org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = htlcProvideContract_.toBuilder();
              }
              htlcProvideContract_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCProvideContract.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcProvideContract_);
                htlcProvideContract_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 106: {
              org.bitcoin.paymentchannel.Protos.HTLCInit.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = htlcInit_.toBuilder();
              }
              htlcInit_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCInit.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcInit_);
                htlcInit_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 114: {
              org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = htlcInitReply_.toBuilder();
              }
              htlcInitReply_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCInitReply.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcInitReply_);
                htlcInitReply_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 122: {
              org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = htlcSignedTeardown_.toBuilder();
              }
              htlcSignedTeardown_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcSignedTeardown_);
                htlcSignedTeardown_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
            case 130: {
              org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder subBuilder = null;
              if (((bitField0_ & 0x00004000) == 0x00004000)) {
                subBuilder = htlcSignedRefundWithHash_.toBuilder();
              }
              htlcSignedRefundWithHash_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcSignedRefundWithHash_);
                htlcSignedRefundWithHash_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00004000;
              break;
            }
            case 138: {
              org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder subBuilder = null;
              if (((bitField0_ & 0x00008000) == 0x00008000)) {
                subBuilder = htlcSignedSettleAndForfeit_.toBuilder();
              }
              htlcSignedSettleAndForfeit_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcSignedSettleAndForfeit_);
                htlcSignedSettleAndForfeit_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00008000;
              break;
            }
            case 146: {
              org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder subBuilder = null;
              if (((bitField0_ & 0x00010000) == 0x00010000)) {
                subBuilder = htlcSetupComplete_.toBuilder();
              }
              htlcSetupComplete_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcSetupComplete_);
                htlcSetupComplete_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00010000;
              break;
            }
            case 154: {
              org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder subBuilder = null;
              if (((bitField0_ & 0x00020000) == 0x00020000)) {
                subBuilder = htlcServerUpdate_.toBuilder();
              }
              htlcServerUpdate_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcServerUpdate_);
                htlcServerUpdate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00020000;
              break;
            }
            case 170: {
              org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = htlcPaymentAck_.toBuilder();
              }
              htlcPaymentAck_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcPaymentAck_);
                htlcPaymentAck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 178: {
              org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = htlcRoundInit_.toBuilder();
              }
              htlcRoundInit_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCRoundInit.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcRoundInit_);
                htlcRoundInit_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 186: {
              org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = htlcRoundAck_.toBuilder();
              }
              htlcRoundAck_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCRoundAck.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcRoundAck_);
                htlcRoundAck_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 194: {
              org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder subBuilder = null;
              if (((bitField0_ & 0x00200000) == 0x00200000)) {
                subBuilder = htlcRoundDone_.toBuilder();
              }
              htlcRoundDone_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCRoundDone.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcRoundDone_);
                htlcRoundDone_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00200000;
              break;
            }
            case 202: {
              org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder subBuilder = null;
              if (((bitField0_ & 0x00400000) == 0x00400000)) {
                subBuilder = htlcFlow_.toBuilder();
              }
              htlcFlow_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCFlow.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(htlcFlow_);
                htlcFlow_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00400000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_TwoWayChannelMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_TwoWayChannelMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.class, org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<TwoWayChannelMessage> PARSER =
        new com.google.protobuf.AbstractParser<TwoWayChannelMessage>() {
      public TwoWayChannelMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TwoWayChannelMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TwoWayChannelMessage> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code paymentchannels.TwoWayChannelMessage.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CLIENT_VERSION = 1;</code>
       */
      CLIENT_VERSION(0, 1),
      /**
       * <code>SERVER_VERSION = 2;</code>
       */
      SERVER_VERSION(1, 2),
      /**
       * <code>INITIATE = 3;</code>
       */
      INITIATE(2, 3),
      /**
       * <code>PROVIDE_REFUND = 4;</code>
       */
      PROVIDE_REFUND(3, 4),
      /**
       * <code>RETURN_REFUND = 5;</code>
       */
      RETURN_REFUND(4, 5),
      /**
       * <code>PROVIDE_CONTRACT = 6;</code>
       */
      PROVIDE_CONTRACT(5, 6),
      /**
       * <code>CHANNEL_OPEN = 7;</code>
       *
       * <pre>
       * Note that there are no optional fields set for CHANNEL_OPEN, it is sent from the
       * secondary to the primary to indicate that the provided contract was received,
       * verified, and broadcast successfully and the primary can now provide UPDATE messages
       * at will to begin paying secondary. If the channel is interrupted after the
       * CHANNEL_OPEN message (ie closed without an explicit CLOSE or ERROR) the primary may
       * reopen the channel by setting the contract transaction hash in its CLIENT_VERSION
       * message.
       * </pre>
       */
      CHANNEL_OPEN(6, 7),
      /**
       * <code>UPDATE_PAYMENT = 8;</code>
       */
      UPDATE_PAYMENT(7, 8),
      /**
       * <code>PAYMENT_ACK = 11;</code>
       *
       * <pre>
       * Sent by the server to the client after an UPDATE_PAYMENT message is successfully processed.
       * </pre>
       */
      PAYMENT_ACK(8, 11),
      /**
       * <code>CLOSE = 9;</code>
       *
       * <pre>
       * Either side can send this message. If the client sends it to the server, then the server
       * takes the most recent signature it received in an UPDATE_PAYMENT and uses it to create a
       * valid transaction, which it then broadcasts on the network.
       *
       * Once broadcast is complete, it sends back another CLOSE message with the settlement field set, containing
       * the final state of the contract.
       *
       * The server is allowed to initiate settlement whenever it wants, in which case the client will
       * asynchronously receive a CLOSE message with the settlement field set. The server is also allowed
       * to send a CLOSE to mark the end of a connection without any settlement taking place, in which
       * case this is just an equivalent to a TCP FIN packet. An explicit end-of-protocol markers can be
       * useful when this protocol is embedded inside another.
       * </pre>
       */
      CLOSE(9, 9),
      /**
       * <code>HTLC_PROVIDE_CONTRACT = 12;</code>
       *
       * <pre>
       * Use this for HTLCs channel setup; PROVIDE_CONTRACT doesn't work because HTLC needs a fully
       * signed teardown tx
       * </pre>
       */
      HTLC_PROVIDE_CONTRACT(10, 12),
      /**
       * <code>HTLC_INIT = 13;</code>
       *
       * <pre>
       * Sent by the client to the server to request a new secret hash for a new HTLC to build
       * </pre>
       */
      HTLC_INIT(11, 13),
      /**
       * <code>HTLC_INIT_REPLY = 14;</code>
       */
      HTLC_INIT_REPLY(12, 14),
      /**
       * <code>HTLC_SIGNED_TEARDOWN = 15;</code>
       */
      HTLC_SIGNED_TEARDOWN(13, 15),
      /**
       * <code>HTLC_SIGNED_REFUND = 16;</code>
       */
      HTLC_SIGNED_REFUND(14, 16),
      /**
       * <code>HTLC_SIGNED_SETTLE_FORFEIT = 17;</code>
       */
      HTLC_SIGNED_SETTLE_FORFEIT(15, 17),
      /**
       * <code>HTLC_SETUP_COMPLETE = 18;</code>
       */
      HTLC_SETUP_COMPLETE(16, 18),
      /**
       * <code>HTLC_SERVER_UPDATE = 19;</code>
       */
      HTLC_SERVER_UPDATE(17, 19),
      /**
       * <code>HTLC_UPDATE_TEARDOWN = 20;</code>
       */
      HTLC_UPDATE_TEARDOWN(18, 20),
      /**
       * <code>HTLC_PAYMENT_ACK = 21;</code>
       */
      HTLC_PAYMENT_ACK(19, 21),
      /**
       * <code>HTLC_ROUND_INIT = 22;</code>
       */
      HTLC_ROUND_INIT(20, 22),
      /**
       * <code>HTLC_ROUND_ACK = 23;</code>
       */
      HTLC_ROUND_ACK(21, 23),
      /**
       * <code>HTLC_ROUND_DONE = 24;</code>
       */
      HTLC_ROUND_DONE(22, 24),
      /**
       * <code>HTLC_FLOW = 25;</code>
       */
      HTLC_FLOW(23, 25),
      /**
       * <code>ERROR = 10;</code>
       *
       * <pre>
       * Used to indicate an error condition.
       * Both parties should make an effort to send either an ERROR or a CLOSE immediately
       * before closing the socket (unless they just received an ERROR or a CLOSE). This is important
       * because the protocol may not run over TCP.
       * </pre>
       */
      ERROR(24, 10),
      ;

      /**
       * <code>CLIENT_VERSION = 1;</code>
       */
      public static final int CLIENT_VERSION_VALUE = 1;
      /**
       * <code>SERVER_VERSION = 2;</code>
       */
      public static final int SERVER_VERSION_VALUE = 2;
      /**
       * <code>INITIATE = 3;</code>
       */
      public static final int INITIATE_VALUE = 3;
      /**
       * <code>PROVIDE_REFUND = 4;</code>
       */
      public static final int PROVIDE_REFUND_VALUE = 4;
      /**
       * <code>RETURN_REFUND = 5;</code>
       */
      public static final int RETURN_REFUND_VALUE = 5;
      /**
       * <code>PROVIDE_CONTRACT = 6;</code>
       */
      public static final int PROVIDE_CONTRACT_VALUE = 6;
      /**
       * <code>CHANNEL_OPEN = 7;</code>
       *
       * <pre>
       * Note that there are no optional fields set for CHANNEL_OPEN, it is sent from the
       * secondary to the primary to indicate that the provided contract was received,
       * verified, and broadcast successfully and the primary can now provide UPDATE messages
       * at will to begin paying secondary. If the channel is interrupted after the
       * CHANNEL_OPEN message (ie closed without an explicit CLOSE or ERROR) the primary may
       * reopen the channel by setting the contract transaction hash in its CLIENT_VERSION
       * message.
       * </pre>
       */
      public static final int CHANNEL_OPEN_VALUE = 7;
      /**
       * <code>UPDATE_PAYMENT = 8;</code>
       */
      public static final int UPDATE_PAYMENT_VALUE = 8;
      /**
       * <code>PAYMENT_ACK = 11;</code>
       *
       * <pre>
       * Sent by the server to the client after an UPDATE_PAYMENT message is successfully processed.
       * </pre>
       */
      public static final int PAYMENT_ACK_VALUE = 11;
      /**
       * <code>CLOSE = 9;</code>
       *
       * <pre>
       * Either side can send this message. If the client sends it to the server, then the server
       * takes the most recent signature it received in an UPDATE_PAYMENT and uses it to create a
       * valid transaction, which it then broadcasts on the network.
       *
       * Once broadcast is complete, it sends back another CLOSE message with the settlement field set, containing
       * the final state of the contract.
       *
       * The server is allowed to initiate settlement whenever it wants, in which case the client will
       * asynchronously receive a CLOSE message with the settlement field set. The server is also allowed
       * to send a CLOSE to mark the end of a connection without any settlement taking place, in which
       * case this is just an equivalent to a TCP FIN packet. An explicit end-of-protocol markers can be
       * useful when this protocol is embedded inside another.
       * </pre>
       */
      public static final int CLOSE_VALUE = 9;
      /**
       * <code>HTLC_PROVIDE_CONTRACT = 12;</code>
       *
       * <pre>
       * Use this for HTLCs channel setup; PROVIDE_CONTRACT doesn't work because HTLC needs a fully
       * signed teardown tx
       * </pre>
       */
      public static final int HTLC_PROVIDE_CONTRACT_VALUE = 12;
      /**
       * <code>HTLC_INIT = 13;</code>
       *
       * <pre>
       * Sent by the client to the server to request a new secret hash for a new HTLC to build
       * </pre>
       */
      public static final int HTLC_INIT_VALUE = 13;
      /**
       * <code>HTLC_INIT_REPLY = 14;</code>
       */
      public static final int HTLC_INIT_REPLY_VALUE = 14;
      /**
       * <code>HTLC_SIGNED_TEARDOWN = 15;</code>
       */
      public static final int HTLC_SIGNED_TEARDOWN_VALUE = 15;
      /**
       * <code>HTLC_SIGNED_REFUND = 16;</code>
       */
      public static final int HTLC_SIGNED_REFUND_VALUE = 16;
      /**
       * <code>HTLC_SIGNED_SETTLE_FORFEIT = 17;</code>
       */
      public static final int HTLC_SIGNED_SETTLE_FORFEIT_VALUE = 17;
      /**
       * <code>HTLC_SETUP_COMPLETE = 18;</code>
       */
      public static final int HTLC_SETUP_COMPLETE_VALUE = 18;
      /**
       * <code>HTLC_SERVER_UPDATE = 19;</code>
       */
      public static final int HTLC_SERVER_UPDATE_VALUE = 19;
      /**
       * <code>HTLC_UPDATE_TEARDOWN = 20;</code>
       */
      public static final int HTLC_UPDATE_TEARDOWN_VALUE = 20;
      /**
       * <code>HTLC_PAYMENT_ACK = 21;</code>
       */
      public static final int HTLC_PAYMENT_ACK_VALUE = 21;
      /**
       * <code>HTLC_ROUND_INIT = 22;</code>
       */
      public static final int HTLC_ROUND_INIT_VALUE = 22;
      /**
       * <code>HTLC_ROUND_ACK = 23;</code>
       */
      public static final int HTLC_ROUND_ACK_VALUE = 23;
      /**
       * <code>HTLC_ROUND_DONE = 24;</code>
       */
      public static final int HTLC_ROUND_DONE_VALUE = 24;
      /**
       * <code>HTLC_FLOW = 25;</code>
       */
      public static final int HTLC_FLOW_VALUE = 25;
      /**
       * <code>ERROR = 10;</code>
       *
       * <pre>
       * Used to indicate an error condition.
       * Both parties should make an effort to send either an ERROR or a CLOSE immediately
       * before closing the socket (unless they just received an ERROR or a CLOSE). This is important
       * because the protocol may not run over TCP.
       * </pre>
       */
      public static final int ERROR_VALUE = 10;


      public final int getNumber() { return value; }

      public static MessageType valueOf(int value) {
        switch (value) {
          case 1: return CLIENT_VERSION;
          case 2: return SERVER_VERSION;
          case 3: return INITIATE;
          case 4: return PROVIDE_REFUND;
          case 5: return RETURN_REFUND;
          case 6: return PROVIDE_CONTRACT;
          case 7: return CHANNEL_OPEN;
          case 8: return UPDATE_PAYMENT;
          case 11: return PAYMENT_ACK;
          case 9: return CLOSE;
          case 12: return HTLC_PROVIDE_CONTRACT;
          case 13: return HTLC_INIT;
          case 14: return HTLC_INIT_REPLY;
          case 15: return HTLC_SIGNED_TEARDOWN;
          case 16: return HTLC_SIGNED_REFUND;
          case 17: return HTLC_SIGNED_SETTLE_FORFEIT;
          case 18: return HTLC_SETUP_COMPLETE;
          case 19: return HTLC_SERVER_UPDATE;
          case 20: return HTLC_UPDATE_TEARDOWN;
          case 21: return HTLC_PAYMENT_ACK;
          case 22: return HTLC_ROUND_INIT;
          case 23: return HTLC_ROUND_ACK;
          case 24: return HTLC_ROUND_DONE;
          case 25: return HTLC_FLOW;
          case 10: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MessageType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:paymentchannels.TwoWayChannelMessage.MessageType)
    }

    private int bitField0_;
    // required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType type_;
    /**
     * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
     *
     * <pre>
     * This is required so if a new message type is added in future, old software aborts trying
     * to read the message as early as possible. If the message doesn't parse, the socket should
     * be closed.
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
     *
     * <pre>
     * This is required so if a new message type is added in future, old software aborts trying
     * to read the message as early as possible. If the message doesn't parse, the socket should
     * be closed.
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType getType() {
      return type_;
    }

    // optional .paymentchannels.ClientVersion client_version = 2;
    public static final int CLIENT_VERSION_FIELD_NUMBER = 2;
    private org.bitcoin.paymentchannel.Protos.ClientVersion clientVersion_;
    /**
     * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
     *
     * <pre>
     * Now one optional field for each message. Only the field specified by type should be read.
     * </pre>
     */
    public boolean hasClientVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
     *
     * <pre>
     * Now one optional field for each message. Only the field specified by type should be read.
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.ClientVersion getClientVersion() {
      return clientVersion_;
    }
    /**
     * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
     *
     * <pre>
     * Now one optional field for each message. Only the field specified by type should be read.
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.ClientVersionOrBuilder getClientVersionOrBuilder() {
      return clientVersion_;
    }

    // optional .paymentchannels.ServerVersion server_version = 3;
    public static final int SERVER_VERSION_FIELD_NUMBER = 3;
    private org.bitcoin.paymentchannel.Protos.ServerVersion serverVersion_;
    /**
     * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
     */
    public boolean hasServerVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ServerVersion getServerVersion() {
      return serverVersion_;
    }
    /**
     * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ServerVersionOrBuilder getServerVersionOrBuilder() {
      return serverVersion_;
    }

    // optional .paymentchannels.Initiate initiate = 4;
    public static final int INITIATE_FIELD_NUMBER = 4;
    private org.bitcoin.paymentchannel.Protos.Initiate initiate_;
    /**
     * <code>optional .paymentchannels.Initiate initiate = 4;</code>
     */
    public boolean hasInitiate() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .paymentchannels.Initiate initiate = 4;</code>
     */
    public org.bitcoin.paymentchannel.Protos.Initiate getInitiate() {
      return initiate_;
    }
    /**
     * <code>optional .paymentchannels.Initiate initiate = 4;</code>
     */
    public org.bitcoin.paymentchannel.Protos.InitiateOrBuilder getInitiateOrBuilder() {
      return initiate_;
    }

    // optional .paymentchannels.ProvideRefund provide_refund = 5;
    public static final int PROVIDE_REFUND_FIELD_NUMBER = 5;
    private org.bitcoin.paymentchannel.Protos.ProvideRefund provideRefund_;
    /**
     * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
     */
    public boolean hasProvideRefund() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ProvideRefund getProvideRefund() {
      return provideRefund_;
    }
    /**
     * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ProvideRefundOrBuilder getProvideRefundOrBuilder() {
      return provideRefund_;
    }

    // optional .paymentchannels.ReturnRefund return_refund = 6;
    public static final int RETURN_REFUND_FIELD_NUMBER = 6;
    private org.bitcoin.paymentchannel.Protos.ReturnRefund returnRefund_;
    /**
     * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
     */
    public boolean hasReturnRefund() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ReturnRefund getReturnRefund() {
      return returnRefund_;
    }
    /**
     * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ReturnRefundOrBuilder getReturnRefundOrBuilder() {
      return returnRefund_;
    }

    // optional .paymentchannels.ProvideContract provide_contract = 7;
    public static final int PROVIDE_CONTRACT_FIELD_NUMBER = 7;
    private org.bitcoin.paymentchannel.Protos.ProvideContract provideContract_;
    /**
     * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
     */
    public boolean hasProvideContract() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ProvideContract getProvideContract() {
      return provideContract_;
    }
    /**
     * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ProvideContractOrBuilder getProvideContractOrBuilder() {
      return provideContract_;
    }

    // optional .paymentchannels.UpdatePayment update_payment = 8;
    public static final int UPDATE_PAYMENT_FIELD_NUMBER = 8;
    private org.bitcoin.paymentchannel.Protos.UpdatePayment updatePayment_;
    /**
     * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
     */
    public boolean hasUpdatePayment() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
     */
    public org.bitcoin.paymentchannel.Protos.UpdatePayment getUpdatePayment() {
      return updatePayment_;
    }
    /**
     * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
     */
    public org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder getUpdatePaymentOrBuilder() {
      return updatePayment_;
    }

    // optional .paymentchannels.PaymentAck payment_ack = 11;
    public static final int PAYMENT_ACK_FIELD_NUMBER = 11;
    private org.bitcoin.paymentchannel.Protos.PaymentAck paymentAck_;
    /**
     * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
     */
    public boolean hasPaymentAck() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
     */
    public org.bitcoin.paymentchannel.Protos.PaymentAck getPaymentAck() {
      return paymentAck_;
    }
    /**
     * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
     */
    public org.bitcoin.paymentchannel.Protos.PaymentAckOrBuilder getPaymentAckOrBuilder() {
      return paymentAck_;
    }

    // optional .paymentchannels.Settlement settlement = 9;
    public static final int SETTLEMENT_FIELD_NUMBER = 9;
    private org.bitcoin.paymentchannel.Protos.Settlement settlement_;
    /**
     * <code>optional .paymentchannels.Settlement settlement = 9;</code>
     */
    public boolean hasSettlement() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .paymentchannels.Settlement settlement = 9;</code>
     */
    public org.bitcoin.paymentchannel.Protos.Settlement getSettlement() {
      return settlement_;
    }
    /**
     * <code>optional .paymentchannels.Settlement settlement = 9;</code>
     */
    public org.bitcoin.paymentchannel.Protos.SettlementOrBuilder getSettlementOrBuilder() {
      return settlement_;
    }

    // optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;
    public static final int HTLC_PROVIDE_CONTRACT_FIELD_NUMBER = 12;
    private org.bitcoin.paymentchannel.Protos.HTLCProvideContract htlcProvideContract_;
    /**
     * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
     */
    public boolean hasHtlcProvideContract() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCProvideContract getHtlcProvideContract() {
      return htlcProvideContract_;
    }
    /**
     * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCProvideContractOrBuilder getHtlcProvideContractOrBuilder() {
      return htlcProvideContract_;
    }

    // optional .paymentchannels.HTLCInit htlc_init = 13;
    public static final int HTLC_INIT_FIELD_NUMBER = 13;
    private org.bitcoin.paymentchannel.Protos.HTLCInit htlcInit_;
    /**
     * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
     */
    public boolean hasHtlcInit() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCInit getHtlcInit() {
      return htlcInit_;
    }
    /**
     * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCInitOrBuilder getHtlcInitOrBuilder() {
      return htlcInit_;
    }

    // optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;
    public static final int HTLC_INIT_REPLY_FIELD_NUMBER = 14;
    private org.bitcoin.paymentchannel.Protos.HTLCInitReply htlcInitReply_;
    /**
     * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
     */
    public boolean hasHtlcInitReply() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCInitReply getHtlcInitReply() {
      return htlcInitReply_;
    }
    /**
     * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCInitReplyOrBuilder getHtlcInitReplyOrBuilder() {
      return htlcInitReply_;
    }

    // optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;
    public static final int HTLC_SIGNED_TEARDOWN_FIELD_NUMBER = 15;
    private org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown htlcSignedTeardown_;
    /**
     * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
     */
    public boolean hasHtlcSignedTeardown() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown getHtlcSignedTeardown() {
      return htlcSignedTeardown_;
    }
    /**
     * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardownOrBuilder getHtlcSignedTeardownOrBuilder() {
      return htlcSignedTeardown_;
    }

    // optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;
    public static final int HTLC_SIGNED_REFUND_WITH_HASH_FIELD_NUMBER = 16;
    private org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash htlcSignedRefundWithHash_;
    /**
     * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
     */
    public boolean hasHtlcSignedRefundWithHash() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash getHtlcSignedRefundWithHash() {
      return htlcSignedRefundWithHash_;
    }
    /**
     * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHashOrBuilder getHtlcSignedRefundWithHashOrBuilder() {
      return htlcSignedRefundWithHash_;
    }

    // optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;
    public static final int HTLC_SIGNED_SETTLE_AND_FORFEIT_FIELD_NUMBER = 17;
    private org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit htlcSignedSettleAndForfeit_;
    /**
     * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
     */
    public boolean hasHtlcSignedSettleAndForfeit() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit getHtlcSignedSettleAndForfeit() {
      return htlcSignedSettleAndForfeit_;
    }
    /**
     * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeitOrBuilder getHtlcSignedSettleAndForfeitOrBuilder() {
      return htlcSignedSettleAndForfeit_;
    }

    // optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;
    public static final int HTLC_SETUP_COMPLETE_FIELD_NUMBER = 18;
    private org.bitcoin.paymentchannel.Protos.HTLCSetupComplete htlcSetupComplete_;
    /**
     * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
     */
    public boolean hasHtlcSetupComplete() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSetupComplete getHtlcSetupComplete() {
      return htlcSetupComplete_;
    }
    /**
     * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSetupCompleteOrBuilder getHtlcSetupCompleteOrBuilder() {
      return htlcSetupComplete_;
    }

    // optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;
    public static final int HTLC_SERVER_UPDATE_FIELD_NUMBER = 19;
    private org.bitcoin.paymentchannel.Protos.HTLCServerUpdate htlcServerUpdate_;
    /**
     * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
     */
    public boolean hasHtlcServerUpdate() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCServerUpdate getHtlcServerUpdate() {
      return htlcServerUpdate_;
    }
    /**
     * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCServerUpdateOrBuilder getHtlcServerUpdateOrBuilder() {
      return htlcServerUpdate_;
    }

    // optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;
    public static final int HTLC_PAYMENT_ACK_FIELD_NUMBER = 21;
    private org.bitcoin.paymentchannel.Protos.HTLCPaymentAck htlcPaymentAck_;
    /**
     * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
     */
    public boolean hasHtlcPaymentAck() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCPaymentAck getHtlcPaymentAck() {
      return htlcPaymentAck_;
    }
    /**
     * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCPaymentAckOrBuilder getHtlcPaymentAckOrBuilder() {
      return htlcPaymentAck_;
    }

    // optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;
    public static final int HTLC_ROUND_INIT_FIELD_NUMBER = 22;
    private org.bitcoin.paymentchannel.Protos.HTLCRoundInit htlcRoundInit_;
    /**
     * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
     */
    public boolean hasHtlcRoundInit() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRoundInit getHtlcRoundInit() {
      return htlcRoundInit_;
    }
    /**
     * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRoundInitOrBuilder getHtlcRoundInitOrBuilder() {
      return htlcRoundInit_;
    }

    // optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;
    public static final int HTLC_ROUND_ACK_FIELD_NUMBER = 23;
    private org.bitcoin.paymentchannel.Protos.HTLCRoundAck htlcRoundAck_;
    /**
     * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
     */
    public boolean hasHtlcRoundAck() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRoundAck getHtlcRoundAck() {
      return htlcRoundAck_;
    }
    /**
     * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRoundAckOrBuilder getHtlcRoundAckOrBuilder() {
      return htlcRoundAck_;
    }

    // optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;
    public static final int HTLC_ROUND_DONE_FIELD_NUMBER = 24;
    private org.bitcoin.paymentchannel.Protos.HTLCRoundDone htlcRoundDone_;
    /**
     * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
     */
    public boolean hasHtlcRoundDone() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRoundDone getHtlcRoundDone() {
      return htlcRoundDone_;
    }
    /**
     * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRoundDoneOrBuilder getHtlcRoundDoneOrBuilder() {
      return htlcRoundDone_;
    }

    // optional .paymentchannels.HTLCFlow htlc_flow = 25;
    public static final int HTLC_FLOW_FIELD_NUMBER = 25;
    private org.bitcoin.paymentchannel.Protos.HTLCFlow htlcFlow_;
    /**
     * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
     */
    public boolean hasHtlcFlow() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCFlow getHtlcFlow() {
      return htlcFlow_;
    }
    /**
     * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCFlowOrBuilder getHtlcFlowOrBuilder() {
      return htlcFlow_;
    }

    // optional .paymentchannels.Error error = 10;
    public static final int ERROR_FIELD_NUMBER = 10;
    private org.bitcoin.paymentchannel.Protos.Error error_;
    /**
     * <code>optional .paymentchannels.Error error = 10;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .paymentchannels.Error error = 10;</code>
     */
    public org.bitcoin.paymentchannel.Protos.Error getError() {
      return error_;
    }
    /**
     * <code>optional .paymentchannels.Error error = 10;</code>
     */
    public org.bitcoin.paymentchannel.Protos.ErrorOrBuilder getErrorOrBuilder() {
      return error_;
    }

    private void initFields() {
      type_ = org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType.CLIENT_VERSION;
      clientVersion_ = org.bitcoin.paymentchannel.Protos.ClientVersion.getDefaultInstance();
      serverVersion_ = org.bitcoin.paymentchannel.Protos.ServerVersion.getDefaultInstance();
      initiate_ = org.bitcoin.paymentchannel.Protos.Initiate.getDefaultInstance();
      provideRefund_ = org.bitcoin.paymentchannel.Protos.ProvideRefund.getDefaultInstance();
      returnRefund_ = org.bitcoin.paymentchannel.Protos.ReturnRefund.getDefaultInstance();
      provideContract_ = org.bitcoin.paymentchannel.Protos.ProvideContract.getDefaultInstance();
      updatePayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
      paymentAck_ = org.bitcoin.paymentchannel.Protos.PaymentAck.getDefaultInstance();
      settlement_ = org.bitcoin.paymentchannel.Protos.Settlement.getDefaultInstance();
      htlcProvideContract_ = org.bitcoin.paymentchannel.Protos.HTLCProvideContract.getDefaultInstance();
      htlcInit_ = org.bitcoin.paymentchannel.Protos.HTLCInit.getDefaultInstance();
      htlcInitReply_ = org.bitcoin.paymentchannel.Protos.HTLCInitReply.getDefaultInstance();
      htlcSignedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.getDefaultInstance();
      htlcSignedRefundWithHash_ = org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.getDefaultInstance();
      htlcSignedSettleAndForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.getDefaultInstance();
      htlcSetupComplete_ = org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.getDefaultInstance();
      htlcServerUpdate_ = org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.getDefaultInstance();
      htlcPaymentAck_ = org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.getDefaultInstance();
      htlcRoundInit_ = org.bitcoin.paymentchannel.Protos.HTLCRoundInit.getDefaultInstance();
      htlcRoundAck_ = org.bitcoin.paymentchannel.Protos.HTLCRoundAck.getDefaultInstance();
      htlcRoundDone_ = org.bitcoin.paymentchannel.Protos.HTLCRoundDone.getDefaultInstance();
      htlcFlow_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.getDefaultInstance();
      error_ = org.bitcoin.paymentchannel.Protos.Error.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasClientVersion()) {
        if (!getClientVersion().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasServerVersion()) {
        if (!getServerVersion().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasInitiate()) {
        if (!getInitiate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasProvideRefund()) {
        if (!getProvideRefund().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasReturnRefund()) {
        if (!getReturnRefund().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasProvideContract()) {
        if (!getProvideContract().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasUpdatePayment()) {
        if (!getUpdatePayment().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSettlement()) {
        if (!getSettlement().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcProvideContract()) {
        if (!getHtlcProvideContract().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcInit()) {
        if (!getHtlcInit().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcInitReply()) {
        if (!getHtlcInitReply().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcSignedTeardown()) {
        if (!getHtlcSignedTeardown().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcSignedRefundWithHash()) {
        if (!getHtlcSignedRefundWithHash().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcSignedSettleAndForfeit()) {
        if (!getHtlcSignedSettleAndForfeit().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcServerUpdate()) {
        if (!getHtlcServerUpdate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcPaymentAck()) {
        if (!getHtlcPaymentAck().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHtlcFlow()) {
        if (!getHtlcFlow().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, clientVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, serverVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, initiate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, provideRefund_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, returnRefund_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, provideContract_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, updatePayment_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(9, settlement_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(10, error_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(11, paymentAck_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(12, htlcProvideContract_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(13, htlcInit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(14, htlcInitReply_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(15, htlcSignedTeardown_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeMessage(16, htlcSignedRefundWithHash_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeMessage(17, htlcSignedSettleAndForfeit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeMessage(18, htlcSetupComplete_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeMessage(19, htlcServerUpdate_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(21, htlcPaymentAck_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(22, htlcRoundInit_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(23, htlcRoundAck_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeMessage(24, htlcRoundDone_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeMessage(25, htlcFlow_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, clientVersion_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, serverVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, initiate_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, provideRefund_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, returnRefund_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, provideContract_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, updatePayment_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, settlement_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, error_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, paymentAck_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, htlcProvideContract_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, htlcInit_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, htlcInitReply_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, htlcSignedTeardown_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, htlcSignedRefundWithHash_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, htlcSignedSettleAndForfeit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, htlcSetupComplete_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, htlcServerUpdate_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, htlcPaymentAck_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, htlcRoundInit_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, htlcRoundAck_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, htlcRoundDone_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, htlcFlow_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.TwoWayChannelMessage}
     *
     * <pre>
     * This message is designed to be either sent raw over the network (e.g. length prefixed) or embedded inside another
     * protocol that is being extended to support micropayments. In this file "primary" typically can be read as "client"
     * and "secondary" as "server".
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.TwoWayChannelMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_TwoWayChannelMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_TwoWayChannelMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.class, org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClientVersionFieldBuilder();
          getServerVersionFieldBuilder();
          getInitiateFieldBuilder();
          getProvideRefundFieldBuilder();
          getReturnRefundFieldBuilder();
          getProvideContractFieldBuilder();
          getUpdatePaymentFieldBuilder();
          getPaymentAckFieldBuilder();
          getSettlementFieldBuilder();
          getHtlcProvideContractFieldBuilder();
          getHtlcInitFieldBuilder();
          getHtlcInitReplyFieldBuilder();
          getHtlcSignedTeardownFieldBuilder();
          getHtlcSignedRefundWithHashFieldBuilder();
          getHtlcSignedSettleAndForfeitFieldBuilder();
          getHtlcSetupCompleteFieldBuilder();
          getHtlcServerUpdateFieldBuilder();
          getHtlcPaymentAckFieldBuilder();
          getHtlcRoundInitFieldBuilder();
          getHtlcRoundAckFieldBuilder();
          getHtlcRoundDoneFieldBuilder();
          getHtlcFlowFieldBuilder();
          getErrorFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType.CLIENT_VERSION;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (clientVersionBuilder_ == null) {
          clientVersion_ = org.bitcoin.paymentchannel.Protos.ClientVersion.getDefaultInstance();
        } else {
          clientVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (serverVersionBuilder_ == null) {
          serverVersion_ = org.bitcoin.paymentchannel.Protos.ServerVersion.getDefaultInstance();
        } else {
          serverVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (initiateBuilder_ == null) {
          initiate_ = org.bitcoin.paymentchannel.Protos.Initiate.getDefaultInstance();
        } else {
          initiateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (provideRefundBuilder_ == null) {
          provideRefund_ = org.bitcoin.paymentchannel.Protos.ProvideRefund.getDefaultInstance();
        } else {
          provideRefundBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (returnRefundBuilder_ == null) {
          returnRefund_ = org.bitcoin.paymentchannel.Protos.ReturnRefund.getDefaultInstance();
        } else {
          returnRefundBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (provideContractBuilder_ == null) {
          provideContract_ = org.bitcoin.paymentchannel.Protos.ProvideContract.getDefaultInstance();
        } else {
          provideContractBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (updatePaymentBuilder_ == null) {
          updatePayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
        } else {
          updatePaymentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (paymentAckBuilder_ == null) {
          paymentAck_ = org.bitcoin.paymentchannel.Protos.PaymentAck.getDefaultInstance();
        } else {
          paymentAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (settlementBuilder_ == null) {
          settlement_ = org.bitcoin.paymentchannel.Protos.Settlement.getDefaultInstance();
        } else {
          settlementBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (htlcProvideContractBuilder_ == null) {
          htlcProvideContract_ = org.bitcoin.paymentchannel.Protos.HTLCProvideContract.getDefaultInstance();
        } else {
          htlcProvideContractBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (htlcInitBuilder_ == null) {
          htlcInit_ = org.bitcoin.paymentchannel.Protos.HTLCInit.getDefaultInstance();
        } else {
          htlcInitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (htlcInitReplyBuilder_ == null) {
          htlcInitReply_ = org.bitcoin.paymentchannel.Protos.HTLCInitReply.getDefaultInstance();
        } else {
          htlcInitReplyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (htlcSignedTeardownBuilder_ == null) {
          htlcSignedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.getDefaultInstance();
        } else {
          htlcSignedTeardownBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (htlcSignedRefundWithHashBuilder_ == null) {
          htlcSignedRefundWithHash_ = org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.getDefaultInstance();
        } else {
          htlcSignedRefundWithHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          htlcSignedSettleAndForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.getDefaultInstance();
        } else {
          htlcSignedSettleAndForfeitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (htlcSetupCompleteBuilder_ == null) {
          htlcSetupComplete_ = org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.getDefaultInstance();
        } else {
          htlcSetupCompleteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (htlcServerUpdateBuilder_ == null) {
          htlcServerUpdate_ = org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.getDefaultInstance();
        } else {
          htlcServerUpdateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (htlcPaymentAckBuilder_ == null) {
          htlcPaymentAck_ = org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.getDefaultInstance();
        } else {
          htlcPaymentAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (htlcRoundInitBuilder_ == null) {
          htlcRoundInit_ = org.bitcoin.paymentchannel.Protos.HTLCRoundInit.getDefaultInstance();
        } else {
          htlcRoundInitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (htlcRoundAckBuilder_ == null) {
          htlcRoundAck_ = org.bitcoin.paymentchannel.Protos.HTLCRoundAck.getDefaultInstance();
        } else {
          htlcRoundAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        if (htlcRoundDoneBuilder_ == null) {
          htlcRoundDone_ = org.bitcoin.paymentchannel.Protos.HTLCRoundDone.getDefaultInstance();
        } else {
          htlcRoundDoneBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        if (htlcFlowBuilder_ == null) {
          htlcFlow_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.getDefaultInstance();
        } else {
          htlcFlowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        if (errorBuilder_ == null) {
          error_ = org.bitcoin.paymentchannel.Protos.Error.getDefaultInstance();
        } else {
          errorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_TwoWayChannelMessage_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage build() {
        org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage buildPartial() {
        org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage result = new org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (clientVersionBuilder_ == null) {
          result.clientVersion_ = clientVersion_;
        } else {
          result.clientVersion_ = clientVersionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (serverVersionBuilder_ == null) {
          result.serverVersion_ = serverVersion_;
        } else {
          result.serverVersion_ = serverVersionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (initiateBuilder_ == null) {
          result.initiate_ = initiate_;
        } else {
          result.initiate_ = initiateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (provideRefundBuilder_ == null) {
          result.provideRefund_ = provideRefund_;
        } else {
          result.provideRefund_ = provideRefundBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (returnRefundBuilder_ == null) {
          result.returnRefund_ = returnRefund_;
        } else {
          result.returnRefund_ = returnRefundBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (provideContractBuilder_ == null) {
          result.provideContract_ = provideContract_;
        } else {
          result.provideContract_ = provideContractBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (updatePaymentBuilder_ == null) {
          result.updatePayment_ = updatePayment_;
        } else {
          result.updatePayment_ = updatePaymentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (paymentAckBuilder_ == null) {
          result.paymentAck_ = paymentAck_;
        } else {
          result.paymentAck_ = paymentAckBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (settlementBuilder_ == null) {
          result.settlement_ = settlement_;
        } else {
          result.settlement_ = settlementBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (htlcProvideContractBuilder_ == null) {
          result.htlcProvideContract_ = htlcProvideContract_;
        } else {
          result.htlcProvideContract_ = htlcProvideContractBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (htlcInitBuilder_ == null) {
          result.htlcInit_ = htlcInit_;
        } else {
          result.htlcInit_ = htlcInitBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (htlcInitReplyBuilder_ == null) {
          result.htlcInitReply_ = htlcInitReply_;
        } else {
          result.htlcInitReply_ = htlcInitReplyBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (htlcSignedTeardownBuilder_ == null) {
          result.htlcSignedTeardown_ = htlcSignedTeardown_;
        } else {
          result.htlcSignedTeardown_ = htlcSignedTeardownBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        if (htlcSignedRefundWithHashBuilder_ == null) {
          result.htlcSignedRefundWithHash_ = htlcSignedRefundWithHash_;
        } else {
          result.htlcSignedRefundWithHash_ = htlcSignedRefundWithHashBuilder_.build();
        }
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          result.htlcSignedSettleAndForfeit_ = htlcSignedSettleAndForfeit_;
        } else {
          result.htlcSignedSettleAndForfeit_ = htlcSignedSettleAndForfeitBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        if (htlcSetupCompleteBuilder_ == null) {
          result.htlcSetupComplete_ = htlcSetupComplete_;
        } else {
          result.htlcSetupComplete_ = htlcSetupCompleteBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        if (htlcServerUpdateBuilder_ == null) {
          result.htlcServerUpdate_ = htlcServerUpdate_;
        } else {
          result.htlcServerUpdate_ = htlcServerUpdateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (htlcPaymentAckBuilder_ == null) {
          result.htlcPaymentAck_ = htlcPaymentAck_;
        } else {
          result.htlcPaymentAck_ = htlcPaymentAckBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (htlcRoundInitBuilder_ == null) {
          result.htlcRoundInit_ = htlcRoundInit_;
        } else {
          result.htlcRoundInit_ = htlcRoundInitBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (htlcRoundAckBuilder_ == null) {
          result.htlcRoundAck_ = htlcRoundAck_;
        } else {
          result.htlcRoundAck_ = htlcRoundAckBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        if (htlcRoundDoneBuilder_ == null) {
          result.htlcRoundDone_ = htlcRoundDone_;
        } else {
          result.htlcRoundDone_ = htlcRoundDoneBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        if (htlcFlowBuilder_ == null) {
          result.htlcFlow_ = htlcFlow_;
        } else {
          result.htlcFlow_ = htlcFlowBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (errorBuilder_ == null) {
          result.error_ = error_;
        } else {
          result.error_ = errorBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage other) {
        if (other == org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasClientVersion()) {
          mergeClientVersion(other.getClientVersion());
        }
        if (other.hasServerVersion()) {
          mergeServerVersion(other.getServerVersion());
        }
        if (other.hasInitiate()) {
          mergeInitiate(other.getInitiate());
        }
        if (other.hasProvideRefund()) {
          mergeProvideRefund(other.getProvideRefund());
        }
        if (other.hasReturnRefund()) {
          mergeReturnRefund(other.getReturnRefund());
        }
        if (other.hasProvideContract()) {
          mergeProvideContract(other.getProvideContract());
        }
        if (other.hasUpdatePayment()) {
          mergeUpdatePayment(other.getUpdatePayment());
        }
        if (other.hasPaymentAck()) {
          mergePaymentAck(other.getPaymentAck());
        }
        if (other.hasSettlement()) {
          mergeSettlement(other.getSettlement());
        }
        if (other.hasHtlcProvideContract()) {
          mergeHtlcProvideContract(other.getHtlcProvideContract());
        }
        if (other.hasHtlcInit()) {
          mergeHtlcInit(other.getHtlcInit());
        }
        if (other.hasHtlcInitReply()) {
          mergeHtlcInitReply(other.getHtlcInitReply());
        }
        if (other.hasHtlcSignedTeardown()) {
          mergeHtlcSignedTeardown(other.getHtlcSignedTeardown());
        }
        if (other.hasHtlcSignedRefundWithHash()) {
          mergeHtlcSignedRefundWithHash(other.getHtlcSignedRefundWithHash());
        }
        if (other.hasHtlcSignedSettleAndForfeit()) {
          mergeHtlcSignedSettleAndForfeit(other.getHtlcSignedSettleAndForfeit());
        }
        if (other.hasHtlcSetupComplete()) {
          mergeHtlcSetupComplete(other.getHtlcSetupComplete());
        }
        if (other.hasHtlcServerUpdate()) {
          mergeHtlcServerUpdate(other.getHtlcServerUpdate());
        }
        if (other.hasHtlcPaymentAck()) {
          mergeHtlcPaymentAck(other.getHtlcPaymentAck());
        }
        if (other.hasHtlcRoundInit()) {
          mergeHtlcRoundInit(other.getHtlcRoundInit());
        }
        if (other.hasHtlcRoundAck()) {
          mergeHtlcRoundAck(other.getHtlcRoundAck());
        }
        if (other.hasHtlcRoundDone()) {
          mergeHtlcRoundDone(other.getHtlcRoundDone());
        }
        if (other.hasHtlcFlow()) {
          mergeHtlcFlow(other.getHtlcFlow());
        }
        if (other.hasError()) {
          mergeError(other.getError());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasClientVersion()) {
          if (!getClientVersion().isInitialized()) {
            
            return false;
          }
        }
        if (hasServerVersion()) {
          if (!getServerVersion().isInitialized()) {
            
            return false;
          }
        }
        if (hasInitiate()) {
          if (!getInitiate().isInitialized()) {
            
            return false;
          }
        }
        if (hasProvideRefund()) {
          if (!getProvideRefund().isInitialized()) {
            
            return false;
          }
        }
        if (hasReturnRefund()) {
          if (!getReturnRefund().isInitialized()) {
            
            return false;
          }
        }
        if (hasProvideContract()) {
          if (!getProvideContract().isInitialized()) {
            
            return false;
          }
        }
        if (hasUpdatePayment()) {
          if (!getUpdatePayment().isInitialized()) {
            
            return false;
          }
        }
        if (hasSettlement()) {
          if (!getSettlement().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcProvideContract()) {
          if (!getHtlcProvideContract().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcInit()) {
          if (!getHtlcInit().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcInitReply()) {
          if (!getHtlcInitReply().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcSignedTeardown()) {
          if (!getHtlcSignedTeardown().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcSignedRefundWithHash()) {
          if (!getHtlcSignedRefundWithHash().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcSignedSettleAndForfeit()) {
          if (!getHtlcSignedSettleAndForfeit().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcServerUpdate()) {
          if (!getHtlcServerUpdate().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcPaymentAck()) {
          if (!getHtlcPaymentAck().isInitialized()) {
            
            return false;
          }
        }
        if (hasHtlcFlow()) {
          if (!getHtlcFlow().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;
      private org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType type_ = org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType.CLIENT_VERSION;
      /**
       * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
       *
       * <pre>
       * This is required so if a new message type is added in future, old software aborts trying
       * to read the message as early as possible. If the message doesn't parse, the socket should
       * be closed.
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
       *
       * <pre>
       * This is required so if a new message type is added in future, old software aborts trying
       * to read the message as early as possible. If the message doesn't parse, the socket should
       * be closed.
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType getType() {
        return type_;
      }
      /**
       * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
       *
       * <pre>
       * This is required so if a new message type is added in future, old software aborts trying
       * to read the message as early as possible. If the message doesn't parse, the socket should
       * be closed.
       * </pre>
       */
      public Builder setType(org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .paymentchannels.TwoWayChannelMessage.MessageType type = 1;</code>
       *
       * <pre>
       * This is required so if a new message type is added in future, old software aborts trying
       * to read the message as early as possible. If the message doesn't parse, the socket should
       * be closed.
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.bitcoin.paymentchannel.Protos.TwoWayChannelMessage.MessageType.CLIENT_VERSION;
        onChanged();
        return this;
      }

      // optional .paymentchannels.ClientVersion client_version = 2;
      private org.bitcoin.paymentchannel.Protos.ClientVersion clientVersion_ = org.bitcoin.paymentchannel.Protos.ClientVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ClientVersion, org.bitcoin.paymentchannel.Protos.ClientVersion.Builder, org.bitcoin.paymentchannel.Protos.ClientVersionOrBuilder> clientVersionBuilder_;
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public boolean hasClientVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.ClientVersion getClientVersion() {
        if (clientVersionBuilder_ == null) {
          return clientVersion_;
        } else {
          return clientVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public Builder setClientVersion(org.bitcoin.paymentchannel.Protos.ClientVersion value) {
        if (clientVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          clientVersion_ = value;
          onChanged();
        } else {
          clientVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public Builder setClientVersion(
          org.bitcoin.paymentchannel.Protos.ClientVersion.Builder builderForValue) {
        if (clientVersionBuilder_ == null) {
          clientVersion_ = builderForValue.build();
          onChanged();
        } else {
          clientVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public Builder mergeClientVersion(org.bitcoin.paymentchannel.Protos.ClientVersion value) {
        if (clientVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              clientVersion_ != org.bitcoin.paymentchannel.Protos.ClientVersion.getDefaultInstance()) {
            clientVersion_ =
              org.bitcoin.paymentchannel.Protos.ClientVersion.newBuilder(clientVersion_).mergeFrom(value).buildPartial();
          } else {
            clientVersion_ = value;
          }
          onChanged();
        } else {
          clientVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public Builder clearClientVersion() {
        if (clientVersionBuilder_ == null) {
          clientVersion_ = org.bitcoin.paymentchannel.Protos.ClientVersion.getDefaultInstance();
          onChanged();
        } else {
          clientVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.ClientVersion.Builder getClientVersionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getClientVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.ClientVersionOrBuilder getClientVersionOrBuilder() {
        if (clientVersionBuilder_ != null) {
          return clientVersionBuilder_.getMessageOrBuilder();
        } else {
          return clientVersion_;
        }
      }
      /**
       * <code>optional .paymentchannels.ClientVersion client_version = 2;</code>
       *
       * <pre>
       * Now one optional field for each message. Only the field specified by type should be read.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ClientVersion, org.bitcoin.paymentchannel.Protos.ClientVersion.Builder, org.bitcoin.paymentchannel.Protos.ClientVersionOrBuilder> 
          getClientVersionFieldBuilder() {
        if (clientVersionBuilder_ == null) {
          clientVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.ClientVersion, org.bitcoin.paymentchannel.Protos.ClientVersion.Builder, org.bitcoin.paymentchannel.Protos.ClientVersionOrBuilder>(
                  clientVersion_,
                  getParentForChildren(),
                  isClean());
          clientVersion_ = null;
        }
        return clientVersionBuilder_;
      }

      // optional .paymentchannels.ServerVersion server_version = 3;
      private org.bitcoin.paymentchannel.Protos.ServerVersion serverVersion_ = org.bitcoin.paymentchannel.Protos.ServerVersion.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ServerVersion, org.bitcoin.paymentchannel.Protos.ServerVersion.Builder, org.bitcoin.paymentchannel.Protos.ServerVersionOrBuilder> serverVersionBuilder_;
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public boolean hasServerVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ServerVersion getServerVersion() {
        if (serverVersionBuilder_ == null) {
          return serverVersion_;
        } else {
          return serverVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public Builder setServerVersion(org.bitcoin.paymentchannel.Protos.ServerVersion value) {
        if (serverVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverVersion_ = value;
          onChanged();
        } else {
          serverVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public Builder setServerVersion(
          org.bitcoin.paymentchannel.Protos.ServerVersion.Builder builderForValue) {
        if (serverVersionBuilder_ == null) {
          serverVersion_ = builderForValue.build();
          onChanged();
        } else {
          serverVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public Builder mergeServerVersion(org.bitcoin.paymentchannel.Protos.ServerVersion value) {
        if (serverVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              serverVersion_ != org.bitcoin.paymentchannel.Protos.ServerVersion.getDefaultInstance()) {
            serverVersion_ =
              org.bitcoin.paymentchannel.Protos.ServerVersion.newBuilder(serverVersion_).mergeFrom(value).buildPartial();
          } else {
            serverVersion_ = value;
          }
          onChanged();
        } else {
          serverVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public Builder clearServerVersion() {
        if (serverVersionBuilder_ == null) {
          serverVersion_ = org.bitcoin.paymentchannel.Protos.ServerVersion.getDefaultInstance();
          onChanged();
        } else {
          serverVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ServerVersion.Builder getServerVersionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getServerVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ServerVersionOrBuilder getServerVersionOrBuilder() {
        if (serverVersionBuilder_ != null) {
          return serverVersionBuilder_.getMessageOrBuilder();
        } else {
          return serverVersion_;
        }
      }
      /**
       * <code>optional .paymentchannels.ServerVersion server_version = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ServerVersion, org.bitcoin.paymentchannel.Protos.ServerVersion.Builder, org.bitcoin.paymentchannel.Protos.ServerVersionOrBuilder> 
          getServerVersionFieldBuilder() {
        if (serverVersionBuilder_ == null) {
          serverVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.ServerVersion, org.bitcoin.paymentchannel.Protos.ServerVersion.Builder, org.bitcoin.paymentchannel.Protos.ServerVersionOrBuilder>(
                  serverVersion_,
                  getParentForChildren(),
                  isClean());
          serverVersion_ = null;
        }
        return serverVersionBuilder_;
      }

      // optional .paymentchannels.Initiate initiate = 4;
      private org.bitcoin.paymentchannel.Protos.Initiate initiate_ = org.bitcoin.paymentchannel.Protos.Initiate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.Initiate, org.bitcoin.paymentchannel.Protos.Initiate.Builder, org.bitcoin.paymentchannel.Protos.InitiateOrBuilder> initiateBuilder_;
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public boolean hasInitiate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public org.bitcoin.paymentchannel.Protos.Initiate getInitiate() {
        if (initiateBuilder_ == null) {
          return initiate_;
        } else {
          return initiateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public Builder setInitiate(org.bitcoin.paymentchannel.Protos.Initiate value) {
        if (initiateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initiate_ = value;
          onChanged();
        } else {
          initiateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public Builder setInitiate(
          org.bitcoin.paymentchannel.Protos.Initiate.Builder builderForValue) {
        if (initiateBuilder_ == null) {
          initiate_ = builderForValue.build();
          onChanged();
        } else {
          initiateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public Builder mergeInitiate(org.bitcoin.paymentchannel.Protos.Initiate value) {
        if (initiateBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              initiate_ != org.bitcoin.paymentchannel.Protos.Initiate.getDefaultInstance()) {
            initiate_ =
              org.bitcoin.paymentchannel.Protos.Initiate.newBuilder(initiate_).mergeFrom(value).buildPartial();
          } else {
            initiate_ = value;
          }
          onChanged();
        } else {
          initiateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public Builder clearInitiate() {
        if (initiateBuilder_ == null) {
          initiate_ = org.bitcoin.paymentchannel.Protos.Initiate.getDefaultInstance();
          onChanged();
        } else {
          initiateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public org.bitcoin.paymentchannel.Protos.Initiate.Builder getInitiateBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getInitiateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      public org.bitcoin.paymentchannel.Protos.InitiateOrBuilder getInitiateOrBuilder() {
        if (initiateBuilder_ != null) {
          return initiateBuilder_.getMessageOrBuilder();
        } else {
          return initiate_;
        }
      }
      /**
       * <code>optional .paymentchannels.Initiate initiate = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.Initiate, org.bitcoin.paymentchannel.Protos.Initiate.Builder, org.bitcoin.paymentchannel.Protos.InitiateOrBuilder> 
          getInitiateFieldBuilder() {
        if (initiateBuilder_ == null) {
          initiateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.Initiate, org.bitcoin.paymentchannel.Protos.Initiate.Builder, org.bitcoin.paymentchannel.Protos.InitiateOrBuilder>(
                  initiate_,
                  getParentForChildren(),
                  isClean());
          initiate_ = null;
        }
        return initiateBuilder_;
      }

      // optional .paymentchannels.ProvideRefund provide_refund = 5;
      private org.bitcoin.paymentchannel.Protos.ProvideRefund provideRefund_ = org.bitcoin.paymentchannel.Protos.ProvideRefund.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ProvideRefund, org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder, org.bitcoin.paymentchannel.Protos.ProvideRefundOrBuilder> provideRefundBuilder_;
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public boolean hasProvideRefund() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ProvideRefund getProvideRefund() {
        if (provideRefundBuilder_ == null) {
          return provideRefund_;
        } else {
          return provideRefundBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public Builder setProvideRefund(org.bitcoin.paymentchannel.Protos.ProvideRefund value) {
        if (provideRefundBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          provideRefund_ = value;
          onChanged();
        } else {
          provideRefundBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public Builder setProvideRefund(
          org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder builderForValue) {
        if (provideRefundBuilder_ == null) {
          provideRefund_ = builderForValue.build();
          onChanged();
        } else {
          provideRefundBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public Builder mergeProvideRefund(org.bitcoin.paymentchannel.Protos.ProvideRefund value) {
        if (provideRefundBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              provideRefund_ != org.bitcoin.paymentchannel.Protos.ProvideRefund.getDefaultInstance()) {
            provideRefund_ =
              org.bitcoin.paymentchannel.Protos.ProvideRefund.newBuilder(provideRefund_).mergeFrom(value).buildPartial();
          } else {
            provideRefund_ = value;
          }
          onChanged();
        } else {
          provideRefundBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public Builder clearProvideRefund() {
        if (provideRefundBuilder_ == null) {
          provideRefund_ = org.bitcoin.paymentchannel.Protos.ProvideRefund.getDefaultInstance();
          onChanged();
        } else {
          provideRefundBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder getProvideRefundBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getProvideRefundFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ProvideRefundOrBuilder getProvideRefundOrBuilder() {
        if (provideRefundBuilder_ != null) {
          return provideRefundBuilder_.getMessageOrBuilder();
        } else {
          return provideRefund_;
        }
      }
      /**
       * <code>optional .paymentchannels.ProvideRefund provide_refund = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ProvideRefund, org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder, org.bitcoin.paymentchannel.Protos.ProvideRefundOrBuilder> 
          getProvideRefundFieldBuilder() {
        if (provideRefundBuilder_ == null) {
          provideRefundBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.ProvideRefund, org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder, org.bitcoin.paymentchannel.Protos.ProvideRefundOrBuilder>(
                  provideRefund_,
                  getParentForChildren(),
                  isClean());
          provideRefund_ = null;
        }
        return provideRefundBuilder_;
      }

      // optional .paymentchannels.ReturnRefund return_refund = 6;
      private org.bitcoin.paymentchannel.Protos.ReturnRefund returnRefund_ = org.bitcoin.paymentchannel.Protos.ReturnRefund.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ReturnRefund, org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder, org.bitcoin.paymentchannel.Protos.ReturnRefundOrBuilder> returnRefundBuilder_;
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public boolean hasReturnRefund() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ReturnRefund getReturnRefund() {
        if (returnRefundBuilder_ == null) {
          return returnRefund_;
        } else {
          return returnRefundBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public Builder setReturnRefund(org.bitcoin.paymentchannel.Protos.ReturnRefund value) {
        if (returnRefundBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnRefund_ = value;
          onChanged();
        } else {
          returnRefundBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public Builder setReturnRefund(
          org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder builderForValue) {
        if (returnRefundBuilder_ == null) {
          returnRefund_ = builderForValue.build();
          onChanged();
        } else {
          returnRefundBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public Builder mergeReturnRefund(org.bitcoin.paymentchannel.Protos.ReturnRefund value) {
        if (returnRefundBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              returnRefund_ != org.bitcoin.paymentchannel.Protos.ReturnRefund.getDefaultInstance()) {
            returnRefund_ =
              org.bitcoin.paymentchannel.Protos.ReturnRefund.newBuilder(returnRefund_).mergeFrom(value).buildPartial();
          } else {
            returnRefund_ = value;
          }
          onChanged();
        } else {
          returnRefundBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public Builder clearReturnRefund() {
        if (returnRefundBuilder_ == null) {
          returnRefund_ = org.bitcoin.paymentchannel.Protos.ReturnRefund.getDefaultInstance();
          onChanged();
        } else {
          returnRefundBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder getReturnRefundBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getReturnRefundFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ReturnRefundOrBuilder getReturnRefundOrBuilder() {
        if (returnRefundBuilder_ != null) {
          return returnRefundBuilder_.getMessageOrBuilder();
        } else {
          return returnRefund_;
        }
      }
      /**
       * <code>optional .paymentchannels.ReturnRefund return_refund = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ReturnRefund, org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder, org.bitcoin.paymentchannel.Protos.ReturnRefundOrBuilder> 
          getReturnRefundFieldBuilder() {
        if (returnRefundBuilder_ == null) {
          returnRefundBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.ReturnRefund, org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder, org.bitcoin.paymentchannel.Protos.ReturnRefundOrBuilder>(
                  returnRefund_,
                  getParentForChildren(),
                  isClean());
          returnRefund_ = null;
        }
        return returnRefundBuilder_;
      }

      // optional .paymentchannels.ProvideContract provide_contract = 7;
      private org.bitcoin.paymentchannel.Protos.ProvideContract provideContract_ = org.bitcoin.paymentchannel.Protos.ProvideContract.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ProvideContract, org.bitcoin.paymentchannel.Protos.ProvideContract.Builder, org.bitcoin.paymentchannel.Protos.ProvideContractOrBuilder> provideContractBuilder_;
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public boolean hasProvideContract() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ProvideContract getProvideContract() {
        if (provideContractBuilder_ == null) {
          return provideContract_;
        } else {
          return provideContractBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public Builder setProvideContract(org.bitcoin.paymentchannel.Protos.ProvideContract value) {
        if (provideContractBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          provideContract_ = value;
          onChanged();
        } else {
          provideContractBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public Builder setProvideContract(
          org.bitcoin.paymentchannel.Protos.ProvideContract.Builder builderForValue) {
        if (provideContractBuilder_ == null) {
          provideContract_ = builderForValue.build();
          onChanged();
        } else {
          provideContractBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public Builder mergeProvideContract(org.bitcoin.paymentchannel.Protos.ProvideContract value) {
        if (provideContractBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              provideContract_ != org.bitcoin.paymentchannel.Protos.ProvideContract.getDefaultInstance()) {
            provideContract_ =
              org.bitcoin.paymentchannel.Protos.ProvideContract.newBuilder(provideContract_).mergeFrom(value).buildPartial();
          } else {
            provideContract_ = value;
          }
          onChanged();
        } else {
          provideContractBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public Builder clearProvideContract() {
        if (provideContractBuilder_ == null) {
          provideContract_ = org.bitcoin.paymentchannel.Protos.ProvideContract.getDefaultInstance();
          onChanged();
        } else {
          provideContractBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ProvideContract.Builder getProvideContractBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getProvideContractFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ProvideContractOrBuilder getProvideContractOrBuilder() {
        if (provideContractBuilder_ != null) {
          return provideContractBuilder_.getMessageOrBuilder();
        } else {
          return provideContract_;
        }
      }
      /**
       * <code>optional .paymentchannels.ProvideContract provide_contract = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.ProvideContract, org.bitcoin.paymentchannel.Protos.ProvideContract.Builder, org.bitcoin.paymentchannel.Protos.ProvideContractOrBuilder> 
          getProvideContractFieldBuilder() {
        if (provideContractBuilder_ == null) {
          provideContractBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.ProvideContract, org.bitcoin.paymentchannel.Protos.ProvideContract.Builder, org.bitcoin.paymentchannel.Protos.ProvideContractOrBuilder>(
                  provideContract_,
                  getParentForChildren(),
                  isClean());
          provideContract_ = null;
        }
        return provideContractBuilder_;
      }

      // optional .paymentchannels.UpdatePayment update_payment = 8;
      private org.bitcoin.paymentchannel.Protos.UpdatePayment updatePayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.UpdatePayment, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder, org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder> updatePaymentBuilder_;
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public boolean hasUpdatePayment() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public org.bitcoin.paymentchannel.Protos.UpdatePayment getUpdatePayment() {
        if (updatePaymentBuilder_ == null) {
          return updatePayment_;
        } else {
          return updatePaymentBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public Builder setUpdatePayment(org.bitcoin.paymentchannel.Protos.UpdatePayment value) {
        if (updatePaymentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updatePayment_ = value;
          onChanged();
        } else {
          updatePaymentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public Builder setUpdatePayment(
          org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder builderForValue) {
        if (updatePaymentBuilder_ == null) {
          updatePayment_ = builderForValue.build();
          onChanged();
        } else {
          updatePaymentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public Builder mergeUpdatePayment(org.bitcoin.paymentchannel.Protos.UpdatePayment value) {
        if (updatePaymentBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              updatePayment_ != org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance()) {
            updatePayment_ =
              org.bitcoin.paymentchannel.Protos.UpdatePayment.newBuilder(updatePayment_).mergeFrom(value).buildPartial();
          } else {
            updatePayment_ = value;
          }
          onChanged();
        } else {
          updatePaymentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public Builder clearUpdatePayment() {
        if (updatePaymentBuilder_ == null) {
          updatePayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
          onChanged();
        } else {
          updatePaymentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder getUpdatePaymentBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getUpdatePaymentFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      public org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder getUpdatePaymentOrBuilder() {
        if (updatePaymentBuilder_ != null) {
          return updatePaymentBuilder_.getMessageOrBuilder();
        } else {
          return updatePayment_;
        }
      }
      /**
       * <code>optional .paymentchannels.UpdatePayment update_payment = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.UpdatePayment, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder, org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder> 
          getUpdatePaymentFieldBuilder() {
        if (updatePaymentBuilder_ == null) {
          updatePaymentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.UpdatePayment, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder, org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder>(
                  updatePayment_,
                  getParentForChildren(),
                  isClean());
          updatePayment_ = null;
        }
        return updatePaymentBuilder_;
      }

      // optional .paymentchannels.PaymentAck payment_ack = 11;
      private org.bitcoin.paymentchannel.Protos.PaymentAck paymentAck_ = org.bitcoin.paymentchannel.Protos.PaymentAck.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.PaymentAck, org.bitcoin.paymentchannel.Protos.PaymentAck.Builder, org.bitcoin.paymentchannel.Protos.PaymentAckOrBuilder> paymentAckBuilder_;
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public boolean hasPaymentAck() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public org.bitcoin.paymentchannel.Protos.PaymentAck getPaymentAck() {
        if (paymentAckBuilder_ == null) {
          return paymentAck_;
        } else {
          return paymentAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public Builder setPaymentAck(org.bitcoin.paymentchannel.Protos.PaymentAck value) {
        if (paymentAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          paymentAck_ = value;
          onChanged();
        } else {
          paymentAckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public Builder setPaymentAck(
          org.bitcoin.paymentchannel.Protos.PaymentAck.Builder builderForValue) {
        if (paymentAckBuilder_ == null) {
          paymentAck_ = builderForValue.build();
          onChanged();
        } else {
          paymentAckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public Builder mergePaymentAck(org.bitcoin.paymentchannel.Protos.PaymentAck value) {
        if (paymentAckBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              paymentAck_ != org.bitcoin.paymentchannel.Protos.PaymentAck.getDefaultInstance()) {
            paymentAck_ =
              org.bitcoin.paymentchannel.Protos.PaymentAck.newBuilder(paymentAck_).mergeFrom(value).buildPartial();
          } else {
            paymentAck_ = value;
          }
          onChanged();
        } else {
          paymentAckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public Builder clearPaymentAck() {
        if (paymentAckBuilder_ == null) {
          paymentAck_ = org.bitcoin.paymentchannel.Protos.PaymentAck.getDefaultInstance();
          onChanged();
        } else {
          paymentAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public org.bitcoin.paymentchannel.Protos.PaymentAck.Builder getPaymentAckBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getPaymentAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      public org.bitcoin.paymentchannel.Protos.PaymentAckOrBuilder getPaymentAckOrBuilder() {
        if (paymentAckBuilder_ != null) {
          return paymentAckBuilder_.getMessageOrBuilder();
        } else {
          return paymentAck_;
        }
      }
      /**
       * <code>optional .paymentchannels.PaymentAck payment_ack = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.PaymentAck, org.bitcoin.paymentchannel.Protos.PaymentAck.Builder, org.bitcoin.paymentchannel.Protos.PaymentAckOrBuilder> 
          getPaymentAckFieldBuilder() {
        if (paymentAckBuilder_ == null) {
          paymentAckBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.PaymentAck, org.bitcoin.paymentchannel.Protos.PaymentAck.Builder, org.bitcoin.paymentchannel.Protos.PaymentAckOrBuilder>(
                  paymentAck_,
                  getParentForChildren(),
                  isClean());
          paymentAck_ = null;
        }
        return paymentAckBuilder_;
      }

      // optional .paymentchannels.Settlement settlement = 9;
      private org.bitcoin.paymentchannel.Protos.Settlement settlement_ = org.bitcoin.paymentchannel.Protos.Settlement.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.Settlement, org.bitcoin.paymentchannel.Protos.Settlement.Builder, org.bitcoin.paymentchannel.Protos.SettlementOrBuilder> settlementBuilder_;
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public boolean hasSettlement() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public org.bitcoin.paymentchannel.Protos.Settlement getSettlement() {
        if (settlementBuilder_ == null) {
          return settlement_;
        } else {
          return settlementBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public Builder setSettlement(org.bitcoin.paymentchannel.Protos.Settlement value) {
        if (settlementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          settlement_ = value;
          onChanged();
        } else {
          settlementBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public Builder setSettlement(
          org.bitcoin.paymentchannel.Protos.Settlement.Builder builderForValue) {
        if (settlementBuilder_ == null) {
          settlement_ = builderForValue.build();
          onChanged();
        } else {
          settlementBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public Builder mergeSettlement(org.bitcoin.paymentchannel.Protos.Settlement value) {
        if (settlementBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              settlement_ != org.bitcoin.paymentchannel.Protos.Settlement.getDefaultInstance()) {
            settlement_ =
              org.bitcoin.paymentchannel.Protos.Settlement.newBuilder(settlement_).mergeFrom(value).buildPartial();
          } else {
            settlement_ = value;
          }
          onChanged();
        } else {
          settlementBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public Builder clearSettlement() {
        if (settlementBuilder_ == null) {
          settlement_ = org.bitcoin.paymentchannel.Protos.Settlement.getDefaultInstance();
          onChanged();
        } else {
          settlementBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public org.bitcoin.paymentchannel.Protos.Settlement.Builder getSettlementBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getSettlementFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      public org.bitcoin.paymentchannel.Protos.SettlementOrBuilder getSettlementOrBuilder() {
        if (settlementBuilder_ != null) {
          return settlementBuilder_.getMessageOrBuilder();
        } else {
          return settlement_;
        }
      }
      /**
       * <code>optional .paymentchannels.Settlement settlement = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.Settlement, org.bitcoin.paymentchannel.Protos.Settlement.Builder, org.bitcoin.paymentchannel.Protos.SettlementOrBuilder> 
          getSettlementFieldBuilder() {
        if (settlementBuilder_ == null) {
          settlementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.Settlement, org.bitcoin.paymentchannel.Protos.Settlement.Builder, org.bitcoin.paymentchannel.Protos.SettlementOrBuilder>(
                  settlement_,
                  getParentForChildren(),
                  isClean());
          settlement_ = null;
        }
        return settlementBuilder_;
      }

      // optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;
      private org.bitcoin.paymentchannel.Protos.HTLCProvideContract htlcProvideContract_ = org.bitcoin.paymentchannel.Protos.HTLCProvideContract.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCProvideContract, org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder, org.bitcoin.paymentchannel.Protos.HTLCProvideContractOrBuilder> htlcProvideContractBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public boolean hasHtlcProvideContract() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCProvideContract getHtlcProvideContract() {
        if (htlcProvideContractBuilder_ == null) {
          return htlcProvideContract_;
        } else {
          return htlcProvideContractBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public Builder setHtlcProvideContract(org.bitcoin.paymentchannel.Protos.HTLCProvideContract value) {
        if (htlcProvideContractBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcProvideContract_ = value;
          onChanged();
        } else {
          htlcProvideContractBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public Builder setHtlcProvideContract(
          org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder builderForValue) {
        if (htlcProvideContractBuilder_ == null) {
          htlcProvideContract_ = builderForValue.build();
          onChanged();
        } else {
          htlcProvideContractBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public Builder mergeHtlcProvideContract(org.bitcoin.paymentchannel.Protos.HTLCProvideContract value) {
        if (htlcProvideContractBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              htlcProvideContract_ != org.bitcoin.paymentchannel.Protos.HTLCProvideContract.getDefaultInstance()) {
            htlcProvideContract_ =
              org.bitcoin.paymentchannel.Protos.HTLCProvideContract.newBuilder(htlcProvideContract_).mergeFrom(value).buildPartial();
          } else {
            htlcProvideContract_ = value;
          }
          onChanged();
        } else {
          htlcProvideContractBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public Builder clearHtlcProvideContract() {
        if (htlcProvideContractBuilder_ == null) {
          htlcProvideContract_ = org.bitcoin.paymentchannel.Protos.HTLCProvideContract.getDefaultInstance();
          onChanged();
        } else {
          htlcProvideContractBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder getHtlcProvideContractBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getHtlcProvideContractFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCProvideContractOrBuilder getHtlcProvideContractOrBuilder() {
        if (htlcProvideContractBuilder_ != null) {
          return htlcProvideContractBuilder_.getMessageOrBuilder();
        } else {
          return htlcProvideContract_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideContract htlc_provide_contract = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCProvideContract, org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder, org.bitcoin.paymentchannel.Protos.HTLCProvideContractOrBuilder> 
          getHtlcProvideContractFieldBuilder() {
        if (htlcProvideContractBuilder_ == null) {
          htlcProvideContractBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCProvideContract, org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder, org.bitcoin.paymentchannel.Protos.HTLCProvideContractOrBuilder>(
                  htlcProvideContract_,
                  getParentForChildren(),
                  isClean());
          htlcProvideContract_ = null;
        }
        return htlcProvideContractBuilder_;
      }

      // optional .paymentchannels.HTLCInit htlc_init = 13;
      private org.bitcoin.paymentchannel.Protos.HTLCInit htlcInit_ = org.bitcoin.paymentchannel.Protos.HTLCInit.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCInit, org.bitcoin.paymentchannel.Protos.HTLCInit.Builder, org.bitcoin.paymentchannel.Protos.HTLCInitOrBuilder> htlcInitBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public boolean hasHtlcInit() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCInit getHtlcInit() {
        if (htlcInitBuilder_ == null) {
          return htlcInit_;
        } else {
          return htlcInitBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public Builder setHtlcInit(org.bitcoin.paymentchannel.Protos.HTLCInit value) {
        if (htlcInitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcInit_ = value;
          onChanged();
        } else {
          htlcInitBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public Builder setHtlcInit(
          org.bitcoin.paymentchannel.Protos.HTLCInit.Builder builderForValue) {
        if (htlcInitBuilder_ == null) {
          htlcInit_ = builderForValue.build();
          onChanged();
        } else {
          htlcInitBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public Builder mergeHtlcInit(org.bitcoin.paymentchannel.Protos.HTLCInit value) {
        if (htlcInitBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              htlcInit_ != org.bitcoin.paymentchannel.Protos.HTLCInit.getDefaultInstance()) {
            htlcInit_ =
              org.bitcoin.paymentchannel.Protos.HTLCInit.newBuilder(htlcInit_).mergeFrom(value).buildPartial();
          } else {
            htlcInit_ = value;
          }
          onChanged();
        } else {
          htlcInitBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public Builder clearHtlcInit() {
        if (htlcInitBuilder_ == null) {
          htlcInit_ = org.bitcoin.paymentchannel.Protos.HTLCInit.getDefaultInstance();
          onChanged();
        } else {
          htlcInitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCInit.Builder getHtlcInitBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getHtlcInitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCInitOrBuilder getHtlcInitOrBuilder() {
        if (htlcInitBuilder_ != null) {
          return htlcInitBuilder_.getMessageOrBuilder();
        } else {
          return htlcInit_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCInit htlc_init = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCInit, org.bitcoin.paymentchannel.Protos.HTLCInit.Builder, org.bitcoin.paymentchannel.Protos.HTLCInitOrBuilder> 
          getHtlcInitFieldBuilder() {
        if (htlcInitBuilder_ == null) {
          htlcInitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCInit, org.bitcoin.paymentchannel.Protos.HTLCInit.Builder, org.bitcoin.paymentchannel.Protos.HTLCInitOrBuilder>(
                  htlcInit_,
                  getParentForChildren(),
                  isClean());
          htlcInit_ = null;
        }
        return htlcInitBuilder_;
      }

      // optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;
      private org.bitcoin.paymentchannel.Protos.HTLCInitReply htlcInitReply_ = org.bitcoin.paymentchannel.Protos.HTLCInitReply.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCInitReply, org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder, org.bitcoin.paymentchannel.Protos.HTLCInitReplyOrBuilder> htlcInitReplyBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public boolean hasHtlcInitReply() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCInitReply getHtlcInitReply() {
        if (htlcInitReplyBuilder_ == null) {
          return htlcInitReply_;
        } else {
          return htlcInitReplyBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public Builder setHtlcInitReply(org.bitcoin.paymentchannel.Protos.HTLCInitReply value) {
        if (htlcInitReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcInitReply_ = value;
          onChanged();
        } else {
          htlcInitReplyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public Builder setHtlcInitReply(
          org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder builderForValue) {
        if (htlcInitReplyBuilder_ == null) {
          htlcInitReply_ = builderForValue.build();
          onChanged();
        } else {
          htlcInitReplyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public Builder mergeHtlcInitReply(org.bitcoin.paymentchannel.Protos.HTLCInitReply value) {
        if (htlcInitReplyBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              htlcInitReply_ != org.bitcoin.paymentchannel.Protos.HTLCInitReply.getDefaultInstance()) {
            htlcInitReply_ =
              org.bitcoin.paymentchannel.Protos.HTLCInitReply.newBuilder(htlcInitReply_).mergeFrom(value).buildPartial();
          } else {
            htlcInitReply_ = value;
          }
          onChanged();
        } else {
          htlcInitReplyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public Builder clearHtlcInitReply() {
        if (htlcInitReplyBuilder_ == null) {
          htlcInitReply_ = org.bitcoin.paymentchannel.Protos.HTLCInitReply.getDefaultInstance();
          onChanged();
        } else {
          htlcInitReplyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder getHtlcInitReplyBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getHtlcInitReplyFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCInitReplyOrBuilder getHtlcInitReplyOrBuilder() {
        if (htlcInitReplyBuilder_ != null) {
          return htlcInitReplyBuilder_.getMessageOrBuilder();
        } else {
          return htlcInitReply_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCInitReply htlc_init_reply = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCInitReply, org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder, org.bitcoin.paymentchannel.Protos.HTLCInitReplyOrBuilder> 
          getHtlcInitReplyFieldBuilder() {
        if (htlcInitReplyBuilder_ == null) {
          htlcInitReplyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCInitReply, org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder, org.bitcoin.paymentchannel.Protos.HTLCInitReplyOrBuilder>(
                  htlcInitReply_,
                  getParentForChildren(),
                  isClean());
          htlcInitReply_ = null;
        }
        return htlcInitReplyBuilder_;
      }

      // optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;
      private org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown htlcSignedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardownOrBuilder> htlcSignedTeardownBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public boolean hasHtlcSignedTeardown() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown getHtlcSignedTeardown() {
        if (htlcSignedTeardownBuilder_ == null) {
          return htlcSignedTeardown_;
        } else {
          return htlcSignedTeardownBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public Builder setHtlcSignedTeardown(org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown value) {
        if (htlcSignedTeardownBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcSignedTeardown_ = value;
          onChanged();
        } else {
          htlcSignedTeardownBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public Builder setHtlcSignedTeardown(
          org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder builderForValue) {
        if (htlcSignedTeardownBuilder_ == null) {
          htlcSignedTeardown_ = builderForValue.build();
          onChanged();
        } else {
          htlcSignedTeardownBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public Builder mergeHtlcSignedTeardown(org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown value) {
        if (htlcSignedTeardownBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              htlcSignedTeardown_ != org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.getDefaultInstance()) {
            htlcSignedTeardown_ =
              org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.newBuilder(htlcSignedTeardown_).mergeFrom(value).buildPartial();
          } else {
            htlcSignedTeardown_ = value;
          }
          onChanged();
        } else {
          htlcSignedTeardownBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public Builder clearHtlcSignedTeardown() {
        if (htlcSignedTeardownBuilder_ == null) {
          htlcSignedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.getDefaultInstance();
          onChanged();
        } else {
          htlcSignedTeardownBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder getHtlcSignedTeardownBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getHtlcSignedTeardownFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardownOrBuilder getHtlcSignedTeardownOrBuilder() {
        if (htlcSignedTeardownBuilder_ != null) {
          return htlcSignedTeardownBuilder_.getMessageOrBuilder();
        } else {
          return htlcSignedTeardown_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCProvideSignedTeardown htlc_signed_teardown = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardownOrBuilder> 
          getHtlcSignedTeardownFieldBuilder() {
        if (htlcSignedTeardownBuilder_ == null) {
          htlcSignedTeardownBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardownOrBuilder>(
                  htlcSignedTeardown_,
                  getParentForChildren(),
                  isClean());
          htlcSignedTeardown_ = null;
        }
        return htlcSignedTeardownBuilder_;
      }

      // optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;
      private org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash htlcSignedRefundWithHash_ = org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHashOrBuilder> htlcSignedRefundWithHashBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public boolean hasHtlcSignedRefundWithHash() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash getHtlcSignedRefundWithHash() {
        if (htlcSignedRefundWithHashBuilder_ == null) {
          return htlcSignedRefundWithHash_;
        } else {
          return htlcSignedRefundWithHashBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public Builder setHtlcSignedRefundWithHash(org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash value) {
        if (htlcSignedRefundWithHashBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcSignedRefundWithHash_ = value;
          onChanged();
        } else {
          htlcSignedRefundWithHashBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public Builder setHtlcSignedRefundWithHash(
          org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder builderForValue) {
        if (htlcSignedRefundWithHashBuilder_ == null) {
          htlcSignedRefundWithHash_ = builderForValue.build();
          onChanged();
        } else {
          htlcSignedRefundWithHashBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public Builder mergeHtlcSignedRefundWithHash(org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash value) {
        if (htlcSignedRefundWithHashBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              htlcSignedRefundWithHash_ != org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.getDefaultInstance()) {
            htlcSignedRefundWithHash_ =
              org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.newBuilder(htlcSignedRefundWithHash_).mergeFrom(value).buildPartial();
          } else {
            htlcSignedRefundWithHash_ = value;
          }
          onChanged();
        } else {
          htlcSignedRefundWithHashBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public Builder clearHtlcSignedRefundWithHash() {
        if (htlcSignedRefundWithHashBuilder_ == null) {
          htlcSignedRefundWithHash_ = org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.getDefaultInstance();
          onChanged();
        } else {
          htlcSignedRefundWithHashBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder getHtlcSignedRefundWithHashBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getHtlcSignedRefundWithHashFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHashOrBuilder getHtlcSignedRefundWithHashOrBuilder() {
        if (htlcSignedRefundWithHashBuilder_ != null) {
          return htlcSignedRefundWithHashBuilder_.getMessageOrBuilder();
        } else {
          return htlcSignedRefundWithHash_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedRefundWithHash htlc_signed_refund_with_hash = 16;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHashOrBuilder> 
          getHtlcSignedRefundWithHashFieldBuilder() {
        if (htlcSignedRefundWithHashBuilder_ == null) {
          htlcSignedRefundWithHashBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHashOrBuilder>(
                  htlcSignedRefundWithHash_,
                  getParentForChildren(),
                  isClean());
          htlcSignedRefundWithHash_ = null;
        }
        return htlcSignedRefundWithHashBuilder_;
      }

      // optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;
      private org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit htlcSignedSettleAndForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeitOrBuilder> htlcSignedSettleAndForfeitBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public boolean hasHtlcSignedSettleAndForfeit() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit getHtlcSignedSettleAndForfeit() {
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          return htlcSignedSettleAndForfeit_;
        } else {
          return htlcSignedSettleAndForfeitBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public Builder setHtlcSignedSettleAndForfeit(org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit value) {
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcSignedSettleAndForfeit_ = value;
          onChanged();
        } else {
          htlcSignedSettleAndForfeitBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public Builder setHtlcSignedSettleAndForfeit(
          org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder builderForValue) {
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          htlcSignedSettleAndForfeit_ = builderForValue.build();
          onChanged();
        } else {
          htlcSignedSettleAndForfeitBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public Builder mergeHtlcSignedSettleAndForfeit(org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit value) {
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              htlcSignedSettleAndForfeit_ != org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.getDefaultInstance()) {
            htlcSignedSettleAndForfeit_ =
              org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.newBuilder(htlcSignedSettleAndForfeit_).mergeFrom(value).buildPartial();
          } else {
            htlcSignedSettleAndForfeit_ = value;
          }
          onChanged();
        } else {
          htlcSignedSettleAndForfeitBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public Builder clearHtlcSignedSettleAndForfeit() {
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          htlcSignedSettleAndForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.getDefaultInstance();
          onChanged();
        } else {
          htlcSignedSettleAndForfeitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder getHtlcSignedSettleAndForfeitBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getHtlcSignedSettleAndForfeitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeitOrBuilder getHtlcSignedSettleAndForfeitOrBuilder() {
        if (htlcSignedSettleAndForfeitBuilder_ != null) {
          return htlcSignedSettleAndForfeitBuilder_.getMessageOrBuilder();
        } else {
          return htlcSignedSettleAndForfeit_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCSignedSettleAndForfeit htlc_signed_settle_and_forfeit = 17;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeitOrBuilder> 
          getHtlcSignedSettleAndForfeitFieldBuilder() {
        if (htlcSignedSettleAndForfeitBuilder_ == null) {
          htlcSignedSettleAndForfeitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeitOrBuilder>(
                  htlcSignedSettleAndForfeit_,
                  getParentForChildren(),
                  isClean());
          htlcSignedSettleAndForfeit_ = null;
        }
        return htlcSignedSettleAndForfeitBuilder_;
      }

      // optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;
      private org.bitcoin.paymentchannel.Protos.HTLCSetupComplete htlcSetupComplete_ = org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSetupComplete, org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder, org.bitcoin.paymentchannel.Protos.HTLCSetupCompleteOrBuilder> htlcSetupCompleteBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public boolean hasHtlcSetupComplete() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSetupComplete getHtlcSetupComplete() {
        if (htlcSetupCompleteBuilder_ == null) {
          return htlcSetupComplete_;
        } else {
          return htlcSetupCompleteBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public Builder setHtlcSetupComplete(org.bitcoin.paymentchannel.Protos.HTLCSetupComplete value) {
        if (htlcSetupCompleteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcSetupComplete_ = value;
          onChanged();
        } else {
          htlcSetupCompleteBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public Builder setHtlcSetupComplete(
          org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder builderForValue) {
        if (htlcSetupCompleteBuilder_ == null) {
          htlcSetupComplete_ = builderForValue.build();
          onChanged();
        } else {
          htlcSetupCompleteBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public Builder mergeHtlcSetupComplete(org.bitcoin.paymentchannel.Protos.HTLCSetupComplete value) {
        if (htlcSetupCompleteBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000) &&
              htlcSetupComplete_ != org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.getDefaultInstance()) {
            htlcSetupComplete_ =
              org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.newBuilder(htlcSetupComplete_).mergeFrom(value).buildPartial();
          } else {
            htlcSetupComplete_ = value;
          }
          onChanged();
        } else {
          htlcSetupCompleteBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00010000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public Builder clearHtlcSetupComplete() {
        if (htlcSetupCompleteBuilder_ == null) {
          htlcSetupComplete_ = org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.getDefaultInstance();
          onChanged();
        } else {
          htlcSetupCompleteBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder getHtlcSetupCompleteBuilder() {
        bitField0_ |= 0x00010000;
        onChanged();
        return getHtlcSetupCompleteFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSetupCompleteOrBuilder getHtlcSetupCompleteOrBuilder() {
        if (htlcSetupCompleteBuilder_ != null) {
          return htlcSetupCompleteBuilder_.getMessageOrBuilder();
        } else {
          return htlcSetupComplete_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCSetupComplete htlc_setup_complete = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSetupComplete, org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder, org.bitcoin.paymentchannel.Protos.HTLCSetupCompleteOrBuilder> 
          getHtlcSetupCompleteFieldBuilder() {
        if (htlcSetupCompleteBuilder_ == null) {
          htlcSetupCompleteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSetupComplete, org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder, org.bitcoin.paymentchannel.Protos.HTLCSetupCompleteOrBuilder>(
                  htlcSetupComplete_,
                  getParentForChildren(),
                  isClean());
          htlcSetupComplete_ = null;
        }
        return htlcSetupCompleteBuilder_;
      }

      // optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;
      private org.bitcoin.paymentchannel.Protos.HTLCServerUpdate htlcServerUpdate_ = org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCServerUpdate, org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder, org.bitcoin.paymentchannel.Protos.HTLCServerUpdateOrBuilder> htlcServerUpdateBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public boolean hasHtlcServerUpdate() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCServerUpdate getHtlcServerUpdate() {
        if (htlcServerUpdateBuilder_ == null) {
          return htlcServerUpdate_;
        } else {
          return htlcServerUpdateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public Builder setHtlcServerUpdate(org.bitcoin.paymentchannel.Protos.HTLCServerUpdate value) {
        if (htlcServerUpdateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcServerUpdate_ = value;
          onChanged();
        } else {
          htlcServerUpdateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public Builder setHtlcServerUpdate(
          org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder builderForValue) {
        if (htlcServerUpdateBuilder_ == null) {
          htlcServerUpdate_ = builderForValue.build();
          onChanged();
        } else {
          htlcServerUpdateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public Builder mergeHtlcServerUpdate(org.bitcoin.paymentchannel.Protos.HTLCServerUpdate value) {
        if (htlcServerUpdateBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000) &&
              htlcServerUpdate_ != org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.getDefaultInstance()) {
            htlcServerUpdate_ =
              org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.newBuilder(htlcServerUpdate_).mergeFrom(value).buildPartial();
          } else {
            htlcServerUpdate_ = value;
          }
          onChanged();
        } else {
          htlcServerUpdateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00020000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public Builder clearHtlcServerUpdate() {
        if (htlcServerUpdateBuilder_ == null) {
          htlcServerUpdate_ = org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.getDefaultInstance();
          onChanged();
        } else {
          htlcServerUpdateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder getHtlcServerUpdateBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getHtlcServerUpdateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCServerUpdateOrBuilder getHtlcServerUpdateOrBuilder() {
        if (htlcServerUpdateBuilder_ != null) {
          return htlcServerUpdateBuilder_.getMessageOrBuilder();
        } else {
          return htlcServerUpdate_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCServerUpdate htlc_server_update = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCServerUpdate, org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder, org.bitcoin.paymentchannel.Protos.HTLCServerUpdateOrBuilder> 
          getHtlcServerUpdateFieldBuilder() {
        if (htlcServerUpdateBuilder_ == null) {
          htlcServerUpdateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCServerUpdate, org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder, org.bitcoin.paymentchannel.Protos.HTLCServerUpdateOrBuilder>(
                  htlcServerUpdate_,
                  getParentForChildren(),
                  isClean());
          htlcServerUpdate_ = null;
        }
        return htlcServerUpdateBuilder_;
      }

      // optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;
      private org.bitcoin.paymentchannel.Protos.HTLCPaymentAck htlcPaymentAck_ = org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCPaymentAck, org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentAckOrBuilder> htlcPaymentAckBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public boolean hasHtlcPaymentAck() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentAck getHtlcPaymentAck() {
        if (htlcPaymentAckBuilder_ == null) {
          return htlcPaymentAck_;
        } else {
          return htlcPaymentAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public Builder setHtlcPaymentAck(org.bitcoin.paymentchannel.Protos.HTLCPaymentAck value) {
        if (htlcPaymentAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcPaymentAck_ = value;
          onChanged();
        } else {
          htlcPaymentAckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public Builder setHtlcPaymentAck(
          org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder builderForValue) {
        if (htlcPaymentAckBuilder_ == null) {
          htlcPaymentAck_ = builderForValue.build();
          onChanged();
        } else {
          htlcPaymentAckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public Builder mergeHtlcPaymentAck(org.bitcoin.paymentchannel.Protos.HTLCPaymentAck value) {
        if (htlcPaymentAckBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              htlcPaymentAck_ != org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.getDefaultInstance()) {
            htlcPaymentAck_ =
              org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.newBuilder(htlcPaymentAck_).mergeFrom(value).buildPartial();
          } else {
            htlcPaymentAck_ = value;
          }
          onChanged();
        } else {
          htlcPaymentAckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public Builder clearHtlcPaymentAck() {
        if (htlcPaymentAckBuilder_ == null) {
          htlcPaymentAck_ = org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.getDefaultInstance();
          onChanged();
        } else {
          htlcPaymentAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder getHtlcPaymentAckBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getHtlcPaymentAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentAckOrBuilder getHtlcPaymentAckOrBuilder() {
        if (htlcPaymentAckBuilder_ != null) {
          return htlcPaymentAckBuilder_.getMessageOrBuilder();
        } else {
          return htlcPaymentAck_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCPaymentAck htlc_payment_ack = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCPaymentAck, org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentAckOrBuilder> 
          getHtlcPaymentAckFieldBuilder() {
        if (htlcPaymentAckBuilder_ == null) {
          htlcPaymentAckBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCPaymentAck, org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentAckOrBuilder>(
                  htlcPaymentAck_,
                  getParentForChildren(),
                  isClean());
          htlcPaymentAck_ = null;
        }
        return htlcPaymentAckBuilder_;
      }

      // optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;
      private org.bitcoin.paymentchannel.Protos.HTLCRoundInit htlcRoundInit_ = org.bitcoin.paymentchannel.Protos.HTLCRoundInit.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRoundInit, org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundInitOrBuilder> htlcRoundInitBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public boolean hasHtlcRoundInit() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundInit getHtlcRoundInit() {
        if (htlcRoundInitBuilder_ == null) {
          return htlcRoundInit_;
        } else {
          return htlcRoundInitBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public Builder setHtlcRoundInit(org.bitcoin.paymentchannel.Protos.HTLCRoundInit value) {
        if (htlcRoundInitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcRoundInit_ = value;
          onChanged();
        } else {
          htlcRoundInitBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public Builder setHtlcRoundInit(
          org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder builderForValue) {
        if (htlcRoundInitBuilder_ == null) {
          htlcRoundInit_ = builderForValue.build();
          onChanged();
        } else {
          htlcRoundInitBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public Builder mergeHtlcRoundInit(org.bitcoin.paymentchannel.Protos.HTLCRoundInit value) {
        if (htlcRoundInitBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              htlcRoundInit_ != org.bitcoin.paymentchannel.Protos.HTLCRoundInit.getDefaultInstance()) {
            htlcRoundInit_ =
              org.bitcoin.paymentchannel.Protos.HTLCRoundInit.newBuilder(htlcRoundInit_).mergeFrom(value).buildPartial();
          } else {
            htlcRoundInit_ = value;
          }
          onChanged();
        } else {
          htlcRoundInitBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public Builder clearHtlcRoundInit() {
        if (htlcRoundInitBuilder_ == null) {
          htlcRoundInit_ = org.bitcoin.paymentchannel.Protos.HTLCRoundInit.getDefaultInstance();
          onChanged();
        } else {
          htlcRoundInitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder getHtlcRoundInitBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getHtlcRoundInitFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundInitOrBuilder getHtlcRoundInitOrBuilder() {
        if (htlcRoundInitBuilder_ != null) {
          return htlcRoundInitBuilder_.getMessageOrBuilder();
        } else {
          return htlcRoundInit_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundInit htlc_round_init = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRoundInit, org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundInitOrBuilder> 
          getHtlcRoundInitFieldBuilder() {
        if (htlcRoundInitBuilder_ == null) {
          htlcRoundInitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCRoundInit, org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundInitOrBuilder>(
                  htlcRoundInit_,
                  getParentForChildren(),
                  isClean());
          htlcRoundInit_ = null;
        }
        return htlcRoundInitBuilder_;
      }

      // optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;
      private org.bitcoin.paymentchannel.Protos.HTLCRoundAck htlcRoundAck_ = org.bitcoin.paymentchannel.Protos.HTLCRoundAck.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRoundAck, org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundAckOrBuilder> htlcRoundAckBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public boolean hasHtlcRoundAck() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundAck getHtlcRoundAck() {
        if (htlcRoundAckBuilder_ == null) {
          return htlcRoundAck_;
        } else {
          return htlcRoundAckBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public Builder setHtlcRoundAck(org.bitcoin.paymentchannel.Protos.HTLCRoundAck value) {
        if (htlcRoundAckBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcRoundAck_ = value;
          onChanged();
        } else {
          htlcRoundAckBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public Builder setHtlcRoundAck(
          org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder builderForValue) {
        if (htlcRoundAckBuilder_ == null) {
          htlcRoundAck_ = builderForValue.build();
          onChanged();
        } else {
          htlcRoundAckBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public Builder mergeHtlcRoundAck(org.bitcoin.paymentchannel.Protos.HTLCRoundAck value) {
        if (htlcRoundAckBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              htlcRoundAck_ != org.bitcoin.paymentchannel.Protos.HTLCRoundAck.getDefaultInstance()) {
            htlcRoundAck_ =
              org.bitcoin.paymentchannel.Protos.HTLCRoundAck.newBuilder(htlcRoundAck_).mergeFrom(value).buildPartial();
          } else {
            htlcRoundAck_ = value;
          }
          onChanged();
        } else {
          htlcRoundAckBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public Builder clearHtlcRoundAck() {
        if (htlcRoundAckBuilder_ == null) {
          htlcRoundAck_ = org.bitcoin.paymentchannel.Protos.HTLCRoundAck.getDefaultInstance();
          onChanged();
        } else {
          htlcRoundAckBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder getHtlcRoundAckBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getHtlcRoundAckFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundAckOrBuilder getHtlcRoundAckOrBuilder() {
        if (htlcRoundAckBuilder_ != null) {
          return htlcRoundAckBuilder_.getMessageOrBuilder();
        } else {
          return htlcRoundAck_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundAck htlc_round_ack = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRoundAck, org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundAckOrBuilder> 
          getHtlcRoundAckFieldBuilder() {
        if (htlcRoundAckBuilder_ == null) {
          htlcRoundAckBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCRoundAck, org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundAckOrBuilder>(
                  htlcRoundAck_,
                  getParentForChildren(),
                  isClean());
          htlcRoundAck_ = null;
        }
        return htlcRoundAckBuilder_;
      }

      // optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;
      private org.bitcoin.paymentchannel.Protos.HTLCRoundDone htlcRoundDone_ = org.bitcoin.paymentchannel.Protos.HTLCRoundDone.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRoundDone, org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundDoneOrBuilder> htlcRoundDoneBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public boolean hasHtlcRoundDone() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundDone getHtlcRoundDone() {
        if (htlcRoundDoneBuilder_ == null) {
          return htlcRoundDone_;
        } else {
          return htlcRoundDoneBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public Builder setHtlcRoundDone(org.bitcoin.paymentchannel.Protos.HTLCRoundDone value) {
        if (htlcRoundDoneBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcRoundDone_ = value;
          onChanged();
        } else {
          htlcRoundDoneBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public Builder setHtlcRoundDone(
          org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder builderForValue) {
        if (htlcRoundDoneBuilder_ == null) {
          htlcRoundDone_ = builderForValue.build();
          onChanged();
        } else {
          htlcRoundDoneBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public Builder mergeHtlcRoundDone(org.bitcoin.paymentchannel.Protos.HTLCRoundDone value) {
        if (htlcRoundDoneBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000) &&
              htlcRoundDone_ != org.bitcoin.paymentchannel.Protos.HTLCRoundDone.getDefaultInstance()) {
            htlcRoundDone_ =
              org.bitcoin.paymentchannel.Protos.HTLCRoundDone.newBuilder(htlcRoundDone_).mergeFrom(value).buildPartial();
          } else {
            htlcRoundDone_ = value;
          }
          onChanged();
        } else {
          htlcRoundDoneBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00200000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public Builder clearHtlcRoundDone() {
        if (htlcRoundDoneBuilder_ == null) {
          htlcRoundDone_ = org.bitcoin.paymentchannel.Protos.HTLCRoundDone.getDefaultInstance();
          onChanged();
        } else {
          htlcRoundDoneBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder getHtlcRoundDoneBuilder() {
        bitField0_ |= 0x00200000;
        onChanged();
        return getHtlcRoundDoneFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRoundDoneOrBuilder getHtlcRoundDoneOrBuilder() {
        if (htlcRoundDoneBuilder_ != null) {
          return htlcRoundDoneBuilder_.getMessageOrBuilder();
        } else {
          return htlcRoundDone_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCRoundDone htlc_round_done = 24;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRoundDone, org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundDoneOrBuilder> 
          getHtlcRoundDoneFieldBuilder() {
        if (htlcRoundDoneBuilder_ == null) {
          htlcRoundDoneBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCRoundDone, org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder, org.bitcoin.paymentchannel.Protos.HTLCRoundDoneOrBuilder>(
                  htlcRoundDone_,
                  getParentForChildren(),
                  isClean());
          htlcRoundDone_ = null;
        }
        return htlcRoundDoneBuilder_;
      }

      // optional .paymentchannels.HTLCFlow htlc_flow = 25;
      private org.bitcoin.paymentchannel.Protos.HTLCFlow htlcFlow_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCFlow, org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder, org.bitcoin.paymentchannel.Protos.HTLCFlowOrBuilder> htlcFlowBuilder_;
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public boolean hasHtlcFlow() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCFlow getHtlcFlow() {
        if (htlcFlowBuilder_ == null) {
          return htlcFlow_;
        } else {
          return htlcFlowBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public Builder setHtlcFlow(org.bitcoin.paymentchannel.Protos.HTLCFlow value) {
        if (htlcFlowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          htlcFlow_ = value;
          onChanged();
        } else {
          htlcFlowBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public Builder setHtlcFlow(
          org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder builderForValue) {
        if (htlcFlowBuilder_ == null) {
          htlcFlow_ = builderForValue.build();
          onChanged();
        } else {
          htlcFlowBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public Builder mergeHtlcFlow(org.bitcoin.paymentchannel.Protos.HTLCFlow value) {
        if (htlcFlowBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000) &&
              htlcFlow_ != org.bitcoin.paymentchannel.Protos.HTLCFlow.getDefaultInstance()) {
            htlcFlow_ =
              org.bitcoin.paymentchannel.Protos.HTLCFlow.newBuilder(htlcFlow_).mergeFrom(value).buildPartial();
          } else {
            htlcFlow_ = value;
          }
          onChanged();
        } else {
          htlcFlowBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00400000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public Builder clearHtlcFlow() {
        if (htlcFlowBuilder_ == null) {
          htlcFlow_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.getDefaultInstance();
          onChanged();
        } else {
          htlcFlowBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00400000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder getHtlcFlowBuilder() {
        bitField0_ |= 0x00400000;
        onChanged();
        return getHtlcFlowFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCFlowOrBuilder getHtlcFlowOrBuilder() {
        if (htlcFlowBuilder_ != null) {
          return htlcFlowBuilder_.getMessageOrBuilder();
        } else {
          return htlcFlow_;
        }
      }
      /**
       * <code>optional .paymentchannels.HTLCFlow htlc_flow = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCFlow, org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder, org.bitcoin.paymentchannel.Protos.HTLCFlowOrBuilder> 
          getHtlcFlowFieldBuilder() {
        if (htlcFlowBuilder_ == null) {
          htlcFlowBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCFlow, org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder, org.bitcoin.paymentchannel.Protos.HTLCFlowOrBuilder>(
                  htlcFlow_,
                  getParentForChildren(),
                  isClean());
          htlcFlow_ = null;
        }
        return htlcFlowBuilder_;
      }

      // optional .paymentchannels.Error error = 10;
      private org.bitcoin.paymentchannel.Protos.Error error_ = org.bitcoin.paymentchannel.Protos.Error.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.Error, org.bitcoin.paymentchannel.Protos.Error.Builder, org.bitcoin.paymentchannel.Protos.ErrorOrBuilder> errorBuilder_;
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public org.bitcoin.paymentchannel.Protos.Error getError() {
        if (errorBuilder_ == null) {
          return error_;
        } else {
          return errorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public Builder setError(org.bitcoin.paymentchannel.Protos.Error value) {
        if (errorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          error_ = value;
          onChanged();
        } else {
          errorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public Builder setError(
          org.bitcoin.paymentchannel.Protos.Error.Builder builderForValue) {
        if (errorBuilder_ == null) {
          error_ = builderForValue.build();
          onChanged();
        } else {
          errorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public Builder mergeError(org.bitcoin.paymentchannel.Protos.Error value) {
        if (errorBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000) &&
              error_ != org.bitcoin.paymentchannel.Protos.Error.getDefaultInstance()) {
            error_ =
              org.bitcoin.paymentchannel.Protos.Error.newBuilder(error_).mergeFrom(value).buildPartial();
          } else {
            error_ = value;
          }
          onChanged();
        } else {
          errorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00800000;
        return this;
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public Builder clearError() {
        if (errorBuilder_ == null) {
          error_ = org.bitcoin.paymentchannel.Protos.Error.getDefaultInstance();
          onChanged();
        } else {
          errorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00800000);
        return this;
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public org.bitcoin.paymentchannel.Protos.Error.Builder getErrorBuilder() {
        bitField0_ |= 0x00800000;
        onChanged();
        return getErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      public org.bitcoin.paymentchannel.Protos.ErrorOrBuilder getErrorOrBuilder() {
        if (errorBuilder_ != null) {
          return errorBuilder_.getMessageOrBuilder();
        } else {
          return error_;
        }
      }
      /**
       * <code>optional .paymentchannels.Error error = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.Error, org.bitcoin.paymentchannel.Protos.Error.Builder, org.bitcoin.paymentchannel.Protos.ErrorOrBuilder> 
          getErrorFieldBuilder() {
        if (errorBuilder_ == null) {
          errorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.Error, org.bitcoin.paymentchannel.Protos.Error.Builder, org.bitcoin.paymentchannel.Protos.ErrorOrBuilder>(
                  error_,
                  getParentForChildren(),
                  isClean());
          error_ = null;
        }
        return errorBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.TwoWayChannelMessage)
    }

    static {
      defaultInstance = new TwoWayChannelMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.TwoWayChannelMessage)
  }

  public interface ClientVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 major = 1;
    /**
     * <code>required int32 major = 1;</code>
     */
    boolean hasMajor();
    /**
     * <code>required int32 major = 1;</code>
     */
    int getMajor();

    // optional int32 minor = 2 [default = 0];
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    boolean hasMinor();
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    int getMinor();

    // optional bytes previous_channel_contract_hash = 3;
    /**
     * <code>optional bytes previous_channel_contract_hash = 3;</code>
     *
     * <pre>
     * The hash of the multisig contract of a previous channel. This indicates that the primary
     * wishes to reopen the given channel. If the server is willing to reopen it, it simply
     * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
     * follows SERVER_VERSION with an Initiate representing a new channel
     * </pre>
     */
    boolean hasPreviousChannelContractHash();
    /**
     * <code>optional bytes previous_channel_contract_hash = 3;</code>
     *
     * <pre>
     * The hash of the multisig contract of a previous channel. This indicates that the primary
     * wishes to reopen the given channel. If the server is willing to reopen it, it simply
     * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
     * follows SERVER_VERSION with an Initiate representing a new channel
     * </pre>
     */
    com.google.protobuf.ByteString getPreviousChannelContractHash();

    // optional uint64 time_window_secs = 4 [default = 86340];
    /**
     * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
     *
     * <pre>
     * How many seconds should the channel be open, only used when a new channel is created.
     * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
     * </pre>
     */
    boolean hasTimeWindowSecs();
    /**
     * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
     *
     * <pre>
     * How many seconds should the channel be open, only used when a new channel is created.
     * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
     * </pre>
     */
    long getTimeWindowSecs();
  }
  /**
   * Protobuf type {@code paymentchannels.ClientVersion}
   *
   * <pre>
   * Sent by primary to secondary on opening the connection. If anything is received before this is
   * sent, the socket is closed.
   * </pre>
   */
  public static final class ClientVersion extends
      com.google.protobuf.GeneratedMessage
      implements ClientVersionOrBuilder {
    // Use ClientVersion.newBuilder() to construct.
    private ClientVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClientVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClientVersion defaultInstance;
    public static ClientVersion getDefaultInstance() {
      return defaultInstance;
    }

    public ClientVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClientVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              major_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minor_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              previousChannelContractHash_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeWindowSecs_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ClientVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ClientVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.ClientVersion.class, org.bitcoin.paymentchannel.Protos.ClientVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<ClientVersion> PARSER =
        new com.google.protobuf.AbstractParser<ClientVersion>() {
      public ClientVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClientVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClientVersion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 major = 1;
    public static final int MAJOR_FIELD_NUMBER = 1;
    private int major_;
    /**
     * <code>required int32 major = 1;</code>
     */
    public boolean hasMajor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 major = 1;</code>
     */
    public int getMajor() {
      return major_;
    }

    // optional int32 minor = 2 [default = 0];
    public static final int MINOR_FIELD_NUMBER = 2;
    private int minor_;
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    public boolean hasMinor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    public int getMinor() {
      return minor_;
    }

    // optional bytes previous_channel_contract_hash = 3;
    public static final int PREVIOUS_CHANNEL_CONTRACT_HASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString previousChannelContractHash_;
    /**
     * <code>optional bytes previous_channel_contract_hash = 3;</code>
     *
     * <pre>
     * The hash of the multisig contract of a previous channel. This indicates that the primary
     * wishes to reopen the given channel. If the server is willing to reopen it, it simply
     * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
     * follows SERVER_VERSION with an Initiate representing a new channel
     * </pre>
     */
    public boolean hasPreviousChannelContractHash() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes previous_channel_contract_hash = 3;</code>
     *
     * <pre>
     * The hash of the multisig contract of a previous channel. This indicates that the primary
     * wishes to reopen the given channel. If the server is willing to reopen it, it simply
     * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
     * follows SERVER_VERSION with an Initiate representing a new channel
     * </pre>
     */
    public com.google.protobuf.ByteString getPreviousChannelContractHash() {
      return previousChannelContractHash_;
    }

    // optional uint64 time_window_secs = 4 [default = 86340];
    public static final int TIME_WINDOW_SECS_FIELD_NUMBER = 4;
    private long timeWindowSecs_;
    /**
     * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
     *
     * <pre>
     * How many seconds should the channel be open, only used when a new channel is created.
     * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
     * </pre>
     */
    public boolean hasTimeWindowSecs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
     *
     * <pre>
     * How many seconds should the channel be open, only used when a new channel is created.
     * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
     * </pre>
     */
    public long getTimeWindowSecs() {
      return timeWindowSecs_;
    }

    private void initFields() {
      major_ = 0;
      minor_ = 0;
      previousChannelContractHash_ = com.google.protobuf.ByteString.EMPTY;
      timeWindowSecs_ = 86340L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMajor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, major_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, minor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, previousChannelContractHash_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, timeWindowSecs_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, major_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minor_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, previousChannelContractHash_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, timeWindowSecs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ClientVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.ClientVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.ClientVersion}
     *
     * <pre>
     * Sent by primary to secondary on opening the connection. If anything is received before this is
     * sent, the socket is closed.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.ClientVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ClientVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ClientVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.ClientVersion.class, org.bitcoin.paymentchannel.Protos.ClientVersion.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.ClientVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        major_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        previousChannelContractHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeWindowSecs_ = 86340L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ClientVersion_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.ClientVersion getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.ClientVersion.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.ClientVersion build() {
        org.bitcoin.paymentchannel.Protos.ClientVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.ClientVersion buildPartial() {
        org.bitcoin.paymentchannel.Protos.ClientVersion result = new org.bitcoin.paymentchannel.Protos.ClientVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.major_ = major_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minor_ = minor_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.previousChannelContractHash_ = previousChannelContractHash_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeWindowSecs_ = timeWindowSecs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.ClientVersion) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.ClientVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.ClientVersion other) {
        if (other == org.bitcoin.paymentchannel.Protos.ClientVersion.getDefaultInstance()) return this;
        if (other.hasMajor()) {
          setMajor(other.getMajor());
        }
        if (other.hasMinor()) {
          setMinor(other.getMinor());
        }
        if (other.hasPreviousChannelContractHash()) {
          setPreviousChannelContractHash(other.getPreviousChannelContractHash());
        }
        if (other.hasTimeWindowSecs()) {
          setTimeWindowSecs(other.getTimeWindowSecs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMajor()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.ClientVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.ClientVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 major = 1;
      private int major_ ;
      /**
       * <code>required int32 major = 1;</code>
       */
      public boolean hasMajor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 major = 1;</code>
       */
      public int getMajor() {
        return major_;
      }
      /**
       * <code>required int32 major = 1;</code>
       */
      public Builder setMajor(int value) {
        bitField0_ |= 0x00000001;
        major_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 major = 1;</code>
       */
      public Builder clearMajor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        major_ = 0;
        onChanged();
        return this;
      }

      // optional int32 minor = 2 [default = 0];
      private int minor_ ;
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public boolean hasMinor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public int getMinor() {
        return minor_;
      }
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public Builder setMinor(int value) {
        bitField0_ |= 0x00000002;
        minor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public Builder clearMinor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minor_ = 0;
        onChanged();
        return this;
      }

      // optional bytes previous_channel_contract_hash = 3;
      private com.google.protobuf.ByteString previousChannelContractHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes previous_channel_contract_hash = 3;</code>
       *
       * <pre>
       * The hash of the multisig contract of a previous channel. This indicates that the primary
       * wishes to reopen the given channel. If the server is willing to reopen it, it simply
       * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
       * follows SERVER_VERSION with an Initiate representing a new channel
       * </pre>
       */
      public boolean hasPreviousChannelContractHash() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes previous_channel_contract_hash = 3;</code>
       *
       * <pre>
       * The hash of the multisig contract of a previous channel. This indicates that the primary
       * wishes to reopen the given channel. If the server is willing to reopen it, it simply
       * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
       * follows SERVER_VERSION with an Initiate representing a new channel
       * </pre>
       */
      public com.google.protobuf.ByteString getPreviousChannelContractHash() {
        return previousChannelContractHash_;
      }
      /**
       * <code>optional bytes previous_channel_contract_hash = 3;</code>
       *
       * <pre>
       * The hash of the multisig contract of a previous channel. This indicates that the primary
       * wishes to reopen the given channel. If the server is willing to reopen it, it simply
       * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
       * follows SERVER_VERSION with an Initiate representing a new channel
       * </pre>
       */
      public Builder setPreviousChannelContractHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        previousChannelContractHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes previous_channel_contract_hash = 3;</code>
       *
       * <pre>
       * The hash of the multisig contract of a previous channel. This indicates that the primary
       * wishes to reopen the given channel. If the server is willing to reopen it, it simply
       * responds with a SERVER_VERSION and then immediately sends a CHANNEL_OPEN, it otherwise
       * follows SERVER_VERSION with an Initiate representing a new channel
       * </pre>
       */
      public Builder clearPreviousChannelContractHash() {
        bitField0_ = (bitField0_ & ~0x00000004);
        previousChannelContractHash_ = getDefaultInstance().getPreviousChannelContractHash();
        onChanged();
        return this;
      }

      // optional uint64 time_window_secs = 4 [default = 86340];
      private long timeWindowSecs_ = 86340L;
      /**
       * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
       *
       * <pre>
       * How many seconds should the channel be open, only used when a new channel is created.
       * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
       * </pre>
       */
      public boolean hasTimeWindowSecs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
       *
       * <pre>
       * How many seconds should the channel be open, only used when a new channel is created.
       * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
       * </pre>
       */
      public long getTimeWindowSecs() {
        return timeWindowSecs_;
      }
      /**
       * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
       *
       * <pre>
       * How many seconds should the channel be open, only used when a new channel is created.
       * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
       * </pre>
       */
      public Builder setTimeWindowSecs(long value) {
        bitField0_ |= 0x00000008;
        timeWindowSecs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 time_window_secs = 4 [default = 86340];</code>
       *
       * <pre>
       * How many seconds should the channel be open, only used when a new channel is created.
       * Defaults to 24 h minus 60 seconds, 24*60*60 - 60
       * </pre>
       */
      public Builder clearTimeWindowSecs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeWindowSecs_ = 86340L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.ClientVersion)
    }

    static {
      defaultInstance = new ClientVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.ClientVersion)
  }

  public interface ServerVersionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 major = 1;
    /**
     * <code>required int32 major = 1;</code>
     */
    boolean hasMajor();
    /**
     * <code>required int32 major = 1;</code>
     */
    int getMajor();

    // optional int32 minor = 2 [default = 0];
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    boolean hasMinor();
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    int getMinor();
  }
  /**
   * Protobuf type {@code paymentchannels.ServerVersion}
   *
   * <pre>
   * Send by secondary to primary upon receiving the ClientVersion message. If it is willing to
   * speak the given major version, it sends back the same major version and the minor version it
   * speaks. If it is not, it may send back a lower major version representing the highest version
   * it is willing to speak, or sends a NO_ACCEPTABLE_VERSION Error. If the secondary sends back a
   * lower major version, the secondary should either expect to continue with that version, or
   * should immediately close the connection with a NO_ACCEPTABLE_VERSION Error. Backwards
   * incompatible changes to the protocol bump the major version. Extensions bump the minor version
   * </pre>
   */
  public static final class ServerVersion extends
      com.google.protobuf.GeneratedMessage
      implements ServerVersionOrBuilder {
    // Use ServerVersion.newBuilder() to construct.
    private ServerVersion(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ServerVersion(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ServerVersion defaultInstance;
    public static ServerVersion getDefaultInstance() {
      return defaultInstance;
    }

    public ServerVersion getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ServerVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              major_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minor_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ServerVersion_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ServerVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.ServerVersion.class, org.bitcoin.paymentchannel.Protos.ServerVersion.Builder.class);
    }

    public static com.google.protobuf.Parser<ServerVersion> PARSER =
        new com.google.protobuf.AbstractParser<ServerVersion>() {
      public ServerVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServerVersion(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServerVersion> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 major = 1;
    public static final int MAJOR_FIELD_NUMBER = 1;
    private int major_;
    /**
     * <code>required int32 major = 1;</code>
     */
    public boolean hasMajor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 major = 1;</code>
     */
    public int getMajor() {
      return major_;
    }

    // optional int32 minor = 2 [default = 0];
    public static final int MINOR_FIELD_NUMBER = 2;
    private int minor_;
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    public boolean hasMinor() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 minor = 2 [default = 0];</code>
     */
    public int getMinor() {
      return minor_;
    }

    private void initFields() {
      major_ = 0;
      minor_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMajor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, major_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, minor_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, major_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, minor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ServerVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.ServerVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.ServerVersion}
     *
     * <pre>
     * Send by secondary to primary upon receiving the ClientVersion message. If it is willing to
     * speak the given major version, it sends back the same major version and the minor version it
     * speaks. If it is not, it may send back a lower major version representing the highest version
     * it is willing to speak, or sends a NO_ACCEPTABLE_VERSION Error. If the secondary sends back a
     * lower major version, the secondary should either expect to continue with that version, or
     * should immediately close the connection with a NO_ACCEPTABLE_VERSION Error. Backwards
     * incompatible changes to the protocol bump the major version. Extensions bump the minor version
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.ServerVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ServerVersion_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ServerVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.ServerVersion.class, org.bitcoin.paymentchannel.Protos.ServerVersion.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.ServerVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        major_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        minor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ServerVersion_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.ServerVersion getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.ServerVersion.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.ServerVersion build() {
        org.bitcoin.paymentchannel.Protos.ServerVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.ServerVersion buildPartial() {
        org.bitcoin.paymentchannel.Protos.ServerVersion result = new org.bitcoin.paymentchannel.Protos.ServerVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.major_ = major_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minor_ = minor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.ServerVersion) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.ServerVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.ServerVersion other) {
        if (other == org.bitcoin.paymentchannel.Protos.ServerVersion.getDefaultInstance()) return this;
        if (other.hasMajor()) {
          setMajor(other.getMajor());
        }
        if (other.hasMinor()) {
          setMinor(other.getMinor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMajor()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.ServerVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.ServerVersion) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 major = 1;
      private int major_ ;
      /**
       * <code>required int32 major = 1;</code>
       */
      public boolean hasMajor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 major = 1;</code>
       */
      public int getMajor() {
        return major_;
      }
      /**
       * <code>required int32 major = 1;</code>
       */
      public Builder setMajor(int value) {
        bitField0_ |= 0x00000001;
        major_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 major = 1;</code>
       */
      public Builder clearMajor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        major_ = 0;
        onChanged();
        return this;
      }

      // optional int32 minor = 2 [default = 0];
      private int minor_ ;
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public boolean hasMinor() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public int getMinor() {
        return minor_;
      }
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public Builder setMinor(int value) {
        bitField0_ |= 0x00000002;
        minor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 minor = 2 [default = 0];</code>
       */
      public Builder clearMinor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minor_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.ServerVersion)
    }

    static {
      defaultInstance = new ServerVersion(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.ServerVersion)
  }

  public interface InitiateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes multisig_key = 1;
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted. It is used only in the creation of the multisig contract, as outputs are
     * created entirely by the secondary
     * </pre>
     */
    boolean hasMultisigKey();
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted. It is used only in the creation of the multisig contract, as outputs are
     * created entirely by the secondary
     * </pre>
     */
    com.google.protobuf.ByteString getMultisigKey();

    // required uint64 min_accepted_channel_size = 2;
    /**
     * <code>required uint64 min_accepted_channel_size = 2;</code>
     *
     * <pre>
     * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
     * size it's willing to accept here. This can be lower to trade off resources against
     * security but shouldn't be so low the transactions get rejected by the network as spam.
     * Zero isn't a sensible value to have here, so we make the field required.
     * </pre>
     */
    boolean hasMinAcceptedChannelSize();
    /**
     * <code>required uint64 min_accepted_channel_size = 2;</code>
     *
     * <pre>
     * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
     * size it's willing to accept here. This can be lower to trade off resources against
     * security but shouldn't be so low the transactions get rejected by the network as spam.
     * Zero isn't a sensible value to have here, so we make the field required.
     * </pre>
     */
    long getMinAcceptedChannelSize();

    // required uint64 expire_time_secs = 3;
    /**
     * <code>required uint64 expire_time_secs = 3;</code>
     *
     * <pre>
     * Rough UNIX time for when the channel expires. This is determined by the block header
     * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
     * Channels could also be specified in terms of block heights but then how do you know the
     * current chain height if you don't have internet access? Trust the server? Probably opens up
     * attack vectors. We can assume the client has an independent clock, however. If the client
     * considers this value too far off (eg more than a day), it may send an ERROR and close the
     * channel.
     * </pre>
     */
    boolean hasExpireTimeSecs();
    /**
     * <code>required uint64 expire_time_secs = 3;</code>
     *
     * <pre>
     * Rough UNIX time for when the channel expires. This is determined by the block header
     * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
     * Channels could also be specified in terms of block heights but then how do you know the
     * current chain height if you don't have internet access? Trust the server? Probably opens up
     * attack vectors. We can assume the client has an independent clock, however. If the client
     * considers this value too far off (eg more than a day), it may send an ERROR and close the
     * channel.
     * </pre>
     */
    long getExpireTimeSecs();

    // required uint64 min_payment = 4;
    /**
     * <code>required uint64 min_payment = 4;</code>
     *
     * <pre>
     * The amount of money the server requires for the initial payment. The act of opening a channel
     * always transfers some quantity of money to the server: it's impossible to have a channel with
     * zero value transferred. This rule ensures that you can't get a channel that can't be settled
     * due to having paid under the dust limit. Because the dust limit will float in future, the
     * server tells the client what it thinks it is, and the client is supposed to sanity check this
     * value.
     * </pre>
     */
    boolean hasMinPayment();
    /**
     * <code>required uint64 min_payment = 4;</code>
     *
     * <pre>
     * The amount of money the server requires for the initial payment. The act of opening a channel
     * always transfers some quantity of money to the server: it's impossible to have a channel with
     * zero value transferred. This rule ensures that you can't get a channel that can't be settled
     * due to having paid under the dust limit. Because the dust limit will float in future, the
     * server tells the client what it thinks it is, and the client is supposed to sanity check this
     * value.
     * </pre>
     */
    long getMinPayment();
  }
  /**
   * Protobuf type {@code paymentchannels.Initiate}
   *
   * <pre>
   * Sent from server to client once version nego is done.
   * </pre>
   */
  public static final class Initiate extends
      com.google.protobuf.GeneratedMessage
      implements InitiateOrBuilder {
    // Use Initiate.newBuilder() to construct.
    private Initiate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Initiate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Initiate defaultInstance;
    public static Initiate getDefaultInstance() {
      return defaultInstance;
    }

    public Initiate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Initiate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              multisigKey_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              minAcceptedChannelSize_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              expireTimeSecs_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              minPayment_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Initiate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Initiate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.Initiate.class, org.bitcoin.paymentchannel.Protos.Initiate.Builder.class);
    }

    public static com.google.protobuf.Parser<Initiate> PARSER =
        new com.google.protobuf.AbstractParser<Initiate>() {
      public Initiate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Initiate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Initiate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes multisig_key = 1;
    public static final int MULTISIG_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString multisigKey_;
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted. It is used only in the creation of the multisig contract, as outputs are
     * created entirely by the secondary
     * </pre>
     */
    public boolean hasMultisigKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted. It is used only in the creation of the multisig contract, as outputs are
     * created entirely by the secondary
     * </pre>
     */
    public com.google.protobuf.ByteString getMultisigKey() {
      return multisigKey_;
    }

    // required uint64 min_accepted_channel_size = 2;
    public static final int MIN_ACCEPTED_CHANNEL_SIZE_FIELD_NUMBER = 2;
    private long minAcceptedChannelSize_;
    /**
     * <code>required uint64 min_accepted_channel_size = 2;</code>
     *
     * <pre>
     * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
     * size it's willing to accept here. This can be lower to trade off resources against
     * security but shouldn't be so low the transactions get rejected by the network as spam.
     * Zero isn't a sensible value to have here, so we make the field required.
     * </pre>
     */
    public boolean hasMinAcceptedChannelSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 min_accepted_channel_size = 2;</code>
     *
     * <pre>
     * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
     * size it's willing to accept here. This can be lower to trade off resources against
     * security but shouldn't be so low the transactions get rejected by the network as spam.
     * Zero isn't a sensible value to have here, so we make the field required.
     * </pre>
     */
    public long getMinAcceptedChannelSize() {
      return minAcceptedChannelSize_;
    }

    // required uint64 expire_time_secs = 3;
    public static final int EXPIRE_TIME_SECS_FIELD_NUMBER = 3;
    private long expireTimeSecs_;
    /**
     * <code>required uint64 expire_time_secs = 3;</code>
     *
     * <pre>
     * Rough UNIX time for when the channel expires. This is determined by the block header
     * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
     * Channels could also be specified in terms of block heights but then how do you know the
     * current chain height if you don't have internet access? Trust the server? Probably opens up
     * attack vectors. We can assume the client has an independent clock, however. If the client
     * considers this value too far off (eg more than a day), it may send an ERROR and close the
     * channel.
     * </pre>
     */
    public boolean hasExpireTimeSecs() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint64 expire_time_secs = 3;</code>
     *
     * <pre>
     * Rough UNIX time for when the channel expires. This is determined by the block header
     * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
     * Channels could also be specified in terms of block heights but then how do you know the
     * current chain height if you don't have internet access? Trust the server? Probably opens up
     * attack vectors. We can assume the client has an independent clock, however. If the client
     * considers this value too far off (eg more than a day), it may send an ERROR and close the
     * channel.
     * </pre>
     */
    public long getExpireTimeSecs() {
      return expireTimeSecs_;
    }

    // required uint64 min_payment = 4;
    public static final int MIN_PAYMENT_FIELD_NUMBER = 4;
    private long minPayment_;
    /**
     * <code>required uint64 min_payment = 4;</code>
     *
     * <pre>
     * The amount of money the server requires for the initial payment. The act of opening a channel
     * always transfers some quantity of money to the server: it's impossible to have a channel with
     * zero value transferred. This rule ensures that you can't get a channel that can't be settled
     * due to having paid under the dust limit. Because the dust limit will float in future, the
     * server tells the client what it thinks it is, and the client is supposed to sanity check this
     * value.
     * </pre>
     */
    public boolean hasMinPayment() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint64 min_payment = 4;</code>
     *
     * <pre>
     * The amount of money the server requires for the initial payment. The act of opening a channel
     * always transfers some quantity of money to the server: it's impossible to have a channel with
     * zero value transferred. This rule ensures that you can't get a channel that can't be settled
     * due to having paid under the dust limit. Because the dust limit will float in future, the
     * server tells the client what it thinks it is, and the client is supposed to sanity check this
     * value.
     * </pre>
     */
    public long getMinPayment() {
      return minPayment_;
    }

    private void initFields() {
      multisigKey_ = com.google.protobuf.ByteString.EMPTY;
      minAcceptedChannelSize_ = 0L;
      expireTimeSecs_ = 0L;
      minPayment_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMultisigKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinAcceptedChannelSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasExpireTimeSecs()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinPayment()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, multisigKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, minAcceptedChannelSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, expireTimeSecs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, minPayment_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, multisigKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, minAcceptedChannelSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, expireTimeSecs_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, minPayment_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Initiate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.Initiate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.Initiate}
     *
     * <pre>
     * Sent from server to client once version nego is done.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.InitiateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Initiate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Initiate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.Initiate.class, org.bitcoin.paymentchannel.Protos.Initiate.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.Initiate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        multisigKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        minAcceptedChannelSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        expireTimeSecs_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        minPayment_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Initiate_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.Initiate getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.Initiate.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.Initiate build() {
        org.bitcoin.paymentchannel.Protos.Initiate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.Initiate buildPartial() {
        org.bitcoin.paymentchannel.Protos.Initiate result = new org.bitcoin.paymentchannel.Protos.Initiate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.multisigKey_ = multisigKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minAcceptedChannelSize_ = minAcceptedChannelSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.expireTimeSecs_ = expireTimeSecs_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minPayment_ = minPayment_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.Initiate) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.Initiate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.Initiate other) {
        if (other == org.bitcoin.paymentchannel.Protos.Initiate.getDefaultInstance()) return this;
        if (other.hasMultisigKey()) {
          setMultisigKey(other.getMultisigKey());
        }
        if (other.hasMinAcceptedChannelSize()) {
          setMinAcceptedChannelSize(other.getMinAcceptedChannelSize());
        }
        if (other.hasExpireTimeSecs()) {
          setExpireTimeSecs(other.getExpireTimeSecs());
        }
        if (other.hasMinPayment()) {
          setMinPayment(other.getMinPayment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMultisigKey()) {
          
          return false;
        }
        if (!hasMinAcceptedChannelSize()) {
          
          return false;
        }
        if (!hasExpireTimeSecs()) {
          
          return false;
        }
        if (!hasMinPayment()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.Initiate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.Initiate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes multisig_key = 1;
      private com.google.protobuf.ByteString multisigKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted. It is used only in the creation of the multisig contract, as outputs are
       * created entirely by the secondary
       * </pre>
       */
      public boolean hasMultisigKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted. It is used only in the creation of the multisig contract, as outputs are
       * created entirely by the secondary
       * </pre>
       */
      public com.google.protobuf.ByteString getMultisigKey() {
        return multisigKey_;
      }
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted. It is used only in the creation of the multisig contract, as outputs are
       * created entirely by the secondary
       * </pre>
       */
      public Builder setMultisigKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        multisigKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted. It is used only in the creation of the multisig contract, as outputs are
       * created entirely by the secondary
       * </pre>
       */
      public Builder clearMultisigKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        multisigKey_ = getDefaultInstance().getMultisigKey();
        onChanged();
        return this;
      }

      // required uint64 min_accepted_channel_size = 2;
      private long minAcceptedChannelSize_ ;
      /**
       * <code>required uint64 min_accepted_channel_size = 2;</code>
       *
       * <pre>
       * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
       * size it's willing to accept here. This can be lower to trade off resources against
       * security but shouldn't be so low the transactions get rejected by the network as spam.
       * Zero isn't a sensible value to have here, so we make the field required.
       * </pre>
       */
      public boolean hasMinAcceptedChannelSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 min_accepted_channel_size = 2;</code>
       *
       * <pre>
       * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
       * size it's willing to accept here. This can be lower to trade off resources against
       * security but shouldn't be so low the transactions get rejected by the network as spam.
       * Zero isn't a sensible value to have here, so we make the field required.
       * </pre>
       */
      public long getMinAcceptedChannelSize() {
        return minAcceptedChannelSize_;
      }
      /**
       * <code>required uint64 min_accepted_channel_size = 2;</code>
       *
       * <pre>
       * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
       * size it's willing to accept here. This can be lower to trade off resources against
       * security but shouldn't be so low the transactions get rejected by the network as spam.
       * Zero isn't a sensible value to have here, so we make the field required.
       * </pre>
       */
      public Builder setMinAcceptedChannelSize(long value) {
        bitField0_ |= 0x00000002;
        minAcceptedChannelSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 min_accepted_channel_size = 2;</code>
       *
       * <pre>
       * Once a channel is exhausted a new one must be set up. So secondary indicates the minimum
       * size it's willing to accept here. This can be lower to trade off resources against
       * security but shouldn't be so low the transactions get rejected by the network as spam.
       * Zero isn't a sensible value to have here, so we make the field required.
       * </pre>
       */
      public Builder clearMinAcceptedChannelSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minAcceptedChannelSize_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 expire_time_secs = 3;
      private long expireTimeSecs_ ;
      /**
       * <code>required uint64 expire_time_secs = 3;</code>
       *
       * <pre>
       * Rough UNIX time for when the channel expires. This is determined by the block header
       * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
       * Channels could also be specified in terms of block heights but then how do you know the
       * current chain height if you don't have internet access? Trust the server? Probably opens up
       * attack vectors. We can assume the client has an independent clock, however. If the client
       * considers this value too far off (eg more than a day), it may send an ERROR and close the
       * channel.
       * </pre>
       */
      public boolean hasExpireTimeSecs() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint64 expire_time_secs = 3;</code>
       *
       * <pre>
       * Rough UNIX time for when the channel expires. This is determined by the block header
       * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
       * Channels could also be specified in terms of block heights but then how do you know the
       * current chain height if you don't have internet access? Trust the server? Probably opens up
       * attack vectors. We can assume the client has an independent clock, however. If the client
       * considers this value too far off (eg more than a day), it may send an ERROR and close the
       * channel.
       * </pre>
       */
      public long getExpireTimeSecs() {
        return expireTimeSecs_;
      }
      /**
       * <code>required uint64 expire_time_secs = 3;</code>
       *
       * <pre>
       * Rough UNIX time for when the channel expires. This is determined by the block header
       * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
       * Channels could also be specified in terms of block heights but then how do you know the
       * current chain height if you don't have internet access? Trust the server? Probably opens up
       * attack vectors. We can assume the client has an independent clock, however. If the client
       * considers this value too far off (eg more than a day), it may send an ERROR and close the
       * channel.
       * </pre>
       */
      public Builder setExpireTimeSecs(long value) {
        bitField0_ |= 0x00000004;
        expireTimeSecs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 expire_time_secs = 3;</code>
       *
       * <pre>
       * Rough UNIX time for when the channel expires. This is determined by the block header
       * timestamps which can be very inaccurate when miners use the obsolete RollNTime hack.
       * Channels could also be specified in terms of block heights but then how do you know the
       * current chain height if you don't have internet access? Trust the server? Probably opens up
       * attack vectors. We can assume the client has an independent clock, however. If the client
       * considers this value too far off (eg more than a day), it may send an ERROR and close the
       * channel.
       * </pre>
       */
      public Builder clearExpireTimeSecs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        expireTimeSecs_ = 0L;
        onChanged();
        return this;
      }

      // required uint64 min_payment = 4;
      private long minPayment_ ;
      /**
       * <code>required uint64 min_payment = 4;</code>
       *
       * <pre>
       * The amount of money the server requires for the initial payment. The act of opening a channel
       * always transfers some quantity of money to the server: it's impossible to have a channel with
       * zero value transferred. This rule ensures that you can't get a channel that can't be settled
       * due to having paid under the dust limit. Because the dust limit will float in future, the
       * server tells the client what it thinks it is, and the client is supposed to sanity check this
       * value.
       * </pre>
       */
      public boolean hasMinPayment() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 min_payment = 4;</code>
       *
       * <pre>
       * The amount of money the server requires for the initial payment. The act of opening a channel
       * always transfers some quantity of money to the server: it's impossible to have a channel with
       * zero value transferred. This rule ensures that you can't get a channel that can't be settled
       * due to having paid under the dust limit. Because the dust limit will float in future, the
       * server tells the client what it thinks it is, and the client is supposed to sanity check this
       * value.
       * </pre>
       */
      public long getMinPayment() {
        return minPayment_;
      }
      /**
       * <code>required uint64 min_payment = 4;</code>
       *
       * <pre>
       * The amount of money the server requires for the initial payment. The act of opening a channel
       * always transfers some quantity of money to the server: it's impossible to have a channel with
       * zero value transferred. This rule ensures that you can't get a channel that can't be settled
       * due to having paid under the dust limit. Because the dust limit will float in future, the
       * server tells the client what it thinks it is, and the client is supposed to sanity check this
       * value.
       * </pre>
       */
      public Builder setMinPayment(long value) {
        bitField0_ |= 0x00000008;
        minPayment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 min_payment = 4;</code>
       *
       * <pre>
       * The amount of money the server requires for the initial payment. The act of opening a channel
       * always transfers some quantity of money to the server: it's impossible to have a channel with
       * zero value transferred. This rule ensures that you can't get a channel that can't be settled
       * due to having paid under the dust limit. Because the dust limit will float in future, the
       * server tells the client what it thinks it is, and the client is supposed to sanity check this
       * value.
       * </pre>
       */
      public Builder clearMinPayment() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minPayment_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.Initiate)
    }

    static {
      defaultInstance = new Initiate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.Initiate)
  }

  public interface ProvideRefundOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes multisig_key = 1;
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted.  It is only used in the creation of the multisig contract.
     * </pre>
     */
    boolean hasMultisigKey();
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted.  It is only used in the creation of the multisig contract.
     * </pre>
     */
    com.google.protobuf.ByteString getMultisigKey();

    // required bytes tx = 2;
    /**
     * <code>required bytes tx = 2;</code>
     *
     * <pre>
     * The serialized bytes of the return transaction in Satoshi format.
     * * It must have exactly one input which spends the multisig output (see ProvideContract for
     *   details of exactly what that output must look like). This output must have a sequence
     *   number of 0.
     * * It must have the lock time set to a time after the min_time_window_secs (from the
     *   Initiate message).
     * * It must have exactly one output which goes back to the primary.  This output's
     *   scriptPubKey will be reused to create payment transactions.
     * </pre>
     */
    boolean hasTx();
    /**
     * <code>required bytes tx = 2;</code>
     *
     * <pre>
     * The serialized bytes of the return transaction in Satoshi format.
     * * It must have exactly one input which spends the multisig output (see ProvideContract for
     *   details of exactly what that output must look like). This output must have a sequence
     *   number of 0.
     * * It must have the lock time set to a time after the min_time_window_secs (from the
     *   Initiate message).
     * * It must have exactly one output which goes back to the primary.  This output's
     *   scriptPubKey will be reused to create payment transactions.
     * </pre>
     */
    com.google.protobuf.ByteString getTx();
  }
  /**
   * Protobuf type {@code paymentchannels.ProvideRefund}
   *
   * <pre>
   * Sent from primary to secondary after Initiate to begin the refund transaction signing.
   * </pre>
   */
  public static final class ProvideRefund extends
      com.google.protobuf.GeneratedMessage
      implements ProvideRefundOrBuilder {
    // Use ProvideRefund.newBuilder() to construct.
    private ProvideRefund(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProvideRefund(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProvideRefund defaultInstance;
    public static ProvideRefund getDefaultInstance() {
      return defaultInstance;
    }

    public ProvideRefund getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProvideRefund(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              multisigKey_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              tx_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideRefund_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideRefund_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.ProvideRefund.class, org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder.class);
    }

    public static com.google.protobuf.Parser<ProvideRefund> PARSER =
        new com.google.protobuf.AbstractParser<ProvideRefund>() {
      public ProvideRefund parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProvideRefund(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProvideRefund> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes multisig_key = 1;
    public static final int MULTISIG_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString multisigKey_;
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted.  It is only used in the creation of the multisig contract.
     * </pre>
     */
    public boolean hasMultisigKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes multisig_key = 1;</code>
     *
     * <pre>
     * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
     * are accepted.  It is only used in the creation of the multisig contract.
     * </pre>
     */
    public com.google.protobuf.ByteString getMultisigKey() {
      return multisigKey_;
    }

    // required bytes tx = 2;
    public static final int TX_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>required bytes tx = 2;</code>
     *
     * <pre>
     * The serialized bytes of the return transaction in Satoshi format.
     * * It must have exactly one input which spends the multisig output (see ProvideContract for
     *   details of exactly what that output must look like). This output must have a sequence
     *   number of 0.
     * * It must have the lock time set to a time after the min_time_window_secs (from the
     *   Initiate message).
     * * It must have exactly one output which goes back to the primary.  This output's
     *   scriptPubKey will be reused to create payment transactions.
     * </pre>
     */
    public boolean hasTx() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes tx = 2;</code>
     *
     * <pre>
     * The serialized bytes of the return transaction in Satoshi format.
     * * It must have exactly one input which spends the multisig output (see ProvideContract for
     *   details of exactly what that output must look like). This output must have a sequence
     *   number of 0.
     * * It must have the lock time set to a time after the min_time_window_secs (from the
     *   Initiate message).
     * * It must have exactly one output which goes back to the primary.  This output's
     *   scriptPubKey will be reused to create payment transactions.
     * </pre>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    private void initFields() {
      multisigKey_ = com.google.protobuf.ByteString.EMPTY;
      tx_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMultisigKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, multisigKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, tx_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, multisigKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, tx_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideRefund parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.ProvideRefund prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.ProvideRefund}
     *
     * <pre>
     * Sent from primary to secondary after Initiate to begin the refund transaction signing.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.ProvideRefundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideRefund_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideRefund_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.ProvideRefund.class, org.bitcoin.paymentchannel.Protos.ProvideRefund.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.ProvideRefund.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        multisigKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        tx_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideRefund_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.ProvideRefund getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.ProvideRefund.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.ProvideRefund build() {
        org.bitcoin.paymentchannel.Protos.ProvideRefund result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.ProvideRefund buildPartial() {
        org.bitcoin.paymentchannel.Protos.ProvideRefund result = new org.bitcoin.paymentchannel.Protos.ProvideRefund(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.multisigKey_ = multisigKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tx_ = tx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.ProvideRefund) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.ProvideRefund)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.ProvideRefund other) {
        if (other == org.bitcoin.paymentchannel.Protos.ProvideRefund.getDefaultInstance()) return this;
        if (other.hasMultisigKey()) {
          setMultisigKey(other.getMultisigKey());
        }
        if (other.hasTx()) {
          setTx(other.getTx());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMultisigKey()) {
          
          return false;
        }
        if (!hasTx()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.ProvideRefund parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.ProvideRefund) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes multisig_key = 1;
      private com.google.protobuf.ByteString multisigKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted.  It is only used in the creation of the multisig contract.
       * </pre>
       */
      public boolean hasMultisigKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted.  It is only used in the creation of the multisig contract.
       * </pre>
       */
      public com.google.protobuf.ByteString getMultisigKey() {
        return multisigKey_;
      }
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted.  It is only used in the creation of the multisig contract.
       * </pre>
       */
      public Builder setMultisigKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        multisigKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes multisig_key = 1;</code>
       *
       * <pre>
       * This must be a raw pubkey in regular ECDSA form. Both compressed and non-compressed forms
       * are accepted.  It is only used in the creation of the multisig contract.
       * </pre>
       */
      public Builder clearMultisigKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        multisigKey_ = getDefaultInstance().getMultisigKey();
        onChanged();
        return this;
      }

      // required bytes tx = 2;
      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes tx = 2;</code>
       *
       * <pre>
       * The serialized bytes of the return transaction in Satoshi format.
       * * It must have exactly one input which spends the multisig output (see ProvideContract for
       *   details of exactly what that output must look like). This output must have a sequence
       *   number of 0.
       * * It must have the lock time set to a time after the min_time_window_secs (from the
       *   Initiate message).
       * * It must have exactly one output which goes back to the primary.  This output's
       *   scriptPubKey will be reused to create payment transactions.
       * </pre>
       */
      public boolean hasTx() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes tx = 2;</code>
       *
       * <pre>
       * The serialized bytes of the return transaction in Satoshi format.
       * * It must have exactly one input which spends the multisig output (see ProvideContract for
       *   details of exactly what that output must look like). This output must have a sequence
       *   number of 0.
       * * It must have the lock time set to a time after the min_time_window_secs (from the
       *   Initiate message).
       * * It must have exactly one output which goes back to the primary.  This output's
       *   scriptPubKey will be reused to create payment transactions.
       * </pre>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>required bytes tx = 2;</code>
       *
       * <pre>
       * The serialized bytes of the return transaction in Satoshi format.
       * * It must have exactly one input which spends the multisig output (see ProvideContract for
       *   details of exactly what that output must look like). This output must have a sequence
       *   number of 0.
       * * It must have the lock time set to a time after the min_time_window_secs (from the
       *   Initiate message).
       * * It must have exactly one output which goes back to the primary.  This output's
       *   scriptPubKey will be reused to create payment transactions.
       * </pre>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes tx = 2;</code>
       *
       * <pre>
       * The serialized bytes of the return transaction in Satoshi format.
       * * It must have exactly one input which spends the multisig output (see ProvideContract for
       *   details of exactly what that output must look like). This output must have a sequence
       *   number of 0.
       * * It must have the lock time set to a time after the min_time_window_secs (from the
       *   Initiate message).
       * * It must have exactly one output which goes back to the primary.  This output's
       *   scriptPubKey will be reused to create payment transactions.
       * </pre>
       */
      public Builder clearTx() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.ProvideRefund)
    }

    static {
      defaultInstance = new ProvideRefund(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.ProvideRefund)
  }

  public interface ReturnRefundOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes signature = 1;
    /**
     * <code>required bytes signature = 1;</code>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 1;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code paymentchannels.ReturnRefund}
   *
   * <pre>
   * Sent from secondary to primary after it has done initial verification of the refund
   * transaction. Contains the primary's signature which is required to spend the multisig contract
   * to the refund transaction. Must be signed using SIGHASH_NONE|SIGHASH_ANYONECANPAY (and include
   * the postfix type byte) to allow the client to add any outputs/inputs it wants as long as the
   * input's sequence and transaction's nLockTime remain set.
   * </pre>
   */
  public static final class ReturnRefund extends
      com.google.protobuf.GeneratedMessage
      implements ReturnRefundOrBuilder {
    // Use ReturnRefund.newBuilder() to construct.
    private ReturnRefund(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ReturnRefund(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ReturnRefund defaultInstance;
    public static ReturnRefund getDefaultInstance() {
      return defaultInstance;
    }

    public ReturnRefund getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ReturnRefund(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ReturnRefund_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ReturnRefund_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.ReturnRefund.class, org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder.class);
    }

    public static com.google.protobuf.Parser<ReturnRefund> PARSER =
        new com.google.protobuf.AbstractParser<ReturnRefund>() {
      public ReturnRefund parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReturnRefund(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ReturnRefund> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes signature = 1;
    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 1;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes signature = 1;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ReturnRefund parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.ReturnRefund prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.ReturnRefund}
     *
     * <pre>
     * Sent from secondary to primary after it has done initial verification of the refund
     * transaction. Contains the primary's signature which is required to spend the multisig contract
     * to the refund transaction. Must be signed using SIGHASH_NONE|SIGHASH_ANYONECANPAY (and include
     * the postfix type byte) to allow the client to add any outputs/inputs it wants as long as the
     * input's sequence and transaction's nLockTime remain set.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.ReturnRefundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ReturnRefund_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ReturnRefund_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.ReturnRefund.class, org.bitcoin.paymentchannel.Protos.ReturnRefund.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.ReturnRefund.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ReturnRefund_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.ReturnRefund getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.ReturnRefund.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.ReturnRefund build() {
        org.bitcoin.paymentchannel.Protos.ReturnRefund result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.ReturnRefund buildPartial() {
        org.bitcoin.paymentchannel.Protos.ReturnRefund result = new org.bitcoin.paymentchannel.Protos.ReturnRefund(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.ReturnRefund) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.ReturnRefund)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.ReturnRefund other) {
        if (other == org.bitcoin.paymentchannel.Protos.ReturnRefund.getDefaultInstance()) return this;
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSignature()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.ReturnRefund parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.ReturnRefund) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes signature = 1;
      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 1;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes signature = 1;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 1;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 1;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.ReturnRefund)
    }

    static {
      defaultInstance = new ReturnRefund(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.ReturnRefund)
  }

  public interface ProvideContractOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes tx = 1;
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * The serialized bytes of the transaction in Satoshi format.
     * * It must be signed and completely valid and ready for broadcast (ie it includes the
     *   necessary fees) TODO: tell the client how much fee it needs
     * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
     *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
     *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
     * </pre>
     */
    boolean hasTx();
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * The serialized bytes of the transaction in Satoshi format.
     * * It must be signed and completely valid and ready for broadcast (ie it includes the
     *   necessary fees) TODO: tell the client how much fee it needs
     * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
     *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
     *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
     * </pre>
     */
    com.google.protobuf.ByteString getTx();

    // required .paymentchannels.UpdatePayment initial_payment = 2;
    /**
     * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
     *
     * <pre>
     * To open the channel, an initial payment of the server-specified dust limit value must be
     * provided. This ensures that the channel is never in an un-settleable state due to either
     * no payment tx having been provided at all, or a payment that is smaller than the dust
     * limit being provided.
     * </pre>
     */
    boolean hasInitialPayment();
    /**
     * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
     *
     * <pre>
     * To open the channel, an initial payment of the server-specified dust limit value must be
     * provided. This ensures that the channel is never in an un-settleable state due to either
     * no payment tx having been provided at all, or a payment that is smaller than the dust
     * limit being provided.
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.UpdatePayment getInitialPayment();
    /**
     * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
     *
     * <pre>
     * To open the channel, an initial payment of the server-specified dust limit value must be
     * provided. This ensures that the channel is never in an un-settleable state due to either
     * no payment tx having been provided at all, or a payment that is smaller than the dust
     * limit being provided.
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder getInitialPaymentOrBuilder();
  }
  /**
   * Protobuf type {@code paymentchannels.ProvideContract}
   *
   * <pre>
   * Sent from the primary to the secondary to complete initialization.
   * </pre>
   */
  public static final class ProvideContract extends
      com.google.protobuf.GeneratedMessage
      implements ProvideContractOrBuilder {
    // Use ProvideContract.newBuilder() to construct.
    private ProvideContract(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProvideContract(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProvideContract defaultInstance;
    public static ProvideContract getDefaultInstance() {
      return defaultInstance;
    }

    public ProvideContract getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProvideContract(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tx_ = input.readBytes();
              break;
            }
            case 18: {
              org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = initialPayment_.toBuilder();
              }
              initialPayment_ = input.readMessage(org.bitcoin.paymentchannel.Protos.UpdatePayment.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(initialPayment_);
                initialPayment_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideContract_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideContract_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.ProvideContract.class, org.bitcoin.paymentchannel.Protos.ProvideContract.Builder.class);
    }

    public static com.google.protobuf.Parser<ProvideContract> PARSER =
        new com.google.protobuf.AbstractParser<ProvideContract>() {
      public ProvideContract parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProvideContract(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProvideContract> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes tx = 1;
    public static final int TX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * The serialized bytes of the transaction in Satoshi format.
     * * It must be signed and completely valid and ready for broadcast (ie it includes the
     *   necessary fees) TODO: tell the client how much fee it needs
     * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
     *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
     *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
     * </pre>
     */
    public boolean hasTx() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * The serialized bytes of the transaction in Satoshi format.
     * * It must be signed and completely valid and ready for broadcast (ie it includes the
     *   necessary fees) TODO: tell the client how much fee it needs
     * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
     *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
     *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
     * </pre>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    // required .paymentchannels.UpdatePayment initial_payment = 2;
    public static final int INITIAL_PAYMENT_FIELD_NUMBER = 2;
    private org.bitcoin.paymentchannel.Protos.UpdatePayment initialPayment_;
    /**
     * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
     *
     * <pre>
     * To open the channel, an initial payment of the server-specified dust limit value must be
     * provided. This ensures that the channel is never in an un-settleable state due to either
     * no payment tx having been provided at all, or a payment that is smaller than the dust
     * limit being provided.
     * </pre>
     */
    public boolean hasInitialPayment() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
     *
     * <pre>
     * To open the channel, an initial payment of the server-specified dust limit value must be
     * provided. This ensures that the channel is never in an un-settleable state due to either
     * no payment tx having been provided at all, or a payment that is smaller than the dust
     * limit being provided.
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.UpdatePayment getInitialPayment() {
      return initialPayment_;
    }
    /**
     * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
     *
     * <pre>
     * To open the channel, an initial payment of the server-specified dust limit value must be
     * provided. This ensures that the channel is never in an un-settleable state due to either
     * no payment tx having been provided at all, or a payment that is smaller than the dust
     * limit being provided.
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder getInitialPaymentOrBuilder() {
      return initialPayment_;
    }

    private void initFields() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
      initialPayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInitialPayment()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getInitialPayment().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, tx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, initialPayment_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, initialPayment_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.ProvideContract parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.ProvideContract prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.ProvideContract}
     *
     * <pre>
     * Sent from the primary to the secondary to complete initialization.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.ProvideContractOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideContract_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideContract_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.ProvideContract.class, org.bitcoin.paymentchannel.Protos.ProvideContract.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.ProvideContract.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInitialPaymentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (initialPaymentBuilder_ == null) {
          initialPayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
        } else {
          initialPaymentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_ProvideContract_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.ProvideContract getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.ProvideContract.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.ProvideContract build() {
        org.bitcoin.paymentchannel.Protos.ProvideContract result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.ProvideContract buildPartial() {
        org.bitcoin.paymentchannel.Protos.ProvideContract result = new org.bitcoin.paymentchannel.Protos.ProvideContract(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tx_ = tx_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (initialPaymentBuilder_ == null) {
          result.initialPayment_ = initialPayment_;
        } else {
          result.initialPayment_ = initialPaymentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.ProvideContract) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.ProvideContract)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.ProvideContract other) {
        if (other == org.bitcoin.paymentchannel.Protos.ProvideContract.getDefaultInstance()) return this;
        if (other.hasTx()) {
          setTx(other.getTx());
        }
        if (other.hasInitialPayment()) {
          mergeInitialPayment(other.getInitialPayment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTx()) {
          
          return false;
        }
        if (!hasInitialPayment()) {
          
          return false;
        }
        if (!getInitialPayment().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.ProvideContract parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.ProvideContract) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes tx = 1;
      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * The serialized bytes of the transaction in Satoshi format.
       * * It must be signed and completely valid and ready for broadcast (ie it includes the
       *   necessary fees) TODO: tell the client how much fee it needs
       * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
       *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
       *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
       * </pre>
       */
      public boolean hasTx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * The serialized bytes of the transaction in Satoshi format.
       * * It must be signed and completely valid and ready for broadcast (ie it includes the
       *   necessary fees) TODO: tell the client how much fee it needs
       * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
       *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
       *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
       * </pre>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * The serialized bytes of the transaction in Satoshi format.
       * * It must be signed and completely valid and ready for broadcast (ie it includes the
       *   necessary fees) TODO: tell the client how much fee it needs
       * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
       *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
       *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
       * </pre>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * The serialized bytes of the transaction in Satoshi format.
       * * It must be signed and completely valid and ready for broadcast (ie it includes the
       *   necessary fees) TODO: tell the client how much fee it needs
       * * Its first output must be a 2-of-2 multisig output with the first pubkey being the
       *   primary's and the second being the secondary's (ie the script must be exactly "OP_2
       *   ProvideRefund.multisig_key Initiate.multisig_key OP_2 OP_CHECKMULTISIG")
       * </pre>
       */
      public Builder clearTx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }

      // required .paymentchannels.UpdatePayment initial_payment = 2;
      private org.bitcoin.paymentchannel.Protos.UpdatePayment initialPayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.UpdatePayment, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder, org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder> initialPaymentBuilder_;
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public boolean hasInitialPayment() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.UpdatePayment getInitialPayment() {
        if (initialPaymentBuilder_ == null) {
          return initialPayment_;
        } else {
          return initialPaymentBuilder_.getMessage();
        }
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public Builder setInitialPayment(org.bitcoin.paymentchannel.Protos.UpdatePayment value) {
        if (initialPaymentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          initialPayment_ = value;
          onChanged();
        } else {
          initialPaymentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public Builder setInitialPayment(
          org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder builderForValue) {
        if (initialPaymentBuilder_ == null) {
          initialPayment_ = builderForValue.build();
          onChanged();
        } else {
          initialPaymentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public Builder mergeInitialPayment(org.bitcoin.paymentchannel.Protos.UpdatePayment value) {
        if (initialPaymentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              initialPayment_ != org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance()) {
            initialPayment_ =
              org.bitcoin.paymentchannel.Protos.UpdatePayment.newBuilder(initialPayment_).mergeFrom(value).buildPartial();
          } else {
            initialPayment_ = value;
          }
          onChanged();
        } else {
          initialPaymentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public Builder clearInitialPayment() {
        if (initialPaymentBuilder_ == null) {
          initialPayment_ = org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
          onChanged();
        } else {
          initialPaymentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder getInitialPaymentBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getInitialPaymentFieldBuilder().getBuilder();
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder getInitialPaymentOrBuilder() {
        if (initialPaymentBuilder_ != null) {
          return initialPaymentBuilder_.getMessageOrBuilder();
        } else {
          return initialPayment_;
        }
      }
      /**
       * <code>required .paymentchannels.UpdatePayment initial_payment = 2;</code>
       *
       * <pre>
       * To open the channel, an initial payment of the server-specified dust limit value must be
       * provided. This ensures that the channel is never in an un-settleable state due to either
       * no payment tx having been provided at all, or a payment that is smaller than the dust
       * limit being provided.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.UpdatePayment, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder, org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder> 
          getInitialPaymentFieldBuilder() {
        if (initialPaymentBuilder_ == null) {
          initialPaymentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.UpdatePayment, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder, org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder>(
                  initialPayment_,
                  getParentForChildren(),
                  isClean());
          initialPayment_ = null;
        }
        return initialPaymentBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.ProvideContract)
    }

    static {
      defaultInstance = new ProvideContract(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.ProvideContract)
  }

  public interface UpdatePaymentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint64 client_change_value = 1;
    /**
     * <code>required uint64 client_change_value = 1;</code>
     *
     * <pre>
     * The value which is sent back to the primary.  The rest of the multisig output is left for
     * the secondary to do with as they wish.
     * </pre>
     */
    boolean hasClientChangeValue();
    /**
     * <code>required uint64 client_change_value = 1;</code>
     *
     * <pre>
     * The value which is sent back to the primary.  The rest of the multisig output is left for
     * the secondary to do with as they wish.
     * </pre>
     */
    long getClientChangeValue();

    // required bytes signature = 2;
    /**
     * <code>required bytes signature = 2;</code>
     *
     * <pre>
     * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
     * spends the primary's part of the multisig contract's output.  This signature only covers
     * the primary's refund output and thus the secondary is free to do what they wish with their
     * part of the multisig output.
     * </pre>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 2;</code>
     *
     * <pre>
     * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
     * spends the primary's part of the multisig contract's output.  This signature only covers
     * the primary's refund output and thus the secondary is free to do what they wish with their
     * part of the multisig output.
     * </pre>
     */
    com.google.protobuf.ByteString getSignature();

    // optional bytes info = 3;
    /**
     * <code>optional bytes info = 3;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol.
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional bytes info = 3;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol.
     * </pre>
     */
    com.google.protobuf.ByteString getInfo();
  }
  /**
   * Protobuf type {@code paymentchannels.UpdatePayment}
   *
   * <pre>
   * This message can only be used by the primary after it has received a CHANNEL_OPEN message. It
   * creates a new payment transaction. Note that we don't resubmit the entire TX, this is to avoid
   * (re)parsing bugs and overhead. The payment transaction is created by the primary by:
   * * Adding an input which spends the multisig contract
   * * Setting this input's scriptSig to the given signature and a new signature created by the
   *   primary (the primary should ensure the signature provided correctly spends the multisig
   *   contract)
   * * Adding an output who's scriptPubKey is the same as the refund output (the only output) in
   *   the refund transaction
   * * Setting this output's value to client_change_value (which must be lower than the most recent
   *   client_change_value and lower than the multisig contract's output value)
   * * Adding any number of additional outputs as desired (leaving sufficient fee, if necessary)
   * * Adding any number of additional inputs as desired (eg to add more fee)
   * </pre>
   */
  public static final class UpdatePayment extends
      com.google.protobuf.GeneratedMessage
      implements UpdatePaymentOrBuilder {
    // Use UpdatePayment.newBuilder() to construct.
    private UpdatePayment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UpdatePayment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UpdatePayment defaultInstance;
    public static UpdatePayment getDefaultInstance() {
      return defaultInstance;
    }

    public UpdatePayment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UpdatePayment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              clientChangeValue_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              signature_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_UpdatePayment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_UpdatePayment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.UpdatePayment.class, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder.class);
    }

    public static com.google.protobuf.Parser<UpdatePayment> PARSER =
        new com.google.protobuf.AbstractParser<UpdatePayment>() {
      public UpdatePayment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdatePayment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UpdatePayment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint64 client_change_value = 1;
    public static final int CLIENT_CHANGE_VALUE_FIELD_NUMBER = 1;
    private long clientChangeValue_;
    /**
     * <code>required uint64 client_change_value = 1;</code>
     *
     * <pre>
     * The value which is sent back to the primary.  The rest of the multisig output is left for
     * the secondary to do with as they wish.
     * </pre>
     */
    public boolean hasClientChangeValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 client_change_value = 1;</code>
     *
     * <pre>
     * The value which is sent back to the primary.  The rest of the multisig output is left for
     * the secondary to do with as they wish.
     * </pre>
     */
    public long getClientChangeValue() {
      return clientChangeValue_;
    }

    // required bytes signature = 2;
    public static final int SIGNATURE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 2;</code>
     *
     * <pre>
     * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
     * spends the primary's part of the multisig contract's output.  This signature only covers
     * the primary's refund output and thus the secondary is free to do what they wish with their
     * part of the multisig output.
     * </pre>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes signature = 2;</code>
     *
     * <pre>
     * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
     * spends the primary's part of the multisig contract's output.  This signature only covers
     * the primary's refund output and thus the secondary is free to do what they wish with their
     * part of the multisig output.
     * </pre>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    // optional bytes info = 3;
    public static final int INFO_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString info_;
    /**
     * <code>optional bytes info = 3;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol.
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes info = 3;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol.
     * </pre>
     */
    public com.google.protobuf.ByteString getInfo() {
      return info_;
    }

    private void initFields() {
      clientChangeValue_ = 0L;
      signature_ = com.google.protobuf.ByteString.EMPTY;
      info_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClientChangeValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, clientChangeValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, signature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, info_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, clientChangeValue_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, signature_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.UpdatePayment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.UpdatePayment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.UpdatePayment}
     *
     * <pre>
     * This message can only be used by the primary after it has received a CHANNEL_OPEN message. It
     * creates a new payment transaction. Note that we don't resubmit the entire TX, this is to avoid
     * (re)parsing bugs and overhead. The payment transaction is created by the primary by:
     * * Adding an input which spends the multisig contract
     * * Setting this input's scriptSig to the given signature and a new signature created by the
     *   primary (the primary should ensure the signature provided correctly spends the multisig
     *   contract)
     * * Adding an output who's scriptPubKey is the same as the refund output (the only output) in
     *   the refund transaction
     * * Setting this output's value to client_change_value (which must be lower than the most recent
     *   client_change_value and lower than the multisig contract's output value)
     * * Adding any number of additional outputs as desired (leaving sufficient fee, if necessary)
     * * Adding any number of additional inputs as desired (eg to add more fee)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.UpdatePaymentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_UpdatePayment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_UpdatePayment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.UpdatePayment.class, org.bitcoin.paymentchannel.Protos.UpdatePayment.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.UpdatePayment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        clientChangeValue_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        info_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_UpdatePayment_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.UpdatePayment getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.UpdatePayment build() {
        org.bitcoin.paymentchannel.Protos.UpdatePayment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.UpdatePayment buildPartial() {
        org.bitcoin.paymentchannel.Protos.UpdatePayment result = new org.bitcoin.paymentchannel.Protos.UpdatePayment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientChangeValue_ = clientChangeValue_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signature_ = signature_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.UpdatePayment) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.UpdatePayment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.UpdatePayment other) {
        if (other == org.bitcoin.paymentchannel.Protos.UpdatePayment.getDefaultInstance()) return this;
        if (other.hasClientChangeValue()) {
          setClientChangeValue(other.getClientChangeValue());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        if (other.hasInfo()) {
          setInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClientChangeValue()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.UpdatePayment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.UpdatePayment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint64 client_change_value = 1;
      private long clientChangeValue_ ;
      /**
       * <code>required uint64 client_change_value = 1;</code>
       *
       * <pre>
       * The value which is sent back to the primary.  The rest of the multisig output is left for
       * the secondary to do with as they wish.
       * </pre>
       */
      public boolean hasClientChangeValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 client_change_value = 1;</code>
       *
       * <pre>
       * The value which is sent back to the primary.  The rest of the multisig output is left for
       * the secondary to do with as they wish.
       * </pre>
       */
      public long getClientChangeValue() {
        return clientChangeValue_;
      }
      /**
       * <code>required uint64 client_change_value = 1;</code>
       *
       * <pre>
       * The value which is sent back to the primary.  The rest of the multisig output is left for
       * the secondary to do with as they wish.
       * </pre>
       */
      public Builder setClientChangeValue(long value) {
        bitField0_ |= 0x00000001;
        clientChangeValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 client_change_value = 1;</code>
       *
       * <pre>
       * The value which is sent back to the primary.  The rest of the multisig output is left for
       * the secondary to do with as they wish.
       * </pre>
       */
      public Builder clearClientChangeValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientChangeValue_ = 0L;
        onChanged();
        return this;
      }

      // required bytes signature = 2;
      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 2;</code>
       *
       * <pre>
       * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
       * spends the primary's part of the multisig contract's output.  This signature only covers
       * the primary's refund output and thus the secondary is free to do what they wish with their
       * part of the multisig output.
       * </pre>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes signature = 2;</code>
       *
       * <pre>
       * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
       * spends the primary's part of the multisig contract's output.  This signature only covers
       * the primary's refund output and thus the secondary is free to do what they wish with their
       * part of the multisig output.
       * </pre>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 2;</code>
       *
       * <pre>
       * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
       * spends the primary's part of the multisig contract's output.  This signature only covers
       * the primary's refund output and thus the secondary is free to do what they wish with their
       * part of the multisig output.
       * </pre>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 2;</code>
       *
       * <pre>
       * A SIGHASH_SINGLE|SIGHASH_ANYONECANPAY signature (including the postfix type byte) which
       * spends the primary's part of the multisig contract's output.  This signature only covers
       * the primary's refund output and thus the secondary is free to do what they wish with their
       * part of the multisig output.
       * </pre>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // optional bytes info = 3;
      private com.google.protobuf.ByteString info_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes info = 3;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol.
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes info = 3;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol.
       * </pre>
       */
      public com.google.protobuf.ByteString getInfo() {
        return info_;
      }
      /**
       * <code>optional bytes info = 3;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol.
       * </pre>
       */
      public Builder setInfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes info = 3;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol.
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.UpdatePayment)
    }

    static {
      defaultInstance = new UpdatePayment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.UpdatePayment)
  }

  public interface PaymentAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes info = 1;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol
     * </pre>
     */
    com.google.protobuf.ByteString getInfo();
  }
  /**
   * Protobuf type {@code paymentchannels.PaymentAck}
   *
   * <pre>
   * This message is sent as an acknowledgement of an UpdatePayment message
   * </pre>
   */
  public static final class PaymentAck extends
      com.google.protobuf.GeneratedMessage
      implements PaymentAckOrBuilder {
    // Use PaymentAck.newBuilder() to construct.
    private PaymentAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PaymentAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PaymentAck defaultInstance;
    public static PaymentAck getDefaultInstance() {
      return defaultInstance;
    }

    public PaymentAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PaymentAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_PaymentAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_PaymentAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.PaymentAck.class, org.bitcoin.paymentchannel.Protos.PaymentAck.Builder.class);
    }

    public static com.google.protobuf.Parser<PaymentAck> PARSER =
        new com.google.protobuf.AbstractParser<PaymentAck>() {
      public PaymentAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PaymentAck(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PaymentAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString info_;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * Information about this update. Used to extend this protocol
     * </pre>
     */
    public com.google.protobuf.ByteString getInfo() {
      return info_;
    }

    private void initFields() {
      info_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, info_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.PaymentAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.PaymentAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.PaymentAck}
     *
     * <pre>
     * This message is sent as an acknowledgement of an UpdatePayment message
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.PaymentAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_PaymentAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_PaymentAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.PaymentAck.class, org.bitcoin.paymentchannel.Protos.PaymentAck.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.PaymentAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        info_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_PaymentAck_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.PaymentAck getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.PaymentAck.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.PaymentAck build() {
        org.bitcoin.paymentchannel.Protos.PaymentAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.PaymentAck buildPartial() {
        org.bitcoin.paymentchannel.Protos.PaymentAck result = new org.bitcoin.paymentchannel.Protos.PaymentAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.PaymentAck) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.PaymentAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.PaymentAck other) {
        if (other == org.bitcoin.paymentchannel.Protos.PaymentAck.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          setInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.PaymentAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.PaymentAck) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes info = 1;
      private com.google.protobuf.ByteString info_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol
       * </pre>
       */
      public com.google.protobuf.ByteString getInfo() {
        return info_;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol
       * </pre>
       */
      public Builder setInfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * Information about this update. Used to extend this protocol
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.PaymentAck)
    }

    static {
      defaultInstance = new PaymentAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.PaymentAck)
  }

  public interface SettlementOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes tx = 1;
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * A copy of the fully signed final contract that settles the channel. The client can verify
     * the transaction is correct and then commit it to their wallet.
     * </pre>
     */
    boolean hasTx();
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * A copy of the fully signed final contract that settles the channel. The client can verify
     * the transaction is correct and then commit it to their wallet.
     * </pre>
     */
    com.google.protobuf.ByteString getTx();
  }
  /**
   * Protobuf type {@code paymentchannels.Settlement}
   */
  public static final class Settlement extends
      com.google.protobuf.GeneratedMessage
      implements SettlementOrBuilder {
    // Use Settlement.newBuilder() to construct.
    private Settlement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Settlement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Settlement defaultInstance;
    public static Settlement getDefaultInstance() {
      return defaultInstance;
    }

    public Settlement getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Settlement(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tx_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Settlement_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Settlement_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.Settlement.class, org.bitcoin.paymentchannel.Protos.Settlement.Builder.class);
    }

    public static com.google.protobuf.Parser<Settlement> PARSER =
        new com.google.protobuf.AbstractParser<Settlement>() {
      public Settlement parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Settlement(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Settlement> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes tx = 1;
    public static final int TX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * A copy of the fully signed final contract that settles the channel. The client can verify
     * the transaction is correct and then commit it to their wallet.
     * </pre>
     */
    public boolean hasTx() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes tx = 1;</code>
     *
     * <pre>
     * A copy of the fully signed final contract that settles the channel. The client can verify
     * the transaction is correct and then commit it to their wallet.
     * </pre>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    private void initFields() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, tx_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tx_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Settlement parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.Settlement prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.Settlement}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.SettlementOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Settlement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Settlement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.Settlement.class, org.bitcoin.paymentchannel.Protos.Settlement.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.Settlement.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Settlement_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.Settlement getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.Settlement.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.Settlement build() {
        org.bitcoin.paymentchannel.Protos.Settlement result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.Settlement buildPartial() {
        org.bitcoin.paymentchannel.Protos.Settlement result = new org.bitcoin.paymentchannel.Protos.Settlement(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tx_ = tx_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.Settlement) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.Settlement)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.Settlement other) {
        if (other == org.bitcoin.paymentchannel.Protos.Settlement.getDefaultInstance()) return this;
        if (other.hasTx()) {
          setTx(other.getTx());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTx()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.Settlement parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.Settlement) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes tx = 1;
      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * A copy of the fully signed final contract that settles the channel. The client can verify
       * the transaction is correct and then commit it to their wallet.
       * </pre>
       */
      public boolean hasTx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * A copy of the fully signed final contract that settles the channel. The client can verify
       * the transaction is correct and then commit it to their wallet.
       * </pre>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * A copy of the fully signed final contract that settles the channel. The client can verify
       * the transaction is correct and then commit it to their wallet.
       * </pre>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes tx = 1;</code>
       *
       * <pre>
       * A copy of the fully signed final contract that settles the channel. The client can verify
       * the transaction is correct and then commit it to their wallet.
       * </pre>
       */
      public Builder clearTx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.Settlement)
    }

    static {
      defaultInstance = new Settlement(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.Settlement)
  }

  public interface HTLCProvideContractOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes tx = 1;
    /**
     * <code>required bytes tx = 1;</code>
     */
    boolean hasTx();
    /**
     * <code>required bytes tx = 1;</code>
     */
    com.google.protobuf.ByteString getTx();

    // required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
     */
    boolean hasSignedInitialTeardown();
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedInitialTeardown();
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedInitialTeardownOrBuilder();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCProvideContract}
   */
  public static final class HTLCProvideContract extends
      com.google.protobuf.GeneratedMessage
      implements HTLCProvideContractOrBuilder {
    // Use HTLCProvideContract.newBuilder() to construct.
    private HTLCProvideContract(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCProvideContract(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCProvideContract defaultInstance;
    public static HTLCProvideContract getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCProvideContract getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCProvideContract(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tx_ = input.readBytes();
              break;
            }
            case 18: {
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = signedInitialTeardown_.toBuilder();
              }
              signedInitialTeardown_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signedInitialTeardown_);
                signedInitialTeardown_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideContract_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideContract_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCProvideContract.class, org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCProvideContract> PARSER =
        new com.google.protobuf.AbstractParser<HTLCProvideContract>() {
      public HTLCProvideContract parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCProvideContract(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCProvideContract> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes tx = 1;
    public static final int TX_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>required bytes tx = 1;</code>
     */
    public boolean hasTx() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes tx = 1;</code>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    // required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;
    public static final int SIGNED_INITIAL_TEARDOWN_FIELD_NUMBER = 2;
    private org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction signedInitialTeardown_;
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
     */
    public boolean hasSignedInitialTeardown() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedInitialTeardown() {
      return signedInitialTeardown_;
    }
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedInitialTeardownOrBuilder() {
      return signedInitialTeardown_;
    }

    private void initFields() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
      signedInitialTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignedInitialTeardown()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSignedInitialTeardown().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, tx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, signedInitialTeardown_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, tx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, signedInitialTeardown_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideContract parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCProvideContract prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCProvideContract}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCProvideContractOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideContract_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideContract_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCProvideContract.class, org.bitcoin.paymentchannel.Protos.HTLCProvideContract.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCProvideContract.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSignedInitialTeardownFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (signedInitialTeardownBuilder_ == null) {
          signedInitialTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
        } else {
          signedInitialTeardownBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideContract_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCProvideContract getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCProvideContract.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCProvideContract build() {
        org.bitcoin.paymentchannel.Protos.HTLCProvideContract result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCProvideContract buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCProvideContract result = new org.bitcoin.paymentchannel.Protos.HTLCProvideContract(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tx_ = tx_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (signedInitialTeardownBuilder_ == null) {
          result.signedInitialTeardown_ = signedInitialTeardown_;
        } else {
          result.signedInitialTeardown_ = signedInitialTeardownBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCProvideContract) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCProvideContract)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCProvideContract other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCProvideContract.getDefaultInstance()) return this;
        if (other.hasTx()) {
          setTx(other.getTx());
        }
        if (other.hasSignedInitialTeardown()) {
          mergeSignedInitialTeardown(other.getSignedInitialTeardown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTx()) {
          
          return false;
        }
        if (!hasSignedInitialTeardown()) {
          
          return false;
        }
        if (!getSignedInitialTeardown().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCProvideContract parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCProvideContract) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes tx = 1;
      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes tx = 1;</code>
       */
      public boolean hasTx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes tx = 1;</code>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>required bytes tx = 1;</code>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes tx = 1;</code>
       */
      public Builder clearTx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }

      // required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;
      private org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction signedInitialTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> signedInitialTeardownBuilder_;
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public boolean hasSignedInitialTeardown() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedInitialTeardown() {
        if (signedInitialTeardownBuilder_ == null) {
          return signedInitialTeardown_;
        } else {
          return signedInitialTeardownBuilder_.getMessage();
        }
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public Builder setSignedInitialTeardown(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedInitialTeardownBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signedInitialTeardown_ = value;
          onChanged();
        } else {
          signedInitialTeardownBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public Builder setSignedInitialTeardown(
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedInitialTeardownBuilder_ == null) {
          signedInitialTeardown_ = builderForValue.build();
          onChanged();
        } else {
          signedInitialTeardownBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public Builder mergeSignedInitialTeardown(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedInitialTeardownBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              signedInitialTeardown_ != org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance()) {
            signedInitialTeardown_ =
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.newBuilder(signedInitialTeardown_).mergeFrom(value).buildPartial();
          } else {
            signedInitialTeardown_ = value;
          }
          onChanged();
        } else {
          signedInitialTeardownBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public Builder clearSignedInitialTeardown() {
        if (signedInitialTeardownBuilder_ == null) {
          signedInitialTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
          onChanged();
        } else {
          signedInitialTeardownBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder getSignedInitialTeardownBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSignedInitialTeardownFieldBuilder().getBuilder();
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedInitialTeardownOrBuilder() {
        if (signedInitialTeardownBuilder_ != null) {
          return signedInitialTeardownBuilder_.getMessageOrBuilder();
        } else {
          return signedInitialTeardown_;
        }
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_initial_teardown = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
          getSignedInitialTeardownFieldBuilder() {
        if (signedInitialTeardownBuilder_ == null) {
          signedInitialTeardownBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder>(
                  signedInitialTeardown_,
                  getParentForChildren(),
                  isClean());
          signedInitialTeardown_ = null;
        }
        return signedInitialTeardownBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCProvideContract)
    }

    static {
      defaultInstance = new HTLCProvideContract(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCProvideContract)
  }

  public interface HTLCRoundInitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes info = 1;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by the client to the server or vice-versa to
     * mark the beginning of an HTLC update round
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by the client to the server or vice-versa to
     * mark the beginning of an HTLC update round
     * </pre>
     */
    com.google.protobuf.ByteString getInfo();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCRoundInit}
   */
  public static final class HTLCRoundInit extends
      com.google.protobuf.GeneratedMessage
      implements HTLCRoundInitOrBuilder {
    // Use HTLCRoundInit.newBuilder() to construct.
    private HTLCRoundInit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCRoundInit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCRoundInit defaultInstance;
    public static HTLCRoundInit getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCRoundInit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCRoundInit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundInit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundInit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCRoundInit.class, org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCRoundInit> PARSER =
        new com.google.protobuf.AbstractParser<HTLCRoundInit>() {
      public HTLCRoundInit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCRoundInit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCRoundInit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString info_;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by the client to the server or vice-versa to
     * mark the beginning of an HTLC update round
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by the client to the server or vice-versa to
     * mark the beginning of an HTLC update round
     * </pre>
     */
    public com.google.protobuf.ByteString getInfo() {
      return info_;
    }

    private void initFields() {
      info_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, info_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundInit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCRoundInit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCRoundInit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCRoundInitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundInit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundInit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCRoundInit.class, org.bitcoin.paymentchannel.Protos.HTLCRoundInit.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCRoundInit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        info_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundInit_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundInit getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCRoundInit.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundInit build() {
        org.bitcoin.paymentchannel.Protos.HTLCRoundInit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundInit buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCRoundInit result = new org.bitcoin.paymentchannel.Protos.HTLCRoundInit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCRoundInit) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCRoundInit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCRoundInit other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCRoundInit.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          setInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCRoundInit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCRoundInit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes info = 1;
      private com.google.protobuf.ByteString info_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by the client to the server or vice-versa to
       * mark the beginning of an HTLC update round
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by the client to the server or vice-versa to
       * mark the beginning of an HTLC update round
       * </pre>
       */
      public com.google.protobuf.ByteString getInfo() {
        return info_;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by the client to the server or vice-versa to
       * mark the beginning of an HTLC update round
       * </pre>
       */
      public Builder setInfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by the client to the server or vice-versa to
       * mark the beginning of an HTLC update round
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCRoundInit)
    }

    static {
      defaultInstance = new HTLCRoundInit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCRoundInit)
  }

  public interface HTLCRoundAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes info = 1;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent as a reply to the message above to acknowledge
     * the round's start. From here on, the peer can send updates
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent as a reply to the message above to acknowledge
     * the round's start. From here on, the peer can send updates
     * </pre>
     */
    com.google.protobuf.ByteString getInfo();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCRoundAck}
   */
  public static final class HTLCRoundAck extends
      com.google.protobuf.GeneratedMessage
      implements HTLCRoundAckOrBuilder {
    // Use HTLCRoundAck.newBuilder() to construct.
    private HTLCRoundAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCRoundAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCRoundAck defaultInstance;
    public static HTLCRoundAck getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCRoundAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCRoundAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCRoundAck.class, org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCRoundAck> PARSER =
        new com.google.protobuf.AbstractParser<HTLCRoundAck>() {
      public HTLCRoundAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCRoundAck(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCRoundAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString info_;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent as a reply to the message above to acknowledge
     * the round's start. From here on, the peer can send updates
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent as a reply to the message above to acknowledge
     * the round's start. From here on, the peer can send updates
     * </pre>
     */
    public com.google.protobuf.ByteString getInfo() {
      return info_;
    }

    private void initFields() {
      info_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, info_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCRoundAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCRoundAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCRoundAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCRoundAck.class, org.bitcoin.paymentchannel.Protos.HTLCRoundAck.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCRoundAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        info_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundAck_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundAck getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCRoundAck.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundAck build() {
        org.bitcoin.paymentchannel.Protos.HTLCRoundAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundAck buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCRoundAck result = new org.bitcoin.paymentchannel.Protos.HTLCRoundAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCRoundAck) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCRoundAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCRoundAck other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCRoundAck.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          setInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCRoundAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCRoundAck) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes info = 1;
      private com.google.protobuf.ByteString info_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent as a reply to the message above to acknowledge
       * the round's start. From here on, the peer can send updates
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent as a reply to the message above to acknowledge
       * the round's start. From here on, the peer can send updates
       * </pre>
       */
      public com.google.protobuf.ByteString getInfo() {
        return info_;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent as a reply to the message above to acknowledge
       * the round's start. From here on, the peer can send updates
       * </pre>
       */
      public Builder setInfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent as a reply to the message above to acknowledge
       * the round's start. From here on, the peer can send updates
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCRoundAck)
    }

    static {
      defaultInstance = new HTLCRoundAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCRoundAck)
  }

  public interface HTLCRoundDoneOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional bytes info = 1;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by either part to mark the end of an update round
     * </pre>
     */
    boolean hasInfo();
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by either part to mark the end of an update round
     * </pre>
     */
    com.google.protobuf.ByteString getInfo();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCRoundDone}
   */
  public static final class HTLCRoundDone extends
      com.google.protobuf.GeneratedMessage
      implements HTLCRoundDoneOrBuilder {
    // Use HTLCRoundDone.newBuilder() to construct.
    private HTLCRoundDone(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCRoundDone(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCRoundDone defaultInstance;
    public static HTLCRoundDone getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCRoundDone getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCRoundDone(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              info_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundDone_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundDone_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCRoundDone.class, org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCRoundDone> PARSER =
        new com.google.protobuf.AbstractParser<HTLCRoundDone>() {
      public HTLCRoundDone parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCRoundDone(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCRoundDone> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional bytes info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString info_;
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by either part to mark the end of an update round
     * </pre>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes info = 1;</code>
     *
     * <pre>
     * This message is sent by either part to mark the end of an update round
     * </pre>
     */
    public com.google.protobuf.ByteString getInfo() {
      return info_;
    }

    private void initFields() {
      info_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, info_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, info_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRoundDone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCRoundDone prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCRoundDone}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCRoundDoneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundDone_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundDone_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCRoundDone.class, org.bitcoin.paymentchannel.Protos.HTLCRoundDone.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCRoundDone.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        info_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRoundDone_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundDone getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCRoundDone.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundDone build() {
        org.bitcoin.paymentchannel.Protos.HTLCRoundDone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRoundDone buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCRoundDone result = new org.bitcoin.paymentchannel.Protos.HTLCRoundDone(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.info_ = info_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCRoundDone) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCRoundDone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCRoundDone other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCRoundDone.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          setInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCRoundDone parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCRoundDone) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional bytes info = 1;
      private com.google.protobuf.ByteString info_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by either part to mark the end of an update round
       * </pre>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by either part to mark the end of an update round
       * </pre>
       */
      public com.google.protobuf.ByteString getInfo() {
        return info_;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by either part to mark the end of an update round
       * </pre>
       */
      public Builder setInfo(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes info = 1;</code>
       *
       * <pre>
       * This message is sent by either part to mark the end of an update round
       * </pre>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCRoundDone)
    }

    static {
      defaultInstance = new HTLCRoundDone(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCRoundDone)
  }

  public interface HTLCPaymentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes request_id = 1;
    /**
     * <code>required bytes request_id = 1;</code>
     */
    boolean hasRequestId();
    /**
     * <code>required bytes request_id = 1;</code>
     */
    com.google.protobuf.ByteString getRequestId();

    // required uint64 value = 2;
    /**
     * <code>required uint64 value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>required uint64 value = 2;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCPayment}
   */
  public static final class HTLCPayment extends
      com.google.protobuf.GeneratedMessage
      implements HTLCPaymentOrBuilder {
    // Use HTLCPayment.newBuilder() to construct.
    private HTLCPayment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCPayment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCPayment defaultInstance;
    public static HTLCPayment getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCPayment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCPayment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              requestId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              value_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPayment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPayment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCPayment.class, org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCPayment> PARSER =
        new com.google.protobuf.AbstractParser<HTLCPayment>() {
      public HTLCPayment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCPayment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCPayment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes request_id = 1;
    public static final int REQUEST_ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString requestId_;
    /**
     * <code>required bytes request_id = 1;</code>
     */
    public boolean hasRequestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes request_id = 1;</code>
     */
    public com.google.protobuf.ByteString getRequestId() {
      return requestId_;
    }

    // required uint64 value = 2;
    public static final int VALUE_FIELD_NUMBER = 2;
    private long value_;
    /**
     * <code>required uint64 value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 value = 2;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      requestId_ = com.google.protobuf.ByteString.EMPTY;
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasRequestId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, requestId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPayment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCPayment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCPayment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPayment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPayment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCPayment.class, org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCPayment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        requestId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPayment_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPayment getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCPayment.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPayment build() {
        org.bitcoin.paymentchannel.Protos.HTLCPayment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPayment buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCPayment result = new org.bitcoin.paymentchannel.Protos.HTLCPayment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.requestId_ = requestId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCPayment) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCPayment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCPayment other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCPayment.getDefaultInstance()) return this;
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRequestId()) {
          
          return false;
        }
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCPayment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCPayment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes request_id = 1;
      private com.google.protobuf.ByteString requestId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes request_id = 1;</code>
       */
      public boolean hasRequestId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes request_id = 1;</code>
       */
      public com.google.protobuf.ByteString getRequestId() {
        return requestId_;
      }
      /**
       * <code>required bytes request_id = 1;</code>
       */
      public Builder setRequestId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        requestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes request_id = 1;</code>
       */
      public Builder clearRequestId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestId_ = getDefaultInstance().getRequestId();
        onChanged();
        return this;
      }

      // required uint64 value = 2;
      private long value_ ;
      /**
       * <code>required uint64 value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 value = 2;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>required uint64 value = 2;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCPayment)
    }

    static {
      defaultInstance = new HTLCPayment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCPayment)
  }

  public interface HTLCInitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .paymentchannels.HTLCPayment new_payments = 1;
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPayment> 
        getNewPaymentsList();
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCPayment getNewPayments(int index);
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    int getNewPaymentsCount();
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder> 
        getNewPaymentsOrBuilderList();
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder getNewPaymentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCInit}
   */
  public static final class HTLCInit extends
      com.google.protobuf.GeneratedMessage
      implements HTLCInitOrBuilder {
    // Use HTLCInit.newBuilder() to construct.
    private HTLCInit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCInit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCInit defaultInstance;
    public static HTLCInit getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCInit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCInit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                newPayments_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCPayment>();
                mutable_bitField0_ |= 0x00000001;
              }
              newPayments_.add(input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCPayment.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          newPayments_ = java.util.Collections.unmodifiableList(newPayments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCInit.class, org.bitcoin.paymentchannel.Protos.HTLCInit.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCInit> PARSER =
        new com.google.protobuf.AbstractParser<HTLCInit>() {
      public HTLCInit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCInit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCInit> getParserForType() {
      return PARSER;
    }

    // repeated .paymentchannels.HTLCPayment new_payments = 1;
    public static final int NEW_PAYMENTS_FIELD_NUMBER = 1;
    private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPayment> newPayments_;
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPayment> getNewPaymentsList() {
      return newPayments_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder> 
        getNewPaymentsOrBuilderList() {
      return newPayments_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    public int getNewPaymentsCount() {
      return newPayments_.size();
    }
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCPayment getNewPayments(int index) {
      return newPayments_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder getNewPaymentsOrBuilder(
        int index) {
      return newPayments_.get(index);
    }

    private void initFields() {
      newPayments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getNewPaymentsCount(); i++) {
        if (!getNewPayments(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < newPayments_.size(); i++) {
        output.writeMessage(1, newPayments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < newPayments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, newPayments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCInit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCInit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCInitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCInit.class, org.bitcoin.paymentchannel.Protos.HTLCInit.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCInit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewPaymentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (newPaymentsBuilder_ == null) {
          newPayments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          newPaymentsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInit_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCInit getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCInit.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCInit build() {
        org.bitcoin.paymentchannel.Protos.HTLCInit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCInit buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCInit result = new org.bitcoin.paymentchannel.Protos.HTLCInit(this);
        int from_bitField0_ = bitField0_;
        if (newPaymentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            newPayments_ = java.util.Collections.unmodifiableList(newPayments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.newPayments_ = newPayments_;
        } else {
          result.newPayments_ = newPaymentsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCInit) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCInit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCInit other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCInit.getDefaultInstance()) return this;
        if (newPaymentsBuilder_ == null) {
          if (!other.newPayments_.isEmpty()) {
            if (newPayments_.isEmpty()) {
              newPayments_ = other.newPayments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNewPaymentsIsMutable();
              newPayments_.addAll(other.newPayments_);
            }
            onChanged();
          }
        } else {
          if (!other.newPayments_.isEmpty()) {
            if (newPaymentsBuilder_.isEmpty()) {
              newPaymentsBuilder_.dispose();
              newPaymentsBuilder_ = null;
              newPayments_ = other.newPayments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              newPaymentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNewPaymentsFieldBuilder() : null;
            } else {
              newPaymentsBuilder_.addAllMessages(other.newPayments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getNewPaymentsCount(); i++) {
          if (!getNewPayments(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCInit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCInit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .paymentchannels.HTLCPayment new_payments = 1;
      private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPayment> newPayments_ =
        java.util.Collections.emptyList();
      private void ensureNewPaymentsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          newPayments_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCPayment>(newPayments_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCPayment, org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder> newPaymentsBuilder_;

      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPayment> getNewPaymentsList() {
        if (newPaymentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newPayments_);
        } else {
          return newPaymentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public int getNewPaymentsCount() {
        if (newPaymentsBuilder_ == null) {
          return newPayments_.size();
        } else {
          return newPaymentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPayment getNewPayments(int index) {
        if (newPaymentsBuilder_ == null) {
          return newPayments_.get(index);
        } else {
          return newPaymentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder setNewPayments(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPayment value) {
        if (newPaymentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewPaymentsIsMutable();
          newPayments_.set(index, value);
          onChanged();
        } else {
          newPaymentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder setNewPayments(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder builderForValue) {
        if (newPaymentsBuilder_ == null) {
          ensureNewPaymentsIsMutable();
          newPayments_.set(index, builderForValue.build());
          onChanged();
        } else {
          newPaymentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder addNewPayments(org.bitcoin.paymentchannel.Protos.HTLCPayment value) {
        if (newPaymentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewPaymentsIsMutable();
          newPayments_.add(value);
          onChanged();
        } else {
          newPaymentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder addNewPayments(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPayment value) {
        if (newPaymentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewPaymentsIsMutable();
          newPayments_.add(index, value);
          onChanged();
        } else {
          newPaymentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder addNewPayments(
          org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder builderForValue) {
        if (newPaymentsBuilder_ == null) {
          ensureNewPaymentsIsMutable();
          newPayments_.add(builderForValue.build());
          onChanged();
        } else {
          newPaymentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder addNewPayments(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder builderForValue) {
        if (newPaymentsBuilder_ == null) {
          ensureNewPaymentsIsMutable();
          newPayments_.add(index, builderForValue.build());
          onChanged();
        } else {
          newPaymentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder addAllNewPayments(
          java.lang.Iterable<? extends org.bitcoin.paymentchannel.Protos.HTLCPayment> values) {
        if (newPaymentsBuilder_ == null) {
          ensureNewPaymentsIsMutable();
          super.addAll(values, newPayments_);
          onChanged();
        } else {
          newPaymentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder clearNewPayments() {
        if (newPaymentsBuilder_ == null) {
          newPayments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          newPaymentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public Builder removeNewPayments(int index) {
        if (newPaymentsBuilder_ == null) {
          ensureNewPaymentsIsMutable();
          newPayments_.remove(index);
          onChanged();
        } else {
          newPaymentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder getNewPaymentsBuilder(
          int index) {
        return getNewPaymentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder getNewPaymentsOrBuilder(
          int index) {
        if (newPaymentsBuilder_ == null) {
          return newPayments_.get(index);  } else {
          return newPaymentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder> 
           getNewPaymentsOrBuilderList() {
        if (newPaymentsBuilder_ != null) {
          return newPaymentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newPayments_);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder addNewPaymentsBuilder() {
        return getNewPaymentsFieldBuilder().addBuilder(
            org.bitcoin.paymentchannel.Protos.HTLCPayment.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder addNewPaymentsBuilder(
          int index) {
        return getNewPaymentsFieldBuilder().addBuilder(
            index, org.bitcoin.paymentchannel.Protos.HTLCPayment.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCPayment new_payments = 1;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder> 
           getNewPaymentsBuilderList() {
        return getNewPaymentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCPayment, org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder> 
          getNewPaymentsFieldBuilder() {
        if (newPaymentsBuilder_ == null) {
          newPaymentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCPayment, org.bitcoin.paymentchannel.Protos.HTLCPayment.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentOrBuilder>(
                  newPayments_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          newPayments_ = null;
        }
        return newPaymentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCInit)
    }

    static {
      defaultInstance = new HTLCInit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCInit)
  }

  public interface HTLCPaymentReplyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes id = 1;
    /**
     * <code>required bytes id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required bytes id = 1;</code>
     */
    com.google.protobuf.ByteString getId();

    // required bytes client_request_id = 2;
    /**
     * <code>required bytes client_request_id = 2;</code>
     */
    boolean hasClientRequestId();
    /**
     * <code>required bytes client_request_id = 2;</code>
     */
    com.google.protobuf.ByteString getClientRequestId();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCPaymentReply}
   */
  public static final class HTLCPaymentReply extends
      com.google.protobuf.GeneratedMessage
      implements HTLCPaymentReplyOrBuilder {
    // Use HTLCPaymentReply.newBuilder() to construct.
    private HTLCPaymentReply(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCPaymentReply(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCPaymentReply defaultInstance;
    public static HTLCPaymentReply getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCPaymentReply getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCPaymentReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              clientRequestId_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentReply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.class, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCPaymentReply> PARSER =
        new com.google.protobuf.AbstractParser<HTLCPaymentReply>() {
      public HTLCPaymentReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCPaymentReply(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCPaymentReply> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString id_;
    /**
     * <code>required bytes id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes id = 1;</code>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    // required bytes client_request_id = 2;
    public static final int CLIENT_REQUEST_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString clientRequestId_;
    /**
     * <code>required bytes client_request_id = 2;</code>
     */
    public boolean hasClientRequestId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes client_request_id = 2;</code>
     */
    public com.google.protobuf.ByteString getClientRequestId() {
      return clientRequestId_;
    }

    private void initFields() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      clientRequestId_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientRequestId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, clientRequestId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, clientRequestId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCPaymentReply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCPaymentReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentReply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.class, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        clientRequestId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentReply_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply build() {
        org.bitcoin.paymentchannel.Protos.HTLCPaymentReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCPaymentReply result = new org.bitcoin.paymentchannel.Protos.HTLCPaymentReply(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clientRequestId_ = clientRequestId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCPaymentReply) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCPaymentReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCPaymentReply other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasClientRequestId()) {
          setClientRequestId(other.getClientRequestId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasClientRequestId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCPaymentReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCPaymentReply) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes id = 1;
      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes id = 1;</code>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <code>required bytes id = 1;</code>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      // required bytes client_request_id = 2;
      private com.google.protobuf.ByteString clientRequestId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes client_request_id = 2;</code>
       */
      public boolean hasClientRequestId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes client_request_id = 2;</code>
       */
      public com.google.protobuf.ByteString getClientRequestId() {
        return clientRequestId_;
      }
      /**
       * <code>required bytes client_request_id = 2;</code>
       */
      public Builder setClientRequestId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        clientRequestId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes client_request_id = 2;</code>
       */
      public Builder clearClientRequestId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clientRequestId_ = getDefaultInstance().getClientRequestId();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCPaymentReply)
    }

    static {
      defaultInstance = new HTLCPaymentReply(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCPaymentReply)
  }

  public interface HTLCInitReplyOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply> 
        getNewPaymentsReplyList();
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.HTLCPaymentReply getNewPaymentsReply(int index);
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    int getNewPaymentsReplyCount();
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder> 
        getNewPaymentsReplyOrBuilderList();
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder getNewPaymentsReplyOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCInitReply}
   */
  public static final class HTLCInitReply extends
      com.google.protobuf.GeneratedMessage
      implements HTLCInitReplyOrBuilder {
    // Use HTLCInitReply.newBuilder() to construct.
    private HTLCInitReply(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCInitReply(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCInitReply defaultInstance;
    public static HTLCInitReply getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCInitReply getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCInitReply(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                newPaymentsReply_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply>();
                mutable_bitField0_ |= 0x00000001;
              }
              newPaymentsReply_.add(input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          newPaymentsReply_ = java.util.Collections.unmodifiableList(newPaymentsReply_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInitReply_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInitReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCInitReply.class, org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCInitReply> PARSER =
        new com.google.protobuf.AbstractParser<HTLCInitReply>() {
      public HTLCInitReply parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCInitReply(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCInitReply> getParserForType() {
      return PARSER;
    }

    // repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;
    public static final int NEW_PAYMENTS_REPLY_FIELD_NUMBER = 1;
    private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply> newPaymentsReply_;
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply> getNewPaymentsReplyList() {
      return newPaymentsReply_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder> 
        getNewPaymentsReplyOrBuilderList() {
      return newPaymentsReply_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    public int getNewPaymentsReplyCount() {
      return newPaymentsReply_.size();
    }
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply getNewPaymentsReply(int index) {
      return newPaymentsReply_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
     *
     * <pre>
     * This is the reply of the server when the client requests a new HTLC (payment increase)
     * Server replies with secret hash (used as id) and an HTLC payment UUID
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder getNewPaymentsReplyOrBuilder(
        int index) {
      return newPaymentsReply_.get(index);
    }

    private void initFields() {
      newPaymentsReply_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getNewPaymentsReplyCount(); i++) {
        if (!getNewPaymentsReply(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < newPaymentsReply_.size(); i++) {
        output.writeMessage(1, newPaymentsReply_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < newPaymentsReply_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, newPaymentsReply_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCInitReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCInitReply prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCInitReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCInitReplyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInitReply_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInitReply_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCInitReply.class, org.bitcoin.paymentchannel.Protos.HTLCInitReply.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCInitReply.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNewPaymentsReplyFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (newPaymentsReplyBuilder_ == null) {
          newPaymentsReply_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          newPaymentsReplyBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCInitReply_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCInitReply getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCInitReply.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCInitReply build() {
        org.bitcoin.paymentchannel.Protos.HTLCInitReply result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCInitReply buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCInitReply result = new org.bitcoin.paymentchannel.Protos.HTLCInitReply(this);
        int from_bitField0_ = bitField0_;
        if (newPaymentsReplyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            newPaymentsReply_ = java.util.Collections.unmodifiableList(newPaymentsReply_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.newPaymentsReply_ = newPaymentsReply_;
        } else {
          result.newPaymentsReply_ = newPaymentsReplyBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCInitReply) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCInitReply)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCInitReply other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCInitReply.getDefaultInstance()) return this;
        if (newPaymentsReplyBuilder_ == null) {
          if (!other.newPaymentsReply_.isEmpty()) {
            if (newPaymentsReply_.isEmpty()) {
              newPaymentsReply_ = other.newPaymentsReply_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNewPaymentsReplyIsMutable();
              newPaymentsReply_.addAll(other.newPaymentsReply_);
            }
            onChanged();
          }
        } else {
          if (!other.newPaymentsReply_.isEmpty()) {
            if (newPaymentsReplyBuilder_.isEmpty()) {
              newPaymentsReplyBuilder_.dispose();
              newPaymentsReplyBuilder_ = null;
              newPaymentsReply_ = other.newPaymentsReply_;
              bitField0_ = (bitField0_ & ~0x00000001);
              newPaymentsReplyBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNewPaymentsReplyFieldBuilder() : null;
            } else {
              newPaymentsReplyBuilder_.addAllMessages(other.newPaymentsReply_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getNewPaymentsReplyCount(); i++) {
          if (!getNewPaymentsReply(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCInitReply parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCInitReply) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;
      private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply> newPaymentsReply_ =
        java.util.Collections.emptyList();
      private void ensureNewPaymentsReplyIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          newPaymentsReply_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply>(newPaymentsReply_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCPaymentReply, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder> newPaymentsReplyBuilder_;

      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply> getNewPaymentsReplyList() {
        if (newPaymentsReplyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newPaymentsReply_);
        } else {
          return newPaymentsReplyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public int getNewPaymentsReplyCount() {
        if (newPaymentsReplyBuilder_ == null) {
          return newPaymentsReply_.size();
        } else {
          return newPaymentsReplyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply getNewPaymentsReply(int index) {
        if (newPaymentsReplyBuilder_ == null) {
          return newPaymentsReply_.get(index);
        } else {
          return newPaymentsReplyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder setNewPaymentsReply(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply value) {
        if (newPaymentsReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewPaymentsReplyIsMutable();
          newPaymentsReply_.set(index, value);
          onChanged();
        } else {
          newPaymentsReplyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder setNewPaymentsReply(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder builderForValue) {
        if (newPaymentsReplyBuilder_ == null) {
          ensureNewPaymentsReplyIsMutable();
          newPaymentsReply_.set(index, builderForValue.build());
          onChanged();
        } else {
          newPaymentsReplyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder addNewPaymentsReply(org.bitcoin.paymentchannel.Protos.HTLCPaymentReply value) {
        if (newPaymentsReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewPaymentsReplyIsMutable();
          newPaymentsReply_.add(value);
          onChanged();
        } else {
          newPaymentsReplyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder addNewPaymentsReply(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply value) {
        if (newPaymentsReplyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewPaymentsReplyIsMutable();
          newPaymentsReply_.add(index, value);
          onChanged();
        } else {
          newPaymentsReplyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder addNewPaymentsReply(
          org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder builderForValue) {
        if (newPaymentsReplyBuilder_ == null) {
          ensureNewPaymentsReplyIsMutable();
          newPaymentsReply_.add(builderForValue.build());
          onChanged();
        } else {
          newPaymentsReplyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder addNewPaymentsReply(
          int index, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder builderForValue) {
        if (newPaymentsReplyBuilder_ == null) {
          ensureNewPaymentsReplyIsMutable();
          newPaymentsReply_.add(index, builderForValue.build());
          onChanged();
        } else {
          newPaymentsReplyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder addAllNewPaymentsReply(
          java.lang.Iterable<? extends org.bitcoin.paymentchannel.Protos.HTLCPaymentReply> values) {
        if (newPaymentsReplyBuilder_ == null) {
          ensureNewPaymentsReplyIsMutable();
          super.addAll(values, newPaymentsReply_);
          onChanged();
        } else {
          newPaymentsReplyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder clearNewPaymentsReply() {
        if (newPaymentsReplyBuilder_ == null) {
          newPaymentsReply_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          newPaymentsReplyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public Builder removeNewPaymentsReply(int index) {
        if (newPaymentsReplyBuilder_ == null) {
          ensureNewPaymentsReplyIsMutable();
          newPaymentsReply_.remove(index);
          onChanged();
        } else {
          newPaymentsReplyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder getNewPaymentsReplyBuilder(
          int index) {
        return getNewPaymentsReplyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder getNewPaymentsReplyOrBuilder(
          int index) {
        if (newPaymentsReplyBuilder_ == null) {
          return newPaymentsReply_.get(index);  } else {
          return newPaymentsReplyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder> 
           getNewPaymentsReplyOrBuilderList() {
        if (newPaymentsReplyBuilder_ != null) {
          return newPaymentsReplyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newPaymentsReply_);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder addNewPaymentsReplyBuilder() {
        return getNewPaymentsReplyFieldBuilder().addBuilder(
            org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder addNewPaymentsReplyBuilder(
          int index) {
        return getNewPaymentsReplyFieldBuilder().addBuilder(
            index, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCPaymentReply new_payments_reply = 1;</code>
       *
       * <pre>
       * This is the reply of the server when the client requests a new HTLC (payment increase)
       * Server replies with secret hash (used as id) and an HTLC payment UUID
       * </pre>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder> 
           getNewPaymentsReplyBuilderList() {
        return getNewPaymentsReplyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCPaymentReply, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder> 
          getNewPaymentsReplyFieldBuilder() {
        if (newPaymentsReplyBuilder_ == null) {
          newPaymentsReplyBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCPaymentReply, org.bitcoin.paymentchannel.Protos.HTLCPaymentReply.Builder, org.bitcoin.paymentchannel.Protos.HTLCPaymentReplyOrBuilder>(
                  newPaymentsReply_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          newPaymentsReply_ = null;
        }
        return newPaymentsReplyBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCInitReply)
    }

    static {
      defaultInstance = new HTLCInitReply(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCInitReply)
  }

  public interface HTLCSignedTransactionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes tx = 2;
    /**
     * <code>required bytes tx = 2;</code>
     */
    boolean hasTx();
    /**
     * <code>required bytes tx = 2;</code>
     */
    com.google.protobuf.ByteString getTx();

    // optional bytes tx_hash = 3;
    /**
     * <code>optional bytes tx_hash = 3;</code>
     */
    boolean hasTxHash();
    /**
     * <code>optional bytes tx_hash = 3;</code>
     */
    com.google.protobuf.ByteString getTxHash();

    // required bytes signature = 4;
    /**
     * <code>required bytes signature = 4;</code>
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 4;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCSignedTransaction}
   */
  public static final class HTLCSignedTransaction extends
      com.google.protobuf.GeneratedMessage
      implements HTLCSignedTransactionOrBuilder {
    // Use HTLCSignedTransaction.newBuilder() to construct.
    private HTLCSignedTransaction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCSignedTransaction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCSignedTransaction defaultInstance;
    public static HTLCSignedTransaction getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCSignedTransaction getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCSignedTransaction(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              tx_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              txHash_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              signature_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedTransaction_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedTransaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.class, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCSignedTransaction> PARSER =
        new com.google.protobuf.AbstractParser<HTLCSignedTransaction>() {
      public HTLCSignedTransaction parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCSignedTransaction(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCSignedTransaction> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes tx = 2;
    public static final int TX_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString tx_;
    /**
     * <code>required bytes tx = 2;</code>
     */
    public boolean hasTx() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes tx = 2;</code>
     */
    public com.google.protobuf.ByteString getTx() {
      return tx_;
    }

    // optional bytes tx_hash = 3;
    public static final int TX_HASH_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString txHash_;
    /**
     * <code>optional bytes tx_hash = 3;</code>
     */
    public boolean hasTxHash() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes tx_hash = 3;</code>
     */
    public com.google.protobuf.ByteString getTxHash() {
      return txHash_;
    }

    // required bytes signature = 4;
    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 4;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes signature = 4;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private void initFields() {
      tx_ = com.google.protobuf.ByteString.EMPTY;
      txHash_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTx()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, tx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, txHash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, signature_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, tx_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, txHash_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, signature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCSignedTransaction}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedTransaction_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedTransaction_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.class, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tx_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        txHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedTransaction_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction build() {
        org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction result = new org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tx_ = tx_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.txHash_ = txHash_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance()) return this;
        if (other.hasTx()) {
          setTx(other.getTx());
        }
        if (other.hasTxHash()) {
          setTxHash(other.getTxHash());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTx()) {
          
          return false;
        }
        if (!hasSignature()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes tx = 2;
      private com.google.protobuf.ByteString tx_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes tx = 2;</code>
       */
      public boolean hasTx() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes tx = 2;</code>
       */
      public com.google.protobuf.ByteString getTx() {
        return tx_;
      }
      /**
       * <code>required bytes tx = 2;</code>
       */
      public Builder setTx(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes tx = 2;</code>
       */
      public Builder clearTx() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tx_ = getDefaultInstance().getTx();
        onChanged();
        return this;
      }

      // optional bytes tx_hash = 3;
      private com.google.protobuf.ByteString txHash_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes tx_hash = 3;</code>
       */
      public boolean hasTxHash() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes tx_hash = 3;</code>
       */
      public com.google.protobuf.ByteString getTxHash() {
        return txHash_;
      }
      /**
       * <code>optional bytes tx_hash = 3;</code>
       */
      public Builder setTxHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        txHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes tx_hash = 3;</code>
       */
      public Builder clearTxHash() {
        bitField0_ = (bitField0_ & ~0x00000002);
        txHash_ = getDefaultInstance().getTxHash();
        onChanged();
        return this;
      }

      // required bytes signature = 4;
      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 4;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes signature = 4;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 4;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 4;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCSignedTransaction)
    }

    static {
      defaultInstance = new HTLCSignedTransaction(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCSignedTransaction)
  }

  public interface HTLCProvideSignedTeardownOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated bytes ids = 1;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server providing the teardownTx with its signature
     * Used both when client creates new HTLC outputs and when the server closes some HTLCs
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getIdsList();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server providing the teardownTx with its signature
     * Used both when client creates new HTLC outputs and when the server closes some HTLCs
     * </pre>
     */
    int getIdsCount();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server providing the teardownTx with its signature
     * Used both when client creates new HTLC outputs and when the server closes some HTLCs
     * </pre>
     */
    com.google.protobuf.ByteString getIds(int index);

    // repeated int32 idx = 2;
    /**
     * <code>repeated int32 idx = 2;</code>
     */
    java.util.List<java.lang.Integer> getIdxList();
    /**
     * <code>repeated int32 idx = 2;</code>
     */
    int getIdxCount();
    /**
     * <code>repeated int32 idx = 2;</code>
     */
    int getIdx(int index);

    // required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
     */
    boolean hasSignedTeardown();
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedTeardown();
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedTeardownOrBuilder();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCProvideSignedTeardown}
   */
  public static final class HTLCProvideSignedTeardown extends
      com.google.protobuf.GeneratedMessage
      implements HTLCProvideSignedTeardownOrBuilder {
    // Use HTLCProvideSignedTeardown.newBuilder() to construct.
    private HTLCProvideSignedTeardown(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCProvideSignedTeardown(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCProvideSignedTeardown defaultInstance;
    public static HTLCProvideSignedTeardown getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCProvideSignedTeardown getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCProvideSignedTeardown(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              ids_.add(input.readBytes());
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                idx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              idx_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                idx_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                idx_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = signedTeardown_.toBuilder();
              }
              signedTeardown_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signedTeardown_);
                signedTeardown_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          idx_ = java.util.Collections.unmodifiableList(idx_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideSignedTeardown_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideSignedTeardown_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.class, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCProvideSignedTeardown> PARSER =
        new com.google.protobuf.AbstractParser<HTLCProvideSignedTeardown>() {
      public HTLCProvideSignedTeardown parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCProvideSignedTeardown(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCProvideSignedTeardown> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated bytes ids = 1;
    public static final int IDS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> ids_;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server providing the teardownTx with its signature
     * Used both when client creates new HTLC outputs and when the server closes some HTLCs
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getIdsList() {
      return ids_;
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server providing the teardownTx with its signature
     * Used both when client creates new HTLC outputs and when the server closes some HTLCs
     * </pre>
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server providing the teardownTx with its signature
     * Used both when client creates new HTLC outputs and when the server closes some HTLCs
     * </pre>
     */
    public com.google.protobuf.ByteString getIds(int index) {
      return ids_.get(index);
    }

    // repeated int32 idx = 2;
    public static final int IDX_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> idx_;
    /**
     * <code>repeated int32 idx = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getIdxList() {
      return idx_;
    }
    /**
     * <code>repeated int32 idx = 2;</code>
     */
    public int getIdxCount() {
      return idx_.size();
    }
    /**
     * <code>repeated int32 idx = 2;</code>
     */
    public int getIdx(int index) {
      return idx_.get(index);
    }

    // required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;
    public static final int SIGNED_TEARDOWN_FIELD_NUMBER = 3;
    private org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction signedTeardown_;
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
     */
    public boolean hasSignedTeardown() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedTeardown() {
      return signedTeardown_;
    }
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedTeardownOrBuilder() {
      return signedTeardown_;
    }

    private void initFields() {
      ids_ = java.util.Collections.emptyList();
      idx_ = java.util.Collections.emptyList();
      signedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSignedTeardown()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSignedTeardown().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ids_.size(); i++) {
        output.writeBytes(1, ids_.get(i));
      }
      for (int i = 0; i < idx_.size(); i++) {
        output.writeInt32(2, idx_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(3, signedTeardown_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < ids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ids_.get(i));
        }
        size += dataSize;
        size += 1 * getIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < idx_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(idx_.get(i));
        }
        size += dataSize;
        size += 1 * getIdxList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, signedTeardown_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCProvideSignedTeardown}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardownOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideSignedTeardown_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideSignedTeardown_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.class, org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSignedTeardownFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        idx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (signedTeardownBuilder_ == null) {
          signedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
        } else {
          signedTeardownBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCProvideSignedTeardown_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown build() {
        org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown result = new org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ids_ = ids_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          idx_ = java.util.Collections.unmodifiableList(idx_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.idx_ = idx_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        if (signedTeardownBuilder_ == null) {
          result.signedTeardown_ = signedTeardown_;
        } else {
          result.signedTeardown_ = signedTeardownBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown.getDefaultInstance()) return this;
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
        if (!other.idx_.isEmpty()) {
          if (idx_.isEmpty()) {
            idx_ = other.idx_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIdxIsMutable();
            idx_.addAll(other.idx_);
          }
          onChanged();
        }
        if (other.hasSignedTeardown()) {
          mergeSignedTeardown(other.getSignedTeardown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSignedTeardown()) {
          
          return false;
        }
        if (!getSignedTeardown().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCProvideSignedTeardown) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated bytes ids = 1;
      private java.util.List<com.google.protobuf.ByteString> ids_ = java.util.Collections.emptyList();
      private void ensureIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>(ids_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server providing the teardownTx with its signature
       * Used both when client creates new HTLC outputs and when the server closes some HTLCs
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getIdsList() {
        return java.util.Collections.unmodifiableList(ids_);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server providing the teardownTx with its signature
       * Used both when client creates new HTLC outputs and when the server closes some HTLCs
       * </pre>
       */
      public int getIdsCount() {
        return ids_.size();
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server providing the teardownTx with its signature
       * Used both when client creates new HTLC outputs and when the server closes some HTLCs
       * </pre>
       */
      public com.google.protobuf.ByteString getIds(int index) {
        return ids_.get(index);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server providing the teardownTx with its signature
       * Used both when client creates new HTLC outputs and when the server closes some HTLCs
       * </pre>
       */
      public Builder setIds(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server providing the teardownTx with its signature
       * Used both when client creates new HTLC outputs and when the server closes some HTLCs
       * </pre>
       */
      public Builder addIds(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server providing the teardownTx with its signature
       * Used both when client creates new HTLC outputs and when the server closes some HTLCs
       * </pre>
       */
      public Builder addAllIds(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureIdsIsMutable();
        super.addAll(values, ids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server providing the teardownTx with its signature
       * Used both when client creates new HTLC outputs and when the server closes some HTLCs
       * </pre>
       */
      public Builder clearIds() {
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated int32 idx = 2;
      private java.util.List<java.lang.Integer> idx_ = java.util.Collections.emptyList();
      private void ensureIdxIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          idx_ = new java.util.ArrayList<java.lang.Integer>(idx_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 idx = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getIdxList() {
        return java.util.Collections.unmodifiableList(idx_);
      }
      /**
       * <code>repeated int32 idx = 2;</code>
       */
      public int getIdxCount() {
        return idx_.size();
      }
      /**
       * <code>repeated int32 idx = 2;</code>
       */
      public int getIdx(int index) {
        return idx_.get(index);
      }
      /**
       * <code>repeated int32 idx = 2;</code>
       */
      public Builder setIdx(
          int index, int value) {
        ensureIdxIsMutable();
        idx_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 idx = 2;</code>
       */
      public Builder addIdx(int value) {
        ensureIdxIsMutable();
        idx_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 idx = 2;</code>
       */
      public Builder addAllIdx(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIdxIsMutable();
        super.addAll(values, idx_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 idx = 2;</code>
       */
      public Builder clearIdx() {
        idx_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;
      private org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction signedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> signedTeardownBuilder_;
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public boolean hasSignedTeardown() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedTeardown() {
        if (signedTeardownBuilder_ == null) {
          return signedTeardown_;
        } else {
          return signedTeardownBuilder_.getMessage();
        }
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public Builder setSignedTeardown(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedTeardownBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signedTeardown_ = value;
          onChanged();
        } else {
          signedTeardownBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public Builder setSignedTeardown(
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedTeardownBuilder_ == null) {
          signedTeardown_ = builderForValue.build();
          onChanged();
        } else {
          signedTeardownBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public Builder mergeSignedTeardown(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedTeardownBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              signedTeardown_ != org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance()) {
            signedTeardown_ =
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.newBuilder(signedTeardown_).mergeFrom(value).buildPartial();
          } else {
            signedTeardown_ = value;
          }
          onChanged();
        } else {
          signedTeardownBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public Builder clearSignedTeardown() {
        if (signedTeardownBuilder_ == null) {
          signedTeardown_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
          onChanged();
        } else {
          signedTeardownBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder getSignedTeardownBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSignedTeardownFieldBuilder().getBuilder();
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedTeardownOrBuilder() {
        if (signedTeardownBuilder_ != null) {
          return signedTeardownBuilder_.getMessageOrBuilder();
        } else {
          return signedTeardown_;
        }
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_teardown = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
          getSignedTeardownFieldBuilder() {
        if (signedTeardownBuilder_ == null) {
          signedTeardownBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder>(
                  signedTeardown_,
                  getParentForChildren(),
                  isClean());
          signedTeardown_ = null;
        }
        return signedTeardownBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCProvideSignedTeardown)
    }

    static {
      defaultInstance = new HTLCProvideSignedTeardown(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCProvideSignedTeardown)
  }

  public interface HTLCSignedRefundWithHashOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated bytes ids = 1;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
     * message with the signed HTLC refundTx, and the teardownTx hash
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getIdsList();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
     * message with the signed HTLC refundTx, and the teardownTx hash
     * </pre>
     */
    int getIdsCount();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
     * message with the signed HTLC refundTx, and the teardownTx hash
     * </pre>
     */
    com.google.protobuf.ByteString getIds(int index);

    // repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> 
        getSignedRefundList();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedRefund(int index);
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    int getSignedRefundCount();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
        getSignedRefundOrBuilderList();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedRefundOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCSignedRefundWithHash}
   */
  public static final class HTLCSignedRefundWithHash extends
      com.google.protobuf.GeneratedMessage
      implements HTLCSignedRefundWithHashOrBuilder {
    // Use HTLCSignedRefundWithHash.newBuilder() to construct.
    private HTLCSignedRefundWithHash(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCSignedRefundWithHash(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCSignedRefundWithHash defaultInstance;
    public static HTLCSignedRefundWithHash getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCSignedRefundWithHash getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCSignedRefundWithHash(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              ids_.add(input.readBytes());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                signedRefund_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction>();
                mutable_bitField0_ |= 0x00000002;
              }
              signedRefund_.add(input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          signedRefund_ = java.util.Collections.unmodifiableList(signedRefund_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedRefundWithHash_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedRefundWithHash_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.class, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCSignedRefundWithHash> PARSER =
        new com.google.protobuf.AbstractParser<HTLCSignedRefundWithHash>() {
      public HTLCSignedRefundWithHash parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCSignedRefundWithHash(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCSignedRefundWithHash> getParserForType() {
      return PARSER;
    }

    // repeated bytes ids = 1;
    public static final int IDS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> ids_;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
     * message with the signed HTLC refundTx, and the teardownTx hash
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getIdsList() {
      return ids_;
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
     * message with the signed HTLC refundTx, and the teardownTx hash
     * </pre>
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
     * message with the signed HTLC refundTx, and the teardownTx hash
     * </pre>
     */
    public com.google.protobuf.ByteString getIds(int index) {
      return ids_.get(index);
    }

    // repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;
    public static final int SIGNED_REFUND_FIELD_NUMBER = 2;
    private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> signedRefund_;
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> getSignedRefundList() {
      return signedRefund_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
        getSignedRefundOrBuilderList() {
      return signedRefund_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    public int getSignedRefundCount() {
      return signedRefund_.size();
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedRefund(int index) {
      return signedRefund_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedRefundOrBuilder(
        int index) {
      return signedRefund_.get(index);
    }

    private void initFields() {
      ids_ = java.util.Collections.emptyList();
      signedRefund_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getSignedRefundCount(); i++) {
        if (!getSignedRefund(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ids_.size(); i++) {
        output.writeBytes(1, ids_.get(i));
      }
      for (int i = 0; i < signedRefund_.size(); i++) {
        output.writeMessage(2, signedRefund_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < ids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ids_.get(i));
        }
        size += dataSize;
        size += 1 * getIdsList().size();
      }
      for (int i = 0; i < signedRefund_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, signedRefund_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCSignedRefundWithHash}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHashOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedRefundWithHash_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedRefundWithHash_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.class, org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSignedRefundFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (signedRefundBuilder_ == null) {
          signedRefund_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          signedRefundBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedRefundWithHash_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash build() {
        org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash result = new org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ids_ = ids_;
        if (signedRefundBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            signedRefund_ = java.util.Collections.unmodifiableList(signedRefund_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.signedRefund_ = signedRefund_;
        } else {
          result.signedRefund_ = signedRefundBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash.getDefaultInstance()) return this;
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
        if (signedRefundBuilder_ == null) {
          if (!other.signedRefund_.isEmpty()) {
            if (signedRefund_.isEmpty()) {
              signedRefund_ = other.signedRefund_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSignedRefundIsMutable();
              signedRefund_.addAll(other.signedRefund_);
            }
            onChanged();
          }
        } else {
          if (!other.signedRefund_.isEmpty()) {
            if (signedRefundBuilder_.isEmpty()) {
              signedRefundBuilder_.dispose();
              signedRefundBuilder_ = null;
              signedRefund_ = other.signedRefund_;
              bitField0_ = (bitField0_ & ~0x00000002);
              signedRefundBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSignedRefundFieldBuilder() : null;
            } else {
              signedRefundBuilder_.addAllMessages(other.signedRefund_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getSignedRefundCount(); i++) {
          if (!getSignedRefund(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCSignedRefundWithHash) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated bytes ids = 1;
      private java.util.List<com.google.protobuf.ByteString> ids_ = java.util.Collections.emptyList();
      private void ensureIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>(ids_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
       * message with the signed HTLC refundTx, and the teardownTx hash
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getIdsList() {
        return java.util.Collections.unmodifiableList(ids_);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
       * message with the signed HTLC refundTx, and the teardownTx hash
       * </pre>
       */
      public int getIdsCount() {
        return ids_.size();
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
       * message with the signed HTLC refundTx, and the teardownTx hash
       * </pre>
       */
      public com.google.protobuf.ByteString getIds(int index) {
        return ids_.get(index);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
       * message with the signed HTLC refundTx, and the teardownTx hash
       * </pre>
       */
      public Builder setIds(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
       * message with the signed HTLC refundTx, and the teardownTx hash
       * </pre>
       */
      public Builder addIds(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
       * message with the signed HTLC refundTx, and the teardownTx hash
       * </pre>
       */
      public Builder addAllIds(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureIdsIsMutable();
        super.addAll(values, ids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client as a reply to the HTLCProvideSignedTeardown 
       * message with the signed HTLC refundTx, and the teardownTx hash
       * </pre>
       */
      public Builder clearIds() {
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;
      private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> signedRefund_ =
        java.util.Collections.emptyList();
      private void ensureSignedRefundIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          signedRefund_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction>(signedRefund_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> signedRefundBuilder_;

      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> getSignedRefundList() {
        if (signedRefundBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signedRefund_);
        } else {
          return signedRefundBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public int getSignedRefundCount() {
        if (signedRefundBuilder_ == null) {
          return signedRefund_.size();
        } else {
          return signedRefundBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedRefund(int index) {
        if (signedRefundBuilder_ == null) {
          return signedRefund_.get(index);
        } else {
          return signedRefundBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder setSignedRefund(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedRefundBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedRefundIsMutable();
          signedRefund_.set(index, value);
          onChanged();
        } else {
          signedRefundBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder setSignedRefund(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedRefundBuilder_ == null) {
          ensureSignedRefundIsMutable();
          signedRefund_.set(index, builderForValue.build());
          onChanged();
        } else {
          signedRefundBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder addSignedRefund(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedRefundBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedRefundIsMutable();
          signedRefund_.add(value);
          onChanged();
        } else {
          signedRefundBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder addSignedRefund(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedRefundBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedRefundIsMutable();
          signedRefund_.add(index, value);
          onChanged();
        } else {
          signedRefundBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder addSignedRefund(
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedRefundBuilder_ == null) {
          ensureSignedRefundIsMutable();
          signedRefund_.add(builderForValue.build());
          onChanged();
        } else {
          signedRefundBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder addSignedRefund(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedRefundBuilder_ == null) {
          ensureSignedRefundIsMutable();
          signedRefund_.add(index, builderForValue.build());
          onChanged();
        } else {
          signedRefundBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder addAllSignedRefund(
          java.lang.Iterable<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> values) {
        if (signedRefundBuilder_ == null) {
          ensureSignedRefundIsMutable();
          super.addAll(values, signedRefund_);
          onChanged();
        } else {
          signedRefundBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder clearSignedRefund() {
        if (signedRefundBuilder_ == null) {
          signedRefund_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          signedRefundBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public Builder removeSignedRefund(int index) {
        if (signedRefundBuilder_ == null) {
          ensureSignedRefundIsMutable();
          signedRefund_.remove(index);
          onChanged();
        } else {
          signedRefundBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder getSignedRefundBuilder(
          int index) {
        return getSignedRefundFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedRefundOrBuilder(
          int index) {
        if (signedRefundBuilder_ == null) {
          return signedRefund_.get(index);  } else {
          return signedRefundBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
           getSignedRefundOrBuilderList() {
        if (signedRefundBuilder_ != null) {
          return signedRefundBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signedRefund_);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder addSignedRefundBuilder() {
        return getSignedRefundFieldBuilder().addBuilder(
            org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder addSignedRefundBuilder(
          int index) {
        return getSignedRefundFieldBuilder().addBuilder(
            index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_refund = 2;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder> 
           getSignedRefundBuilderList() {
        return getSignedRefundFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
          getSignedRefundFieldBuilder() {
        if (signedRefundBuilder_ == null) {
          signedRefundBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder>(
                  signedRefund_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          signedRefund_ = null;
        }
        return signedRefundBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCSignedRefundWithHash)
    }

    static {
      defaultInstance = new HTLCSignedRefundWithHash(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCSignedRefundWithHash)
  }

  public interface HTLCSignedSettleAndForfeitOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated bytes ids = 1;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server after receiving the refund tx 
     * and the teardown hash
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getIdsList();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server after receiving the refund tx 
     * and the teardown hash
     * </pre>
     */
    int getIdsCount();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server after receiving the refund tx 
     * and the teardown hash
     * </pre>
     */
    com.google.protobuf.ByteString getIds(int index);

    // repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> 
        getSignedForfeitList();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedForfeit(int index);
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    int getSignedForfeitCount();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
        getSignedForfeitOrBuilderList();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedForfeitOrBuilder(
        int index);

    // repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> 
        getSignedSettleList();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedSettle(int index);
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    int getSignedSettleCount();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
        getSignedSettleOrBuilderList();
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedSettleOrBuilder(
        int index);

    // required bytes client_secondary_key = 4;
    /**
     * <code>required bytes client_secondary_key = 4;</code>
     */
    boolean hasClientSecondaryKey();
    /**
     * <code>required bytes client_secondary_key = 4;</code>
     */
    com.google.protobuf.ByteString getClientSecondaryKey();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCSignedSettleAndForfeit}
   */
  public static final class HTLCSignedSettleAndForfeit extends
      com.google.protobuf.GeneratedMessage
      implements HTLCSignedSettleAndForfeitOrBuilder {
    // Use HTLCSignedSettleAndForfeit.newBuilder() to construct.
    private HTLCSignedSettleAndForfeit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCSignedSettleAndForfeit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCSignedSettleAndForfeit defaultInstance;
    public static HTLCSignedSettleAndForfeit getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCSignedSettleAndForfeit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCSignedSettleAndForfeit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              ids_.add(input.readBytes());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                signedForfeit_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction>();
                mutable_bitField0_ |= 0x00000002;
              }
              signedForfeit_.add(input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                signedSettle_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction>();
                mutable_bitField0_ |= 0x00000004;
              }
              signedSettle_.add(input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              bitField0_ |= 0x00000001;
              clientSecondaryKey_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          signedForfeit_ = java.util.Collections.unmodifiableList(signedForfeit_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          signedSettle_ = java.util.Collections.unmodifiableList(signedSettle_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedSettleAndForfeit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedSettleAndForfeit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.class, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCSignedSettleAndForfeit> PARSER =
        new com.google.protobuf.AbstractParser<HTLCSignedSettleAndForfeit>() {
      public HTLCSignedSettleAndForfeit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCSignedSettleAndForfeit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCSignedSettleAndForfeit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated bytes ids = 1;
    public static final int IDS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> ids_;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server after receiving the refund tx 
     * and the teardown hash
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getIdsList() {
      return ids_;
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server after receiving the refund tx 
     * and the teardown hash
     * </pre>
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the client to the server after receiving the refund tx 
     * and the teardown hash
     * </pre>
     */
    public com.google.protobuf.ByteString getIds(int index) {
      return ids_.get(index);
    }

    // repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;
    public static final int SIGNED_FORFEIT_FIELD_NUMBER = 2;
    private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> signedForfeit_;
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> getSignedForfeitList() {
      return signedForfeit_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
        getSignedForfeitOrBuilderList() {
      return signedForfeit_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public int getSignedForfeitCount() {
      return signedForfeit_.size();
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedForfeit(int index) {
      return signedForfeit_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedForfeitOrBuilder(
        int index) {
      return signedForfeit_.get(index);
    }

    // repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;
    public static final int SIGNED_SETTLE_FIELD_NUMBER = 3;
    private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> signedSettle_;
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> getSignedSettleList() {
      return signedSettle_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
        getSignedSettleOrBuilderList() {
      return signedSettle_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    public int getSignedSettleCount() {
      return signedSettle_.size();
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedSettle(int index) {
      return signedSettle_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedSettleOrBuilder(
        int index) {
      return signedSettle_.get(index);
    }

    // required bytes client_secondary_key = 4;
    public static final int CLIENT_SECONDARY_KEY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString clientSecondaryKey_;
    /**
     * <code>required bytes client_secondary_key = 4;</code>
     */
    public boolean hasClientSecondaryKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes client_secondary_key = 4;</code>
     */
    public com.google.protobuf.ByteString getClientSecondaryKey() {
      return clientSecondaryKey_;
    }

    private void initFields() {
      ids_ = java.util.Collections.emptyList();
      signedForfeit_ = java.util.Collections.emptyList();
      signedSettle_ = java.util.Collections.emptyList();
      clientSecondaryKey_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClientSecondaryKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSignedForfeitCount(); i++) {
        if (!getSignedForfeit(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSignedSettleCount(); i++) {
        if (!getSignedSettle(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ids_.size(); i++) {
        output.writeBytes(1, ids_.get(i));
      }
      for (int i = 0; i < signedForfeit_.size(); i++) {
        output.writeMessage(2, signedForfeit_.get(i));
      }
      for (int i = 0; i < signedSettle_.size(); i++) {
        output.writeMessage(3, signedSettle_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(4, clientSecondaryKey_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < ids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ids_.get(i));
        }
        size += dataSize;
        size += 1 * getIdsList().size();
      }
      for (int i = 0; i < signedForfeit_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, signedForfeit_.get(i));
      }
      for (int i = 0; i < signedSettle_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, signedSettle_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, clientSecondaryKey_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCSignedSettleAndForfeit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedSettleAndForfeit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedSettleAndForfeit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.class, org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSignedForfeitFieldBuilder();
          getSignedSettleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        if (signedForfeitBuilder_ == null) {
          signedForfeit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          signedForfeitBuilder_.clear();
        }
        if (signedSettleBuilder_ == null) {
          signedSettle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          signedSettleBuilder_.clear();
        }
        clientSecondaryKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSignedSettleAndForfeit_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit build() {
        org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit result = new org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ids_ = ids_;
        if (signedForfeitBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            signedForfeit_ = java.util.Collections.unmodifiableList(signedForfeit_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.signedForfeit_ = signedForfeit_;
        } else {
          result.signedForfeit_ = signedForfeitBuilder_.build();
        }
        if (signedSettleBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            signedSettle_ = java.util.Collections.unmodifiableList(signedSettle_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.signedSettle_ = signedSettle_;
        } else {
          result.signedSettle_ = signedSettleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientSecondaryKey_ = clientSecondaryKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit.getDefaultInstance()) return this;
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
        if (signedForfeitBuilder_ == null) {
          if (!other.signedForfeit_.isEmpty()) {
            if (signedForfeit_.isEmpty()) {
              signedForfeit_ = other.signedForfeit_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSignedForfeitIsMutable();
              signedForfeit_.addAll(other.signedForfeit_);
            }
            onChanged();
          }
        } else {
          if (!other.signedForfeit_.isEmpty()) {
            if (signedForfeitBuilder_.isEmpty()) {
              signedForfeitBuilder_.dispose();
              signedForfeitBuilder_ = null;
              signedForfeit_ = other.signedForfeit_;
              bitField0_ = (bitField0_ & ~0x00000002);
              signedForfeitBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSignedForfeitFieldBuilder() : null;
            } else {
              signedForfeitBuilder_.addAllMessages(other.signedForfeit_);
            }
          }
        }
        if (signedSettleBuilder_ == null) {
          if (!other.signedSettle_.isEmpty()) {
            if (signedSettle_.isEmpty()) {
              signedSettle_ = other.signedSettle_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSignedSettleIsMutable();
              signedSettle_.addAll(other.signedSettle_);
            }
            onChanged();
          }
        } else {
          if (!other.signedSettle_.isEmpty()) {
            if (signedSettleBuilder_.isEmpty()) {
              signedSettleBuilder_.dispose();
              signedSettleBuilder_ = null;
              signedSettle_ = other.signedSettle_;
              bitField0_ = (bitField0_ & ~0x00000004);
              signedSettleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSignedSettleFieldBuilder() : null;
            } else {
              signedSettleBuilder_.addAllMessages(other.signedSettle_);
            }
          }
        }
        if (other.hasClientSecondaryKey()) {
          setClientSecondaryKey(other.getClientSecondaryKey());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClientSecondaryKey()) {
          
          return false;
        }
        for (int i = 0; i < getSignedForfeitCount(); i++) {
          if (!getSignedForfeit(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSignedSettleCount(); i++) {
          if (!getSignedSettle(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCSignedSettleAndForfeit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated bytes ids = 1;
      private java.util.List<com.google.protobuf.ByteString> ids_ = java.util.Collections.emptyList();
      private void ensureIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>(ids_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server after receiving the refund tx 
       * and the teardown hash
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getIdsList() {
        return java.util.Collections.unmodifiableList(ids_);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server after receiving the refund tx 
       * and the teardown hash
       * </pre>
       */
      public int getIdsCount() {
        return ids_.size();
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server after receiving the refund tx 
       * and the teardown hash
       * </pre>
       */
      public com.google.protobuf.ByteString getIds(int index) {
        return ids_.get(index);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server after receiving the refund tx 
       * and the teardown hash
       * </pre>
       */
      public Builder setIds(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server after receiving the refund tx 
       * and the teardown hash
       * </pre>
       */
      public Builder addIds(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server after receiving the refund tx 
       * and the teardown hash
       * </pre>
       */
      public Builder addAllIds(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureIdsIsMutable();
        super.addAll(values, ids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the client to the server after receiving the refund tx 
       * and the teardown hash
       * </pre>
       */
      public Builder clearIds() {
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;
      private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> signedForfeit_ =
        java.util.Collections.emptyList();
      private void ensureSignedForfeitIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          signedForfeit_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction>(signedForfeit_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> signedForfeitBuilder_;

      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> getSignedForfeitList() {
        if (signedForfeitBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signedForfeit_);
        } else {
          return signedForfeitBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public int getSignedForfeitCount() {
        if (signedForfeitBuilder_ == null) {
          return signedForfeit_.size();
        } else {
          return signedForfeitBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedForfeit(int index) {
        if (signedForfeitBuilder_ == null) {
          return signedForfeit_.get(index);
        } else {
          return signedForfeitBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder setSignedForfeit(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedForfeitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedForfeitIsMutable();
          signedForfeit_.set(index, value);
          onChanged();
        } else {
          signedForfeitBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder setSignedForfeit(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedForfeitBuilder_ == null) {
          ensureSignedForfeitIsMutable();
          signedForfeit_.set(index, builderForValue.build());
          onChanged();
        } else {
          signedForfeitBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder addSignedForfeit(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedForfeitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedForfeitIsMutable();
          signedForfeit_.add(value);
          onChanged();
        } else {
          signedForfeitBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder addSignedForfeit(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedForfeitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedForfeitIsMutable();
          signedForfeit_.add(index, value);
          onChanged();
        } else {
          signedForfeitBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder addSignedForfeit(
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedForfeitBuilder_ == null) {
          ensureSignedForfeitIsMutable();
          signedForfeit_.add(builderForValue.build());
          onChanged();
        } else {
          signedForfeitBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder addSignedForfeit(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedForfeitBuilder_ == null) {
          ensureSignedForfeitIsMutable();
          signedForfeit_.add(index, builderForValue.build());
          onChanged();
        } else {
          signedForfeitBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder addAllSignedForfeit(
          java.lang.Iterable<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> values) {
        if (signedForfeitBuilder_ == null) {
          ensureSignedForfeitIsMutable();
          super.addAll(values, signedForfeit_);
          onChanged();
        } else {
          signedForfeitBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder clearSignedForfeit() {
        if (signedForfeitBuilder_ == null) {
          signedForfeit_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          signedForfeitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder removeSignedForfeit(int index) {
        if (signedForfeitBuilder_ == null) {
          ensureSignedForfeitIsMutable();
          signedForfeit_.remove(index);
          onChanged();
        } else {
          signedForfeitBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder getSignedForfeitBuilder(
          int index) {
        return getSignedForfeitFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedForfeitOrBuilder(
          int index) {
        if (signedForfeitBuilder_ == null) {
          return signedForfeit_.get(index);  } else {
          return signedForfeitBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
           getSignedForfeitOrBuilderList() {
        if (signedForfeitBuilder_ != null) {
          return signedForfeitBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signedForfeit_);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder addSignedForfeitBuilder() {
        return getSignedForfeitFieldBuilder().addBuilder(
            org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder addSignedForfeitBuilder(
          int index) {
        return getSignedForfeitFieldBuilder().addBuilder(
            index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder> 
           getSignedForfeitBuilderList() {
        return getSignedForfeitFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
          getSignedForfeitFieldBuilder() {
        if (signedForfeitBuilder_ == null) {
          signedForfeitBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder>(
                  signedForfeit_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          signedForfeit_ = null;
        }
        return signedForfeitBuilder_;
      }

      // repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;
      private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> signedSettle_ =
        java.util.Collections.emptyList();
      private void ensureSignedSettleIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          signedSettle_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction>(signedSettle_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> signedSettleBuilder_;

      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> getSignedSettleList() {
        if (signedSettleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signedSettle_);
        } else {
          return signedSettleBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public int getSignedSettleCount() {
        if (signedSettleBuilder_ == null) {
          return signedSettle_.size();
        } else {
          return signedSettleBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedSettle(int index) {
        if (signedSettleBuilder_ == null) {
          return signedSettle_.get(index);
        } else {
          return signedSettleBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder setSignedSettle(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedSettleIsMutable();
          signedSettle_.set(index, value);
          onChanged();
        } else {
          signedSettleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder setSignedSettle(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedSettleBuilder_ == null) {
          ensureSignedSettleIsMutable();
          signedSettle_.set(index, builderForValue.build());
          onChanged();
        } else {
          signedSettleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder addSignedSettle(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedSettleIsMutable();
          signedSettle_.add(value);
          onChanged();
        } else {
          signedSettleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder addSignedSettle(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedSettleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignedSettleIsMutable();
          signedSettle_.add(index, value);
          onChanged();
        } else {
          signedSettleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder addSignedSettle(
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedSettleBuilder_ == null) {
          ensureSignedSettleIsMutable();
          signedSettle_.add(builderForValue.build());
          onChanged();
        } else {
          signedSettleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder addSignedSettle(
          int index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedSettleBuilder_ == null) {
          ensureSignedSettleIsMutable();
          signedSettle_.add(index, builderForValue.build());
          onChanged();
        } else {
          signedSettleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder addAllSignedSettle(
          java.lang.Iterable<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction> values) {
        if (signedSettleBuilder_ == null) {
          ensureSignedSettleIsMutable();
          super.addAll(values, signedSettle_);
          onChanged();
        } else {
          signedSettleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder clearSignedSettle() {
        if (signedSettleBuilder_ == null) {
          signedSettle_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          signedSettleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public Builder removeSignedSettle(int index) {
        if (signedSettleBuilder_ == null) {
          ensureSignedSettleIsMutable();
          signedSettle_.remove(index);
          onChanged();
        } else {
          signedSettleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder getSignedSettleBuilder(
          int index) {
        return getSignedSettleFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedSettleOrBuilder(
          int index) {
        if (signedSettleBuilder_ == null) {
          return signedSettle_.get(index);  } else {
          return signedSettleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
           getSignedSettleOrBuilderList() {
        if (signedSettleBuilder_ != null) {
          return signedSettleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signedSettle_);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder addSignedSettleBuilder() {
        return getSignedSettleFieldBuilder().addBuilder(
            org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder addSignedSettleBuilder(
          int index) {
        return getSignedSettleFieldBuilder().addBuilder(
            index, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCSignedTransaction signed_settle = 3;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder> 
           getSignedSettleBuilderList() {
        return getSignedSettleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
          getSignedSettleFieldBuilder() {
        if (signedSettleBuilder_ == null) {
          signedSettleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder>(
                  signedSettle_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          signedSettle_ = null;
        }
        return signedSettleBuilder_;
      }

      // required bytes client_secondary_key = 4;
      private com.google.protobuf.ByteString clientSecondaryKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes client_secondary_key = 4;</code>
       */
      public boolean hasClientSecondaryKey() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bytes client_secondary_key = 4;</code>
       */
      public com.google.protobuf.ByteString getClientSecondaryKey() {
        return clientSecondaryKey_;
      }
      /**
       * <code>required bytes client_secondary_key = 4;</code>
       */
      public Builder setClientSecondaryKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        clientSecondaryKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes client_secondary_key = 4;</code>
       */
      public Builder clearClientSecondaryKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        clientSecondaryKey_ = getDefaultInstance().getClientSecondaryKey();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCSignedSettleAndForfeit)
    }

    static {
      defaultInstance = new HTLCSignedSettleAndForfeit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCSignedSettleAndForfeit)
  }

  public interface HTLCSetupCompleteOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated bytes ids = 1;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to ACK the successful HTLC setup
     * </pre>
     */
    java.util.List<com.google.protobuf.ByteString> getIdsList();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to ACK the successful HTLC setup
     * </pre>
     */
    int getIdsCount();
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to ACK the successful HTLC setup
     * </pre>
     */
    com.google.protobuf.ByteString getIds(int index);
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCSetupComplete}
   */
  public static final class HTLCSetupComplete extends
      com.google.protobuf.GeneratedMessage
      implements HTLCSetupCompleteOrBuilder {
    // Use HTLCSetupComplete.newBuilder() to construct.
    private HTLCSetupComplete(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCSetupComplete(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCSetupComplete defaultInstance;
    public static HTLCSetupComplete getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCSetupComplete getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCSetupComplete(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              ids_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSetupComplete_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSetupComplete_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.class, org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCSetupComplete> PARSER =
        new com.google.protobuf.AbstractParser<HTLCSetupComplete>() {
      public HTLCSetupComplete parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCSetupComplete(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCSetupComplete> getParserForType() {
      return PARSER;
    }

    // repeated bytes ids = 1;
    public static final int IDS_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> ids_;
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to ACK the successful HTLC setup
     * </pre>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getIdsList() {
      return ids_;
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to ACK the successful HTLC setup
     * </pre>
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <code>repeated bytes ids = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to ACK the successful HTLC setup
     * </pre>
     */
    public com.google.protobuf.ByteString getIds(int index) {
      return ids_.get(index);
    }

    private void initFields() {
      ids_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < ids_.size(); i++) {
        output.writeBytes(1, ids_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < ids_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ids_.get(i));
        }
        size += dataSize;
        size += 1 * getIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCSetupComplete prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCSetupComplete}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCSetupCompleteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSetupComplete_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSetupComplete_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.class, org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCSetupComplete_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSetupComplete getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSetupComplete build() {
        org.bitcoin.paymentchannel.Protos.HTLCSetupComplete result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCSetupComplete buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCSetupComplete result = new org.bitcoin.paymentchannel.Protos.HTLCSetupComplete(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = java.util.Collections.unmodifiableList(ids_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.ids_ = ids_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCSetupComplete) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCSetupComplete)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCSetupComplete other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCSetupComplete.getDefaultInstance()) return this;
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCSetupComplete parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCSetupComplete) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated bytes ids = 1;
      private java.util.List<com.google.protobuf.ByteString> ids_ = java.util.Collections.emptyList();
      private void ensureIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          ids_ = new java.util.ArrayList<com.google.protobuf.ByteString>(ids_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to ACK the successful HTLC setup
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getIdsList() {
        return java.util.Collections.unmodifiableList(ids_);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to ACK the successful HTLC setup
       * </pre>
       */
      public int getIdsCount() {
        return ids_.size();
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to ACK the successful HTLC setup
       * </pre>
       */
      public com.google.protobuf.ByteString getIds(int index) {
        return ids_.get(index);
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to ACK the successful HTLC setup
       * </pre>
       */
      public Builder setIds(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to ACK the successful HTLC setup
       * </pre>
       */
      public Builder addIds(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to ACK the successful HTLC setup
       * </pre>
       */
      public Builder addAllIds(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureIdsIsMutable();
        super.addAll(values, ids_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes ids = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to ACK the successful HTLC setup
       * </pre>
       */
      public Builder clearIds() {
        ids_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCSetupComplete)
    }

    static {
      defaultInstance = new HTLCSetupComplete(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCSetupComplete)
  }

  public interface HTLCRevealSecretOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes id = 1;
    /**
     * <code>required bytes id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required bytes id = 1;</code>
     */
    com.google.protobuf.ByteString getId();

    // required bytes secret = 2;
    /**
     * <code>required bytes secret = 2;</code>
     */
    boolean hasSecret();
    /**
     * <code>required bytes secret = 2;</code>
     */
    com.google.protobuf.ByteString getSecret();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCRevealSecret}
   */
  public static final class HTLCRevealSecret extends
      com.google.protobuf.GeneratedMessage
      implements HTLCRevealSecretOrBuilder {
    // Use HTLCRevealSecret.newBuilder() to construct.
    private HTLCRevealSecret(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCRevealSecret(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCRevealSecret defaultInstance;
    public static HTLCRevealSecret getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCRevealSecret getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCRevealSecret(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              secret_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRevealSecret_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRevealSecret_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.class, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCRevealSecret> PARSER =
        new com.google.protobuf.AbstractParser<HTLCRevealSecret>() {
      public HTLCRevealSecret parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCRevealSecret(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCRevealSecret> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString id_;
    /**
     * <code>required bytes id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes id = 1;</code>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    // required bytes secret = 2;
    public static final int SECRET_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString secret_;
    /**
     * <code>required bytes secret = 2;</code>
     */
    public boolean hasSecret() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes secret = 2;</code>
     */
    public com.google.protobuf.ByteString getSecret() {
      return secret_;
    }

    private void initFields() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      secret_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecret()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, secret_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, secret_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCRevealSecret prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCRevealSecret}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRevealSecret_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRevealSecret_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.class, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        secret_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCRevealSecret_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret build() {
        org.bitcoin.paymentchannel.Protos.HTLCRevealSecret result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCRevealSecret result = new org.bitcoin.paymentchannel.Protos.HTLCRevealSecret(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.secret_ = secret_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCRevealSecret) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCRevealSecret)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCRevealSecret other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasSecret()) {
          setSecret(other.getSecret());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasSecret()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCRevealSecret parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCRevealSecret) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes id = 1;
      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes id = 1;</code>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <code>required bytes id = 1;</code>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      // required bytes secret = 2;
      private com.google.protobuf.ByteString secret_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes secret = 2;</code>
       */
      public boolean hasSecret() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes secret = 2;</code>
       */
      public com.google.protobuf.ByteString getSecret() {
        return secret_;
      }
      /**
       * <code>required bytes secret = 2;</code>
       */
      public Builder setSecret(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        secret_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes secret = 2;</code>
       */
      public Builder clearSecret() {
        bitField0_ = (bitField0_ & ~0x00000002);
        secret_ = getDefaultInstance().getSecret();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCRevealSecret)
    }

    static {
      defaultInstance = new HTLCRevealSecret(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCRevealSecret)
  }

  public interface HTLCBackOffOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes id = 1;
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * back off, close and return money to client
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * back off, close and return money to client
     * </pre>
     */
    com.google.protobuf.ByteString getId();

    // required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    boolean hasSignedForfeit();
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedForfeit();
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedForfeitOrBuilder();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCBackOff}
   */
  public static final class HTLCBackOff extends
      com.google.protobuf.GeneratedMessage
      implements HTLCBackOffOrBuilder {
    // Use HTLCBackOff.newBuilder() to construct.
    private HTLCBackOff(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCBackOff(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCBackOff defaultInstance;
    public static HTLCBackOff getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCBackOff getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCBackOff(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 18: {
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = signedForfeit_.toBuilder();
              }
              signedForfeit_ = input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signedForfeit_);
                signedForfeit_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCBackOff_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCBackOff_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCBackOff.class, org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCBackOff> PARSER =
        new com.google.protobuf.AbstractParser<HTLCBackOff>() {
      public HTLCBackOff parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCBackOff(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCBackOff> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString id_;
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * back off, close and return money to client
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * back off, close and return money to client
     * </pre>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    // required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;
    public static final int SIGNED_FORFEIT_FIELD_NUMBER = 2;
    private org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction signedForfeit_;
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public boolean hasSignedForfeit() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedForfeit() {
      return signedForfeit_;
    }
    /**
     * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedForfeitOrBuilder() {
      return signedForfeit_;
    }

    private void initFields() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      signedForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignedForfeit()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSignedForfeit().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, signedForfeit_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, signedForfeit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCBackOff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCBackOff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCBackOff}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCBackOff_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCBackOff_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCBackOff.class, org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCBackOff.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSignedForfeitFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (signedForfeitBuilder_ == null) {
          signedForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
        } else {
          signedForfeitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCBackOff_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCBackOff getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCBackOff.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCBackOff build() {
        org.bitcoin.paymentchannel.Protos.HTLCBackOff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCBackOff buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCBackOff result = new org.bitcoin.paymentchannel.Protos.HTLCBackOff(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (signedForfeitBuilder_ == null) {
          result.signedForfeit_ = signedForfeit_;
        } else {
          result.signedForfeit_ = signedForfeitBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCBackOff) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCBackOff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCBackOff other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCBackOff.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasSignedForfeit()) {
          mergeSignedForfeit(other.getSignedForfeit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasSignedForfeit()) {
          
          return false;
        }
        if (!getSignedForfeit().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCBackOff parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCBackOff) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes id = 1;
      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * back off, close and return money to client
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * back off, close and return money to client
       * </pre>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * back off, close and return money to client
       * </pre>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * back off, close and return money to client
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      // required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;
      private org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction signedForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> signedForfeitBuilder_;
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public boolean hasSignedForfeit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction getSignedForfeit() {
        if (signedForfeitBuilder_ == null) {
          return signedForfeit_;
        } else {
          return signedForfeitBuilder_.getMessage();
        }
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder setSignedForfeit(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedForfeitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signedForfeit_ = value;
          onChanged();
        } else {
          signedForfeitBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder setSignedForfeit(
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder builderForValue) {
        if (signedForfeitBuilder_ == null) {
          signedForfeit_ = builderForValue.build();
          onChanged();
        } else {
          signedForfeitBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder mergeSignedForfeit(org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction value) {
        if (signedForfeitBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              signedForfeit_ != org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance()) {
            signedForfeit_ =
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.newBuilder(signedForfeit_).mergeFrom(value).buildPartial();
          } else {
            signedForfeit_ = value;
          }
          onChanged();
        } else {
          signedForfeitBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public Builder clearSignedForfeit() {
        if (signedForfeitBuilder_ == null) {
          signedForfeit_ = org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.getDefaultInstance();
          onChanged();
        } else {
          signedForfeitBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder getSignedForfeitBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSignedForfeitFieldBuilder().getBuilder();
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder getSignedForfeitOrBuilder() {
        if (signedForfeitBuilder_ != null) {
          return signedForfeitBuilder_.getMessageOrBuilder();
        } else {
          return signedForfeit_;
        }
      }
      /**
       * <code>required .paymentchannels.HTLCSignedTransaction signed_forfeit = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder> 
          getSignedForfeitFieldBuilder() {
        if (signedForfeitBuilder_ == null) {
          signedForfeitBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction, org.bitcoin.paymentchannel.Protos.HTLCSignedTransaction.Builder, org.bitcoin.paymentchannel.Protos.HTLCSignedTransactionOrBuilder>(
                  signedForfeit_,
                  getParentForChildren(),
                  isClean());
          signedForfeit_ = null;
        }
        return signedForfeitBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCBackOff)
    }

    static {
      defaultInstance = new HTLCBackOff(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCBackOff)
  }

  public interface HTLCServerUpdateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    java.util.List<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret> 
        getRevealSecretsList();
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRevealSecret getRevealSecrets(int index);
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    int getRevealSecretsCount();
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder> 
        getRevealSecretsOrBuilderList();
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder getRevealSecretsOrBuilder(
        int index);

    // repeated .paymentchannels.HTLCBackOff back_offs = 2;
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    java.util.List<org.bitcoin.paymentchannel.Protos.HTLCBackOff> 
        getBackOffsList();
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCBackOff getBackOffs(int index);
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    int getBackOffsCount();
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder> 
        getBackOffsOrBuilderList();
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder getBackOffsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCServerUpdate}
   */
  public static final class HTLCServerUpdate extends
      com.google.protobuf.GeneratedMessage
      implements HTLCServerUpdateOrBuilder {
    // Use HTLCServerUpdate.newBuilder() to construct.
    private HTLCServerUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCServerUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCServerUpdate defaultInstance;
    public static HTLCServerUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCServerUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCServerUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                revealSecrets_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret>();
                mutable_bitField0_ |= 0x00000001;
              }
              revealSecrets_.add(input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                backOffs_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCBackOff>();
                mutable_bitField0_ |= 0x00000002;
              }
              backOffs_.add(input.readMessage(org.bitcoin.paymentchannel.Protos.HTLCBackOff.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          revealSecrets_ = java.util.Collections.unmodifiableList(revealSecrets_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          backOffs_ = java.util.Collections.unmodifiableList(backOffs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCServerUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCServerUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.class, org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCServerUpdate> PARSER =
        new com.google.protobuf.AbstractParser<HTLCServerUpdate>() {
      public HTLCServerUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCServerUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCServerUpdate> getParserForType() {
      return PARSER;
    }

    // repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;
    public static final int REVEAL_SECRETS_FIELD_NUMBER = 1;
    private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret> revealSecrets_;
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret> getRevealSecretsList() {
      return revealSecrets_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder> 
        getRevealSecretsOrBuilderList() {
      return revealSecrets_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    public int getRevealSecretsCount() {
      return revealSecrets_.size();
    }
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret getRevealSecrets(int index) {
      return revealSecrets_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
     *
     * <pre>
     * This is sent by the server to the client to update (either reveal secrets
     * or back-off from certain opened HTLC outputs)
     * </pre>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder getRevealSecretsOrBuilder(
        int index) {
      return revealSecrets_.get(index);
    }

    // repeated .paymentchannels.HTLCBackOff back_offs = 2;
    public static final int BACK_OFFS_FIELD_NUMBER = 2;
    private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCBackOff> backOffs_;
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCBackOff> getBackOffsList() {
      return backOffs_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder> 
        getBackOffsOrBuilderList() {
      return backOffs_;
    }
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    public int getBackOffsCount() {
      return backOffs_.size();
    }
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCBackOff getBackOffs(int index) {
      return backOffs_.get(index);
    }
    /**
     * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder getBackOffsOrBuilder(
        int index) {
      return backOffs_.get(index);
    }

    private void initFields() {
      revealSecrets_ = java.util.Collections.emptyList();
      backOffs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getRevealSecretsCount(); i++) {
        if (!getRevealSecrets(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBackOffsCount(); i++) {
        if (!getBackOffs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < revealSecrets_.size(); i++) {
        output.writeMessage(1, revealSecrets_.get(i));
      }
      for (int i = 0; i < backOffs_.size(); i++) {
        output.writeMessage(2, backOffs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < revealSecrets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, revealSecrets_.get(i));
      }
      for (int i = 0; i < backOffs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, backOffs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCServerUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCServerUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCServerUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCServerUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCServerUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.class, org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRevealSecretsFieldBuilder();
          getBackOffsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (revealSecretsBuilder_ == null) {
          revealSecrets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          revealSecretsBuilder_.clear();
        }
        if (backOffsBuilder_ == null) {
          backOffs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          backOffsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCServerUpdate_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCServerUpdate getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCServerUpdate build() {
        org.bitcoin.paymentchannel.Protos.HTLCServerUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCServerUpdate buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCServerUpdate result = new org.bitcoin.paymentchannel.Protos.HTLCServerUpdate(this);
        int from_bitField0_ = bitField0_;
        if (revealSecretsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            revealSecrets_ = java.util.Collections.unmodifiableList(revealSecrets_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.revealSecrets_ = revealSecrets_;
        } else {
          result.revealSecrets_ = revealSecretsBuilder_.build();
        }
        if (backOffsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            backOffs_ = java.util.Collections.unmodifiableList(backOffs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.backOffs_ = backOffs_;
        } else {
          result.backOffs_ = backOffsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCServerUpdate) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCServerUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCServerUpdate other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCServerUpdate.getDefaultInstance()) return this;
        if (revealSecretsBuilder_ == null) {
          if (!other.revealSecrets_.isEmpty()) {
            if (revealSecrets_.isEmpty()) {
              revealSecrets_ = other.revealSecrets_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRevealSecretsIsMutable();
              revealSecrets_.addAll(other.revealSecrets_);
            }
            onChanged();
          }
        } else {
          if (!other.revealSecrets_.isEmpty()) {
            if (revealSecretsBuilder_.isEmpty()) {
              revealSecretsBuilder_.dispose();
              revealSecretsBuilder_ = null;
              revealSecrets_ = other.revealSecrets_;
              bitField0_ = (bitField0_ & ~0x00000001);
              revealSecretsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRevealSecretsFieldBuilder() : null;
            } else {
              revealSecretsBuilder_.addAllMessages(other.revealSecrets_);
            }
          }
        }
        if (backOffsBuilder_ == null) {
          if (!other.backOffs_.isEmpty()) {
            if (backOffs_.isEmpty()) {
              backOffs_ = other.backOffs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureBackOffsIsMutable();
              backOffs_.addAll(other.backOffs_);
            }
            onChanged();
          }
        } else {
          if (!other.backOffs_.isEmpty()) {
            if (backOffsBuilder_.isEmpty()) {
              backOffsBuilder_.dispose();
              backOffsBuilder_ = null;
              backOffs_ = other.backOffs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              backOffsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBackOffsFieldBuilder() : null;
            } else {
              backOffsBuilder_.addAllMessages(other.backOffs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getRevealSecretsCount(); i++) {
          if (!getRevealSecrets(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBackOffsCount(); i++) {
          if (!getBackOffs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCServerUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCServerUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;
      private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret> revealSecrets_ =
        java.util.Collections.emptyList();
      private void ensureRevealSecretsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          revealSecrets_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret>(revealSecrets_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRevealSecret, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder, org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder> revealSecretsBuilder_;

      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret> getRevealSecretsList() {
        if (revealSecretsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(revealSecrets_);
        } else {
          return revealSecretsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public int getRevealSecretsCount() {
        if (revealSecretsBuilder_ == null) {
          return revealSecrets_.size();
        } else {
          return revealSecretsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret getRevealSecrets(int index) {
        if (revealSecretsBuilder_ == null) {
          return revealSecrets_.get(index);
        } else {
          return revealSecretsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder setRevealSecrets(
          int index, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret value) {
        if (revealSecretsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRevealSecretsIsMutable();
          revealSecrets_.set(index, value);
          onChanged();
        } else {
          revealSecretsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder setRevealSecrets(
          int index, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder builderForValue) {
        if (revealSecretsBuilder_ == null) {
          ensureRevealSecretsIsMutable();
          revealSecrets_.set(index, builderForValue.build());
          onChanged();
        } else {
          revealSecretsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder addRevealSecrets(org.bitcoin.paymentchannel.Protos.HTLCRevealSecret value) {
        if (revealSecretsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRevealSecretsIsMutable();
          revealSecrets_.add(value);
          onChanged();
        } else {
          revealSecretsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder addRevealSecrets(
          int index, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret value) {
        if (revealSecretsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRevealSecretsIsMutable();
          revealSecrets_.add(index, value);
          onChanged();
        } else {
          revealSecretsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder addRevealSecrets(
          org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder builderForValue) {
        if (revealSecretsBuilder_ == null) {
          ensureRevealSecretsIsMutable();
          revealSecrets_.add(builderForValue.build());
          onChanged();
        } else {
          revealSecretsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder addRevealSecrets(
          int index, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder builderForValue) {
        if (revealSecretsBuilder_ == null) {
          ensureRevealSecretsIsMutable();
          revealSecrets_.add(index, builderForValue.build());
          onChanged();
        } else {
          revealSecretsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder addAllRevealSecrets(
          java.lang.Iterable<? extends org.bitcoin.paymentchannel.Protos.HTLCRevealSecret> values) {
        if (revealSecretsBuilder_ == null) {
          ensureRevealSecretsIsMutable();
          super.addAll(values, revealSecrets_);
          onChanged();
        } else {
          revealSecretsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder clearRevealSecrets() {
        if (revealSecretsBuilder_ == null) {
          revealSecrets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          revealSecretsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public Builder removeRevealSecrets(int index) {
        if (revealSecretsBuilder_ == null) {
          ensureRevealSecretsIsMutable();
          revealSecrets_.remove(index);
          onChanged();
        } else {
          revealSecretsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder getRevealSecretsBuilder(
          int index) {
        return getRevealSecretsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder getRevealSecretsOrBuilder(
          int index) {
        if (revealSecretsBuilder_ == null) {
          return revealSecrets_.get(index);  } else {
          return revealSecretsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder> 
           getRevealSecretsOrBuilderList() {
        if (revealSecretsBuilder_ != null) {
          return revealSecretsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(revealSecrets_);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder addRevealSecretsBuilder() {
        return getRevealSecretsFieldBuilder().addBuilder(
            org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder addRevealSecretsBuilder(
          int index) {
        return getRevealSecretsFieldBuilder().addBuilder(
            index, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCRevealSecret reveal_secrets = 1;</code>
       *
       * <pre>
       * This is sent by the server to the client to update (either reveal secrets
       * or back-off from certain opened HTLC outputs)
       * </pre>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder> 
           getRevealSecretsBuilderList() {
        return getRevealSecretsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCRevealSecret, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder, org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder> 
          getRevealSecretsFieldBuilder() {
        if (revealSecretsBuilder_ == null) {
          revealSecretsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCRevealSecret, org.bitcoin.paymentchannel.Protos.HTLCRevealSecret.Builder, org.bitcoin.paymentchannel.Protos.HTLCRevealSecretOrBuilder>(
                  revealSecrets_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          revealSecrets_ = null;
        }
        return revealSecretsBuilder_;
      }

      // repeated .paymentchannels.HTLCBackOff back_offs = 2;
      private java.util.List<org.bitcoin.paymentchannel.Protos.HTLCBackOff> backOffs_ =
        java.util.Collections.emptyList();
      private void ensureBackOffsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          backOffs_ = new java.util.ArrayList<org.bitcoin.paymentchannel.Protos.HTLCBackOff>(backOffs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCBackOff, org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder, org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder> backOffsBuilder_;

      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCBackOff> getBackOffsList() {
        if (backOffsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(backOffs_);
        } else {
          return backOffsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public int getBackOffsCount() {
        if (backOffsBuilder_ == null) {
          return backOffs_.size();
        } else {
          return backOffsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCBackOff getBackOffs(int index) {
        if (backOffsBuilder_ == null) {
          return backOffs_.get(index);
        } else {
          return backOffsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder setBackOffs(
          int index, org.bitcoin.paymentchannel.Protos.HTLCBackOff value) {
        if (backOffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBackOffsIsMutable();
          backOffs_.set(index, value);
          onChanged();
        } else {
          backOffsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder setBackOffs(
          int index, org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder builderForValue) {
        if (backOffsBuilder_ == null) {
          ensureBackOffsIsMutable();
          backOffs_.set(index, builderForValue.build());
          onChanged();
        } else {
          backOffsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder addBackOffs(org.bitcoin.paymentchannel.Protos.HTLCBackOff value) {
        if (backOffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBackOffsIsMutable();
          backOffs_.add(value);
          onChanged();
        } else {
          backOffsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder addBackOffs(
          int index, org.bitcoin.paymentchannel.Protos.HTLCBackOff value) {
        if (backOffsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBackOffsIsMutable();
          backOffs_.add(index, value);
          onChanged();
        } else {
          backOffsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder addBackOffs(
          org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder builderForValue) {
        if (backOffsBuilder_ == null) {
          ensureBackOffsIsMutable();
          backOffs_.add(builderForValue.build());
          onChanged();
        } else {
          backOffsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder addBackOffs(
          int index, org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder builderForValue) {
        if (backOffsBuilder_ == null) {
          ensureBackOffsIsMutable();
          backOffs_.add(index, builderForValue.build());
          onChanged();
        } else {
          backOffsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder addAllBackOffs(
          java.lang.Iterable<? extends org.bitcoin.paymentchannel.Protos.HTLCBackOff> values) {
        if (backOffsBuilder_ == null) {
          ensureBackOffsIsMutable();
          super.addAll(values, backOffs_);
          onChanged();
        } else {
          backOffsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder clearBackOffs() {
        if (backOffsBuilder_ == null) {
          backOffs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          backOffsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public Builder removeBackOffs(int index) {
        if (backOffsBuilder_ == null) {
          ensureBackOffsIsMutable();
          backOffs_.remove(index);
          onChanged();
        } else {
          backOffsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder getBackOffsBuilder(
          int index) {
        return getBackOffsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder getBackOffsOrBuilder(
          int index) {
        if (backOffsBuilder_ == null) {
          return backOffs_.get(index);  } else {
          return backOffsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public java.util.List<? extends org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder> 
           getBackOffsOrBuilderList() {
        if (backOffsBuilder_ != null) {
          return backOffsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(backOffs_);
        }
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder addBackOffsBuilder() {
        return getBackOffsFieldBuilder().addBuilder(
            org.bitcoin.paymentchannel.Protos.HTLCBackOff.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder addBackOffsBuilder(
          int index) {
        return getBackOffsFieldBuilder().addBuilder(
            index, org.bitcoin.paymentchannel.Protos.HTLCBackOff.getDefaultInstance());
      }
      /**
       * <code>repeated .paymentchannels.HTLCBackOff back_offs = 2;</code>
       */
      public java.util.List<org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder> 
           getBackOffsBuilderList() {
        return getBackOffsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.bitcoin.paymentchannel.Protos.HTLCBackOff, org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder, org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder> 
          getBackOffsFieldBuilder() {
        if (backOffsBuilder_ == null) {
          backOffsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.bitcoin.paymentchannel.Protos.HTLCBackOff, org.bitcoin.paymentchannel.Protos.HTLCBackOff.Builder, org.bitcoin.paymentchannel.Protos.HTLCBackOffOrBuilder>(
                  backOffs_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          backOffs_ = null;
        }
        return backOffsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCServerUpdate)
    }

    static {
      defaultInstance = new HTLCServerUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCServerUpdate)
  }

  public interface HTLCPaymentAckOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required bytes id = 1;
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * Sent by the server to the client to ack that the HTLC is confirmed
     * </pre>
     */
    boolean hasId();
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * Sent by the server to the client to ack that the HTLC is confirmed
     * </pre>
     */
    com.google.protobuf.ByteString getId();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCPaymentAck}
   */
  public static final class HTLCPaymentAck extends
      com.google.protobuf.GeneratedMessage
      implements HTLCPaymentAckOrBuilder {
    // Use HTLCPaymentAck.newBuilder() to construct.
    private HTLCPaymentAck(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCPaymentAck(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCPaymentAck defaultInstance;
    public static HTLCPaymentAck getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCPaymentAck getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCPaymentAck(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentAck_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentAck_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.class, org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCPaymentAck> PARSER =
        new com.google.protobuf.AbstractParser<HTLCPaymentAck>() {
      public HTLCPaymentAck parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCPaymentAck(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCPaymentAck> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required bytes id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString id_;
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * Sent by the server to the client to ack that the HTLC is confirmed
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes id = 1;</code>
     *
     * <pre>
     * Sent by the server to the client to ack that the HTLC is confirmed
     * </pre>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    private void initFields() {
      id_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, id_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCPaymentAck prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCPaymentAck}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCPaymentAckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentAck_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentAck_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.class, org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCPaymentAck_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPaymentAck getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPaymentAck build() {
        org.bitcoin.paymentchannel.Protos.HTLCPaymentAck result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCPaymentAck buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCPaymentAck result = new org.bitcoin.paymentchannel.Protos.HTLCPaymentAck(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCPaymentAck) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCPaymentAck)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCPaymentAck other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCPaymentAck.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCPaymentAck parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCPaymentAck) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required bytes id = 1;
      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * Sent by the server to the client to ack that the HTLC is confirmed
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * Sent by the server to the client to ack that the HTLC is confirmed
       * </pre>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * Sent by the server to the client to ack that the HTLC is confirmed
       * </pre>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes id = 1;</code>
       *
       * <pre>
       * Sent by the server to the client to ack that the HTLC is confirmed
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCPaymentAck)
    }

    static {
      defaultInstance = new HTLCPaymentAck(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCPaymentAck)
  }

  public interface HTLCFlowOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .paymentchannels.HTLCFlow.FlowType type = 1;
    /**
     * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
     */
    org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType getType();
  }
  /**
   * Protobuf type {@code paymentchannels.HTLCFlow}
   */
  public static final class HTLCFlow extends
      com.google.protobuf.GeneratedMessage
      implements HTLCFlowOrBuilder {
    // Use HTLCFlow.newBuilder() to construct.
    private HTLCFlow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private HTLCFlow(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final HTLCFlow defaultInstance;
    public static HTLCFlow getDefaultInstance() {
      return defaultInstance;
    }

    public HTLCFlow getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private HTLCFlow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType value = org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCFlow_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCFlow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.HTLCFlow.class, org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder.class);
    }

    public static com.google.protobuf.Parser<HTLCFlow> PARSER =
        new com.google.protobuf.AbstractParser<HTLCFlow>() {
      public HTLCFlow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HTLCFlow(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<HTLCFlow> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code paymentchannels.HTLCFlow.FlowType}
     */
    public enum FlowType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NODE_STATS = 1;</code>
       */
      NODE_STATS(0, 1),
      /**
       * <code>SENSOR_STATS = 2;</code>
       */
      SENSOR_STATS(1, 2),
      ;

      /**
       * <code>NODE_STATS = 1;</code>
       */
      public static final int NODE_STATS_VALUE = 1;
      /**
       * <code>SENSOR_STATS = 2;</code>
       */
      public static final int SENSOR_STATS_VALUE = 2;


      public final int getNumber() { return value; }

      public static FlowType valueOf(int value) {
        switch (value) {
          case 1: return NODE_STATS;
          case 2: return SENSOR_STATS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FlowType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<FlowType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FlowType>() {
              public FlowType findValueByNumber(int number) {
                return FlowType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.HTLCFlow.getDescriptor().getEnumTypes().get(0);
      }

      private static final FlowType[] VALUES = values();

      public static FlowType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private FlowType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:paymentchannels.HTLCFlow.FlowType)
    }

    private int bitField0_;
    // required .paymentchannels.HTLCFlow.FlowType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType type_;
    /**
     * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
     */
    public org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType getType() {
      return type_;
    }

    private void initFields() {
      type_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType.NODE_STATS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.HTLCFlow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.HTLCFlow prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.HTLCFlow}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.HTLCFlowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCFlow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCFlow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.HTLCFlow.class, org.bitcoin.paymentchannel.Protos.HTLCFlow.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.HTLCFlow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType.NODE_STATS;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_HTLCFlow_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCFlow getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.HTLCFlow.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.HTLCFlow build() {
        org.bitcoin.paymentchannel.Protos.HTLCFlow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.HTLCFlow buildPartial() {
        org.bitcoin.paymentchannel.Protos.HTLCFlow result = new org.bitcoin.paymentchannel.Protos.HTLCFlow(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.HTLCFlow) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.HTLCFlow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.HTLCFlow other) {
        if (other == org.bitcoin.paymentchannel.Protos.HTLCFlow.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.HTLCFlow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.HTLCFlow) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .paymentchannels.HTLCFlow.FlowType type = 1;
      private org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType type_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType.NODE_STATS;
      /**
       * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
       */
      public org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType getType() {
        return type_;
      }
      /**
       * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
       */
      public Builder setType(org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .paymentchannels.HTLCFlow.FlowType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.bitcoin.paymentchannel.Protos.HTLCFlow.FlowType.NODE_STATS;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.HTLCFlow)
    }

    static {
      defaultInstance = new HTLCFlow(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.HTLCFlow)
  }

  public interface ErrorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];
    /**
     * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
     */
    boolean hasCode();
    /**
     * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
     */
    org.bitcoin.paymentchannel.Protos.Error.ErrorCode getCode();

    // optional string explanation = 2;
    /**
     * <code>optional string explanation = 2;</code>
     *
     * <pre>
     * NOT SAFE FOR HTML WITHOUT ESCAPING
     * </pre>
     */
    boolean hasExplanation();
    /**
     * <code>optional string explanation = 2;</code>
     *
     * <pre>
     * NOT SAFE FOR HTML WITHOUT ESCAPING
     * </pre>
     */
    java.lang.String getExplanation();
    /**
     * <code>optional string explanation = 2;</code>
     *
     * <pre>
     * NOT SAFE FOR HTML WITHOUT ESCAPING
     * </pre>
     */
    com.google.protobuf.ByteString
        getExplanationBytes();

    // optional uint64 expected_value = 3;
    /**
     * <code>optional uint64 expected_value = 3;</code>
     *
     * <pre>
     * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
     * </pre>
     */
    boolean hasExpectedValue();
    /**
     * <code>optional uint64 expected_value = 3;</code>
     *
     * <pre>
     * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
     * </pre>
     */
    long getExpectedValue();
  }
  /**
   * Protobuf type {@code paymentchannels.Error}
   *
   * <pre>
   * An Error can be sent by either party at any time
   * Both parties should make an effort to send either an ERROR or a CLOSE immediately before
   * closing the socket (unless they just received an ERROR or a CLOSE)
   * </pre>
   */
  public static final class Error extends
      com.google.protobuf.GeneratedMessage
      implements ErrorOrBuilder {
    // Use Error.newBuilder() to construct.
    private Error(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Error(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Error defaultInstance;
    public static Error getDefaultInstance() {
      return defaultInstance;
    }

    public Error getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Error(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.bitcoin.paymentchannel.Protos.Error.ErrorCode value = org.bitcoin.paymentchannel.Protos.Error.ErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                code_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              explanation_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              expectedValue_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Error_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Error_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.bitcoin.paymentchannel.Protos.Error.class, org.bitcoin.paymentchannel.Protos.Error.Builder.class);
    }

    public static com.google.protobuf.Parser<Error> PARSER =
        new com.google.protobuf.AbstractParser<Error>() {
      public Error parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Error(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Error> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code paymentchannels.Error.ErrorCode}
     */
    public enum ErrorCode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TIMEOUT = 1;</code>
       *
       * <pre>
       * Protocol timeout occurred (one party hung).
       * </pre>
       */
      TIMEOUT(0, 1),
      /**
       * <code>SYNTAX_ERROR = 2;</code>
       *
       * <pre>
       * Generic error indicating some message was not properly
       * </pre>
       */
      SYNTAX_ERROR(1, 2),
      /**
       * <code>NO_ACCEPTABLE_VERSION = 3;</code>
       *
       * <pre>
       * formatted or was out of order.
       * </pre>
       */
      NO_ACCEPTABLE_VERSION(2, 3),
      /**
       * <code>BAD_TRANSACTION = 4;</code>
       *
       * <pre>
       * A provided transaction was not in the proper structure
       * </pre>
       */
      BAD_TRANSACTION(3, 4),
      /**
       * <code>TIME_WINDOW_UNACCEPTABLE = 5;</code>
       *
       * <pre>
       * (wrong inputs/outputs, sequence, lock time, signature,
       * etc)
       * </pre>
       */
      TIME_WINDOW_UNACCEPTABLE(4, 5),
      /**
       * <code>CHANNEL_VALUE_TOO_LARGE = 6;</code>
       *
       * <pre>
       * for the primary
       * </pre>
       */
      CHANNEL_VALUE_TOO_LARGE(5, 6),
      /**
       * <code>MIN_PAYMENT_TOO_LARGE = 7;</code>
       *
       * <pre>
       * too large for the primary
       * </pre>
       */
      MIN_PAYMENT_TOO_LARGE(6, 7),
      /**
       * <code>OTHER = 8;</code>
       */
      OTHER(7, 8),
      ;

      /**
       * <code>TIMEOUT = 1;</code>
       *
       * <pre>
       * Protocol timeout occurred (one party hung).
       * </pre>
       */
      public static final int TIMEOUT_VALUE = 1;
      /**
       * <code>SYNTAX_ERROR = 2;</code>
       *
       * <pre>
       * Generic error indicating some message was not properly
       * </pre>
       */
      public static final int SYNTAX_ERROR_VALUE = 2;
      /**
       * <code>NO_ACCEPTABLE_VERSION = 3;</code>
       *
       * <pre>
       * formatted or was out of order.
       * </pre>
       */
      public static final int NO_ACCEPTABLE_VERSION_VALUE = 3;
      /**
       * <code>BAD_TRANSACTION = 4;</code>
       *
       * <pre>
       * A provided transaction was not in the proper structure
       * </pre>
       */
      public static final int BAD_TRANSACTION_VALUE = 4;
      /**
       * <code>TIME_WINDOW_UNACCEPTABLE = 5;</code>
       *
       * <pre>
       * (wrong inputs/outputs, sequence, lock time, signature,
       * etc)
       * </pre>
       */
      public static final int TIME_WINDOW_UNACCEPTABLE_VALUE = 5;
      /**
       * <code>CHANNEL_VALUE_TOO_LARGE = 6;</code>
       *
       * <pre>
       * for the primary
       * </pre>
       */
      public static final int CHANNEL_VALUE_TOO_LARGE_VALUE = 6;
      /**
       * <code>MIN_PAYMENT_TOO_LARGE = 7;</code>
       *
       * <pre>
       * too large for the primary
       * </pre>
       */
      public static final int MIN_PAYMENT_TOO_LARGE_VALUE = 7;
      /**
       * <code>OTHER = 8;</code>
       */
      public static final int OTHER_VALUE = 8;


      public final int getNumber() { return value; }

      public static ErrorCode valueOf(int value) {
        switch (value) {
          case 1: return TIMEOUT;
          case 2: return SYNTAX_ERROR;
          case 3: return NO_ACCEPTABLE_VERSION;
          case 4: return BAD_TRANSACTION;
          case 5: return TIME_WINDOW_UNACCEPTABLE;
          case 6: return CHANNEL_VALUE_TOO_LARGE;
          case 7: return MIN_PAYMENT_TOO_LARGE;
          case 8: return OTHER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
              public ErrorCode findValueByNumber(int number) {
                return ErrorCode.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.Error.getDescriptor().getEnumTypes().get(0);
      }

      private static final ErrorCode[] VALUES = values();

      public static ErrorCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ErrorCode(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:paymentchannels.Error.ErrorCode)
    }

    private int bitField0_;
    // optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];
    public static final int CODE_FIELD_NUMBER = 1;
    private org.bitcoin.paymentchannel.Protos.Error.ErrorCode code_;
    /**
     * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
     */
    public org.bitcoin.paymentchannel.Protos.Error.ErrorCode getCode() {
      return code_;
    }

    // optional string explanation = 2;
    public static final int EXPLANATION_FIELD_NUMBER = 2;
    private java.lang.Object explanation_;
    /**
     * <code>optional string explanation = 2;</code>
     *
     * <pre>
     * NOT SAFE FOR HTML WITHOUT ESCAPING
     * </pre>
     */
    public boolean hasExplanation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string explanation = 2;</code>
     *
     * <pre>
     * NOT SAFE FOR HTML WITHOUT ESCAPING
     * </pre>
     */
    public java.lang.String getExplanation() {
      java.lang.Object ref = explanation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          explanation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string explanation = 2;</code>
     *
     * <pre>
     * NOT SAFE FOR HTML WITHOUT ESCAPING
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExplanationBytes() {
      java.lang.Object ref = explanation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        explanation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 expected_value = 3;
    public static final int EXPECTED_VALUE_FIELD_NUMBER = 3;
    private long expectedValue_;
    /**
     * <code>optional uint64 expected_value = 3;</code>
     *
     * <pre>
     * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
     * </pre>
     */
    public boolean hasExpectedValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint64 expected_value = 3;</code>
     *
     * <pre>
     * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
     * </pre>
     */
    public long getExpectedValue() {
      return expectedValue_;
    }

    private void initFields() {
      code_ = org.bitcoin.paymentchannel.Protos.Error.ErrorCode.OTHER;
      explanation_ = "";
      expectedValue_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, code_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getExplanationBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, expectedValue_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getExplanationBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, expectedValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.bitcoin.paymentchannel.Protos.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.bitcoin.paymentchannel.Protos.Error prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code paymentchannels.Error}
     *
     * <pre>
     * An Error can be sent by either party at any time
     * Both parties should make an effort to send either an ERROR or a CLOSE immediately before
     * closing the socket (unless they just received an ERROR or a CLOSE)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.bitcoin.paymentchannel.Protos.ErrorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Error_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Error_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.bitcoin.paymentchannel.Protos.Error.class, org.bitcoin.paymentchannel.Protos.Error.Builder.class);
      }

      // Construct using org.bitcoin.paymentchannel.Protos.Error.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        code_ = org.bitcoin.paymentchannel.Protos.Error.ErrorCode.OTHER;
        bitField0_ = (bitField0_ & ~0x00000001);
        explanation_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        expectedValue_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.bitcoin.paymentchannel.Protos.internal_static_paymentchannels_Error_descriptor;
      }

      public org.bitcoin.paymentchannel.Protos.Error getDefaultInstanceForType() {
        return org.bitcoin.paymentchannel.Protos.Error.getDefaultInstance();
      }

      public org.bitcoin.paymentchannel.Protos.Error build() {
        org.bitcoin.paymentchannel.Protos.Error result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.bitcoin.paymentchannel.Protos.Error buildPartial() {
        org.bitcoin.paymentchannel.Protos.Error result = new org.bitcoin.paymentchannel.Protos.Error(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.explanation_ = explanation_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.expectedValue_ = expectedValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.bitcoin.paymentchannel.Protos.Error) {
          return mergeFrom((org.bitcoin.paymentchannel.Protos.Error)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.bitcoin.paymentchannel.Protos.Error other) {
        if (other == org.bitcoin.paymentchannel.Protos.Error.getDefaultInstance()) return this;
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasExplanation()) {
          bitField0_ |= 0x00000002;
          explanation_ = other.explanation_;
          onChanged();
        }
        if (other.hasExpectedValue()) {
          setExpectedValue(other.getExpectedValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.bitcoin.paymentchannel.Protos.Error parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.bitcoin.paymentchannel.Protos.Error) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];
      private org.bitcoin.paymentchannel.Protos.Error.ErrorCode code_ = org.bitcoin.paymentchannel.Protos.Error.ErrorCode.OTHER;
      /**
       * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
       */
      public org.bitcoin.paymentchannel.Protos.Error.ErrorCode getCode() {
        return code_;
      }
      /**
       * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
       */
      public Builder setCode(org.bitcoin.paymentchannel.Protos.Error.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .paymentchannels.Error.ErrorCode code = 1 [default = OTHER];</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        code_ = org.bitcoin.paymentchannel.Protos.Error.ErrorCode.OTHER;
        onChanged();
        return this;
      }

      // optional string explanation = 2;
      private java.lang.Object explanation_ = "";
      /**
       * <code>optional string explanation = 2;</code>
       *
       * <pre>
       * NOT SAFE FOR HTML WITHOUT ESCAPING
       * </pre>
       */
      public boolean hasExplanation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string explanation = 2;</code>
       *
       * <pre>
       * NOT SAFE FOR HTML WITHOUT ESCAPING
       * </pre>
       */
      public java.lang.String getExplanation() {
        java.lang.Object ref = explanation_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          explanation_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string explanation = 2;</code>
       *
       * <pre>
       * NOT SAFE FOR HTML WITHOUT ESCAPING
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExplanationBytes() {
        java.lang.Object ref = explanation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          explanation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string explanation = 2;</code>
       *
       * <pre>
       * NOT SAFE FOR HTML WITHOUT ESCAPING
       * </pre>
       */
      public Builder setExplanation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        explanation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string explanation = 2;</code>
       *
       * <pre>
       * NOT SAFE FOR HTML WITHOUT ESCAPING
       * </pre>
       */
      public Builder clearExplanation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        explanation_ = getDefaultInstance().getExplanation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string explanation = 2;</code>
       *
       * <pre>
       * NOT SAFE FOR HTML WITHOUT ESCAPING
       * </pre>
       */
      public Builder setExplanationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        explanation_ = value;
        onChanged();
        return this;
      }

      // optional uint64 expected_value = 3;
      private long expectedValue_ ;
      /**
       * <code>optional uint64 expected_value = 3;</code>
       *
       * <pre>
       * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
       * </pre>
       */
      public boolean hasExpectedValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 expected_value = 3;</code>
       *
       * <pre>
       * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
       * </pre>
       */
      public long getExpectedValue() {
        return expectedValue_;
      }
      /**
       * <code>optional uint64 expected_value = 3;</code>
       *
       * <pre>
       * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
       * </pre>
       */
      public Builder setExpectedValue(long value) {
        bitField0_ |= 0x00000004;
        expectedValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 expected_value = 3;</code>
       *
       * <pre>
       * Can be set by the client when erroring to the server if a value was out of range. Can help with debugging.
       * </pre>
       */
      public Builder clearExpectedValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        expectedValue_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:paymentchannels.Error)
    }

    static {
      defaultInstance = new Error(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:paymentchannels.Error)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_TwoWayChannelMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_TwoWayChannelMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_ClientVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_ClientVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_ServerVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_ServerVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_Initiate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_Initiate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_ProvideRefund_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_ProvideRefund_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_ReturnRefund_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_ReturnRefund_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_ProvideContract_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_ProvideContract_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_UpdatePayment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_UpdatePayment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_PaymentAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_PaymentAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_Settlement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_Settlement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCProvideContract_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCProvideContract_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCRoundInit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCRoundInit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCRoundAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCRoundAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCRoundDone_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCRoundDone_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCPayment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCPayment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCInit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCInit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCPaymentReply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCPaymentReply_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCInitReply_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCInitReply_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCSignedTransaction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCSignedTransaction_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCProvideSignedTeardown_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCProvideSignedTeardown_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCSignedRefundWithHash_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCSignedRefundWithHash_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCSignedSettleAndForfeit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCSignedSettleAndForfeit_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCSetupComplete_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCSetupComplete_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCRevealSecret_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCRevealSecret_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCBackOff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCBackOff_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCServerUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCServerUpdate_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCPaymentAck_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCPaymentAck_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_HTLCFlow_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_HTLCFlow_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_paymentchannels_Error_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_paymentchannels_Error_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024paymentchannel.proto\022\017paymentchannels\"" +
      "\235\017\n\024TwoWayChannelMessage\022?\n\004type\030\001 \002(\01621" +
      ".paymentchannels.TwoWayChannelMessage.Me" +
      "ssageType\0226\n\016client_version\030\002 \001(\0132\036.paym" +
      "entchannels.ClientVersion\0226\n\016server_vers" +
      "ion\030\003 \001(\0132\036.paymentchannels.ServerVersio" +
      "n\022+\n\010initiate\030\004 \001(\0132\031.paymentchannels.In" +
      "itiate\0226\n\016provide_refund\030\005 \001(\0132\036.payment" +
      "channels.ProvideRefund\0224\n\rreturn_refund\030" +
      "\006 \001(\0132\035.paymentchannels.ReturnRefund\022:\n\020",
      "provide_contract\030\007 \001(\0132 .paymentchannels" +
      ".ProvideContract\0226\n\016update_payment\030\010 \001(\013" +
      "2\036.paymentchannels.UpdatePayment\0220\n\013paym" +
      "ent_ack\030\013 \001(\0132\033.paymentchannels.PaymentA" +
      "ck\022/\n\nsettlement\030\t \001(\0132\033.paymentchannels" +
      ".Settlement\022C\n\025htlc_provide_contract\030\014 \001" +
      "(\0132$.paymentchannels.HTLCProvideContract" +
      "\022,\n\thtlc_init\030\r \001(\0132\031.paymentchannels.HT" +
      "LCInit\0227\n\017htlc_init_reply\030\016 \001(\0132\036.paymen" +
      "tchannels.HTLCInitReply\022H\n\024htlc_signed_t",
      "eardown\030\017 \001(\0132*.paymentchannels.HTLCProv" +
      "ideSignedTeardown\022O\n\034htlc_signed_refund_" +
      "with_hash\030\020 \001(\0132).paymentchannels.HTLCSi" +
      "gnedRefundWithHash\022S\n\036htlc_signed_settle" +
      "_and_forfeit\030\021 \001(\0132+.paymentchannels.HTL" +
      "CSignedSettleAndForfeit\022?\n\023htlc_setup_co" +
      "mplete\030\022 \001(\0132\".paymentchannels.HTLCSetup" +
      "Complete\022=\n\022htlc_server_update\030\023 \001(\0132!.p" +
      "aymentchannels.HTLCServerUpdate\0229\n\020htlc_" +
      "payment_ack\030\025 \001(\0132\037.paymentchannels.HTLC",
      "PaymentAck\0227\n\017htlc_round_init\030\026 \001(\0132\036.pa" +
      "ymentchannels.HTLCRoundInit\0225\n\016htlc_roun" +
      "d_ack\030\027 \001(\0132\035.paymentchannels.HTLCRoundA" +
      "ck\0227\n\017htlc_round_done\030\030 \001(\0132\036.paymentcha" +
      "nnels.HTLCRoundDone\022,\n\thtlc_flow\030\031 \001(\0132\031" +
      ".paymentchannels.HTLCFlow\022%\n\005error\030\n \001(\013" +
      "2\026.paymentchannels.Error\"\214\004\n\013MessageType" +
      "\022\022\n\016CLIENT_VERSION\020\001\022\022\n\016SERVER_VERSION\020\002" +
      "\022\014\n\010INITIATE\020\003\022\022\n\016PROVIDE_REFUND\020\004\022\021\n\rRE" +
      "TURN_REFUND\020\005\022\024\n\020PROVIDE_CONTRACT\020\006\022\020\n\014C",
      "HANNEL_OPEN\020\007\022\022\n\016UPDATE_PAYMENT\020\010\022\017\n\013PAY" +
      "MENT_ACK\020\013\022\t\n\005CLOSE\020\t\022\031\n\025HTLC_PROVIDE_CO" +
      "NTRACT\020\014\022\r\n\tHTLC_INIT\020\r\022\023\n\017HTLC_INIT_REP" +
      "LY\020\016\022\030\n\024HTLC_SIGNED_TEARDOWN\020\017\022\026\n\022HTLC_S" +
      "IGNED_REFUND\020\020\022\036\n\032HTLC_SIGNED_SETTLE_FOR" +
      "FEIT\020\021\022\027\n\023HTLC_SETUP_COMPLETE\020\022\022\026\n\022HTLC_" +
      "SERVER_UPDATE\020\023\022\030\n\024HTLC_UPDATE_TEARDOWN\020" +
      "\024\022\024\n\020HTLC_PAYMENT_ACK\020\025\022\023\n\017HTLC_ROUND_IN" +
      "IT\020\026\022\022\n\016HTLC_ROUND_ACK\020\027\022\023\n\017HTLC_ROUND_D" +
      "ONE\020\030\022\r\n\tHTLC_FLOW\020\031\022\t\n\005ERROR\020\n\"y\n\rClien",
      "tVersion\022\r\n\005major\030\001 \002(\005\022\020\n\005minor\030\002 \001(\005:\001" +
      "0\022&\n\036previous_channel_contract_hash\030\003 \001(" +
      "\014\022\037\n\020time_window_secs\030\004 \001(\004:\00586340\"0\n\rSe" +
      "rverVersion\022\r\n\005major\030\001 \002(\005\022\020\n\005minor\030\002 \001(" +
      "\005:\0010\"r\n\010Initiate\022\024\n\014multisig_key\030\001 \002(\014\022!" +
      "\n\031min_accepted_channel_size\030\002 \002(\004\022\030\n\020exp" +
      "ire_time_secs\030\003 \002(\004\022\023\n\013min_payment\030\004 \002(\004" +
      "\"1\n\rProvideRefund\022\024\n\014multisig_key\030\001 \002(\014\022" +
      "\n\n\002tx\030\002 \002(\014\"!\n\014ReturnRefund\022\021\n\tsignature" +
      "\030\001 \002(\014\"V\n\017ProvideContract\022\n\n\002tx\030\001 \002(\014\0227\n",
      "\017initial_payment\030\002 \002(\0132\036.paymentchannels" +
      ".UpdatePayment\"M\n\rUpdatePayment\022\033\n\023clien" +
      "t_change_value\030\001 \002(\004\022\021\n\tsignature\030\002 \002(\014\022" +
      "\014\n\004info\030\003 \001(\014\"\032\n\nPaymentAck\022\014\n\004info\030\001 \001(" +
      "\014\"\030\n\nSettlement\022\n\n\002tx\030\001 \002(\014\"j\n\023HTLCProvi" +
      "deContract\022\n\n\002tx\030\001 \002(\014\022G\n\027signed_initial" +
      "_teardown\030\002 \002(\0132&.paymentchannels.HTLCSi" +
      "gnedTransaction\"\035\n\rHTLCRoundInit\022\014\n\004info" +
      "\030\001 \001(\014\"\034\n\014HTLCRoundAck\022\014\n\004info\030\001 \001(\014\"\035\n\r" +
      "HTLCRoundDone\022\014\n\004info\030\001 \001(\014\"0\n\013HTLCPayme",
      "nt\022\022\n\nrequest_id\030\001 \002(\014\022\r\n\005value\030\002 \002(\004\">\n" +
      "\010HTLCInit\0222\n\014new_payments\030\001 \003(\0132\034.paymen" +
      "tchannels.HTLCPayment\"9\n\020HTLCPaymentRepl" +
      "y\022\n\n\002id\030\001 \002(\014\022\031\n\021client_request_id\030\002 \002(\014" +
      "\"N\n\rHTLCInitReply\022=\n\022new_payments_reply\030" +
      "\001 \003(\0132!.paymentchannels.HTLCPaymentReply" +
      "\"G\n\025HTLCSignedTransaction\022\n\n\002tx\030\002 \002(\014\022\017\n" +
      "\007tx_hash\030\003 \001(\014\022\021\n\tsignature\030\004 \002(\014\"v\n\031HTL" +
      "CProvideSignedTeardown\022\013\n\003ids\030\001 \003(\014\022\013\n\003i" +
      "dx\030\002 \003(\005\022?\n\017signed_teardown\030\003 \002(\0132&.paym",
      "entchannels.HTLCSignedTransaction\"f\n\030HTL" +
      "CSignedRefundWithHash\022\013\n\003ids\030\001 \003(\014\022=\n\rsi" +
      "gned_refund\030\002 \003(\0132&.paymentchannels.HTLC" +
      "SignedTransaction\"\306\001\n\032HTLCSignedSettleAn" +
      "dForfeit\022\013\n\003ids\030\001 \003(\014\022>\n\016signed_forfeit\030" +
      "\002 \003(\0132&.paymentchannels.HTLCSignedTransa" +
      "ction\022=\n\rsigned_settle\030\003 \003(\0132&.paymentch" +
      "annels.HTLCSignedTransaction\022\034\n\024client_s" +
      "econdary_key\030\004 \002(\014\" \n\021HTLCSetupComplete\022" +
      "\013\n\003ids\030\001 \003(\014\".\n\020HTLCRevealSecret\022\n\n\002id\030\001",
      " \002(\014\022\016\n\006secret\030\002 \002(\014\"Y\n\013HTLCBackOff\022\n\n\002i" +
      "d\030\001 \002(\014\022>\n\016signed_forfeit\030\002 \002(\0132&.paymen" +
      "tchannels.HTLCSignedTransaction\"~\n\020HTLCS" +
      "erverUpdate\0229\n\016reveal_secrets\030\001 \003(\0132!.pa" +
      "ymentchannels.HTLCRevealSecret\022/\n\tback_o" +
      "ffs\030\002 \003(\0132\034.paymentchannels.HTLCBackOff\"" +
      "\034\n\016HTLCPaymentAck\022\n\n\002id\030\001 \002(\014\"j\n\010HTLCFlo" +
      "w\0220\n\004type\030\001 \002(\0162\".paymentchannels.HTLCFl" +
      "ow.FlowType\",\n\010FlowType\022\016\n\nNODE_STATS\020\001\022" +
      "\020\n\014SENSOR_STATS\020\002\"\251\002\n\005Error\0225\n\004code\030\001 \001(",
      "\0162 .paymentchannels.Error.ErrorCode:\005OTH" +
      "ER\022\023\n\013explanation\030\002 \001(\t\022\026\n\016expected_valu" +
      "e\030\003 \001(\004\"\273\001\n\tErrorCode\022\013\n\007TIMEOUT\020\001\022\020\n\014SY" +
      "NTAX_ERROR\020\002\022\031\n\025NO_ACCEPTABLE_VERSION\020\003\022" +
      "\023\n\017BAD_TRANSACTION\020\004\022\034\n\030TIME_WINDOW_UNAC" +
      "CEPTABLE\020\005\022\033\n\027CHANNEL_VALUE_TOO_LARGE\020\006\022" +
      "\031\n\025MIN_PAYMENT_TOO_LARGE\020\007\022\t\n\005OTHER\020\010B$\n" +
      "\032org.bitcoin.paymentchannelB\006Protos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_paymentchannels_TwoWayChannelMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_paymentchannels_TwoWayChannelMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_TwoWayChannelMessage_descriptor,
              new java.lang.String[] { "Type", "ClientVersion", "ServerVersion", "Initiate", "ProvideRefund", "ReturnRefund", "ProvideContract", "UpdatePayment", "PaymentAck", "Settlement", "HtlcProvideContract", "HtlcInit", "HtlcInitReply", "HtlcSignedTeardown", "HtlcSignedRefundWithHash", "HtlcSignedSettleAndForfeit", "HtlcSetupComplete", "HtlcServerUpdate", "HtlcPaymentAck", "HtlcRoundInit", "HtlcRoundAck", "HtlcRoundDone", "HtlcFlow", "Error", });
          internal_static_paymentchannels_ClientVersion_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_paymentchannels_ClientVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_ClientVersion_descriptor,
              new java.lang.String[] { "Major", "Minor", "PreviousChannelContractHash", "TimeWindowSecs", });
          internal_static_paymentchannels_ServerVersion_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_paymentchannels_ServerVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_ServerVersion_descriptor,
              new java.lang.String[] { "Major", "Minor", });
          internal_static_paymentchannels_Initiate_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_paymentchannels_Initiate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_Initiate_descriptor,
              new java.lang.String[] { "MultisigKey", "MinAcceptedChannelSize", "ExpireTimeSecs", "MinPayment", });
          internal_static_paymentchannels_ProvideRefund_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_paymentchannels_ProvideRefund_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_ProvideRefund_descriptor,
              new java.lang.String[] { "MultisigKey", "Tx", });
          internal_static_paymentchannels_ReturnRefund_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_paymentchannels_ReturnRefund_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_ReturnRefund_descriptor,
              new java.lang.String[] { "Signature", });
          internal_static_paymentchannels_ProvideContract_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_paymentchannels_ProvideContract_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_ProvideContract_descriptor,
              new java.lang.String[] { "Tx", "InitialPayment", });
          internal_static_paymentchannels_UpdatePayment_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_paymentchannels_UpdatePayment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_UpdatePayment_descriptor,
              new java.lang.String[] { "ClientChangeValue", "Signature", "Info", });
          internal_static_paymentchannels_PaymentAck_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_paymentchannels_PaymentAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_PaymentAck_descriptor,
              new java.lang.String[] { "Info", });
          internal_static_paymentchannels_Settlement_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_paymentchannels_Settlement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_Settlement_descriptor,
              new java.lang.String[] { "Tx", });
          internal_static_paymentchannels_HTLCProvideContract_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_paymentchannels_HTLCProvideContract_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCProvideContract_descriptor,
              new java.lang.String[] { "Tx", "SignedInitialTeardown", });
          internal_static_paymentchannels_HTLCRoundInit_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_paymentchannels_HTLCRoundInit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCRoundInit_descriptor,
              new java.lang.String[] { "Info", });
          internal_static_paymentchannels_HTLCRoundAck_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_paymentchannels_HTLCRoundAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCRoundAck_descriptor,
              new java.lang.String[] { "Info", });
          internal_static_paymentchannels_HTLCRoundDone_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_paymentchannels_HTLCRoundDone_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCRoundDone_descriptor,
              new java.lang.String[] { "Info", });
          internal_static_paymentchannels_HTLCPayment_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_paymentchannels_HTLCPayment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCPayment_descriptor,
              new java.lang.String[] { "RequestId", "Value", });
          internal_static_paymentchannels_HTLCInit_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_paymentchannels_HTLCInit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCInit_descriptor,
              new java.lang.String[] { "NewPayments", });
          internal_static_paymentchannels_HTLCPaymentReply_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_paymentchannels_HTLCPaymentReply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCPaymentReply_descriptor,
              new java.lang.String[] { "Id", "ClientRequestId", });
          internal_static_paymentchannels_HTLCInitReply_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_paymentchannels_HTLCInitReply_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCInitReply_descriptor,
              new java.lang.String[] { "NewPaymentsReply", });
          internal_static_paymentchannels_HTLCSignedTransaction_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_paymentchannels_HTLCSignedTransaction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCSignedTransaction_descriptor,
              new java.lang.String[] { "Tx", "TxHash", "Signature", });
          internal_static_paymentchannels_HTLCProvideSignedTeardown_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_paymentchannels_HTLCProvideSignedTeardown_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCProvideSignedTeardown_descriptor,
              new java.lang.String[] { "Ids", "Idx", "SignedTeardown", });
          internal_static_paymentchannels_HTLCSignedRefundWithHash_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_paymentchannels_HTLCSignedRefundWithHash_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCSignedRefundWithHash_descriptor,
              new java.lang.String[] { "Ids", "SignedRefund", });
          internal_static_paymentchannels_HTLCSignedSettleAndForfeit_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_paymentchannels_HTLCSignedSettleAndForfeit_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCSignedSettleAndForfeit_descriptor,
              new java.lang.String[] { "Ids", "SignedForfeit", "SignedSettle", "ClientSecondaryKey", });
          internal_static_paymentchannels_HTLCSetupComplete_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_paymentchannels_HTLCSetupComplete_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCSetupComplete_descriptor,
              new java.lang.String[] { "Ids", });
          internal_static_paymentchannels_HTLCRevealSecret_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_paymentchannels_HTLCRevealSecret_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCRevealSecret_descriptor,
              new java.lang.String[] { "Id", "Secret", });
          internal_static_paymentchannels_HTLCBackOff_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_paymentchannels_HTLCBackOff_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCBackOff_descriptor,
              new java.lang.String[] { "Id", "SignedForfeit", });
          internal_static_paymentchannels_HTLCServerUpdate_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_paymentchannels_HTLCServerUpdate_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCServerUpdate_descriptor,
              new java.lang.String[] { "RevealSecrets", "BackOffs", });
          internal_static_paymentchannels_HTLCPaymentAck_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_paymentchannels_HTLCPaymentAck_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCPaymentAck_descriptor,
              new java.lang.String[] { "Id", });
          internal_static_paymentchannels_HTLCFlow_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_paymentchannels_HTLCFlow_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_HTLCFlow_descriptor,
              new java.lang.String[] { "Type", });
          internal_static_paymentchannels_Error_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_paymentchannels_Error_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_paymentchannels_Error_descriptor,
              new java.lang.String[] { "Code", "Explanation", "ExpectedValue", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
